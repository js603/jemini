{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction,updateDoc}from'firebase/firestore';// ====================================================================\n// Firebase configuration information - 수정 금지\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};// 수정금지\nconst firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;const initialAuthToken=null;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore 경로 유틸\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');// 상태 초기화 유틸\nconst getDefaultGameState=()=>({phase:'playing',log:[],choices:[],player:{currentLocation:'방랑자의 안식처'}});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',reputation:{},activeQuests:[],companions:[],knownClues:[],characterCreated:false,profession:'',choices:[]});function App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[currentChatMessage,setCurrentChatMessage]=useState('');const[actingPlayer,setActingPlayer]=useState(null);const[isActionInProgress,setIsActionInProgress]=useState(false);const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const logEndRef=useRef(null);const chatEndRef=useRef(null);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[accordion,setAccordion]=useState({gameLog:true,chat:true,users:true,playerInfo:true});const[showResetModal,setShowResetModal]=useState(false);const[isResetting,setIsResetting]=useState(false);const[llmError,setLlmError]=useState(null);const[llmRetryPrompt,setLlmRetryPrompt]=useState(null);const[isLoading,setIsLoading]=useState(true);const handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);if(userId&&db){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{nickname:finalNickname},{merge:true});}}};const getDisplayName=uid=>{if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const resetAllGameData=async()=>{if(!db||!isAuthReady)return;setIsResetting(true);try{const collectionsToDelete=[collection(db,'artifacts',appId,'public','data','chatMessages'),collection(db,'artifacts',appId,'public','data','activeUsers')];for(const colRef of collectionsToDelete){const snapshot=await getDocs(colRef);for(const docSnap of snapshot.docs){await deleteDoc(docSnap.ref);}}const usersColRef=collection(db,'artifacts',appId,'users');const usersSnapshot=await getDocs(usersColRef);for(const userDoc of usersSnapshot.docs){await deleteDoc(doc(db,'artifacts',appId,'users',userDoc.id));}const mainScenarioRef=getMainScenarioRef(db,appId);await deleteDoc(mainScenarioRef);const gameStatusRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');await deleteDoc(gameStatusRef);setGameState(getDefaultGameState());setPrivatePlayerState(getDefaultPrivatePlayerState());setChatMessages([]);if(userId){const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);await setDoc(privateStateRef,getDefaultPrivatePlayerState());}}catch(e){console.error(\"Data reset error:\",e);}finally{setIsResetting(false);setShowResetModal(false);window.location.reload();}};useEffect(()=>{try{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{await(initialAuthToken?signInWithCustomToken(firebaseAuth,initialAuthToken):signInAnonymously(firebaseAuth));}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);setLlmError(\"Firebase 초기화에 실패했습니다.\");}},[]);// [FIXED] 안정적인 플레이어 상태 초기화를 위한 로직 수정\nuseEffect(()=>{if(!db||!userId||!isAuthReady)return;const setupPlayerState=async()=>{setIsLoading(true);const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);try{// 1. 먼저 파일이 있는지 단 한번만 확인 (getDoc)\nconst docSnap=await getDoc(privateStateRef);// 2. 파일이 없다면, 생성이 완료될 때까지 기다림 (await setDoc)\nif(!docSnap.exists()){await setDoc(privateStateRef,getDefaultPrivatePlayerState());}// 3. 모든 준비가 끝났으니, 실시간 리스너를 붙임\nconst unsubscribe=onSnapshot(privateStateRef,snapshot=>{if(snapshot.exists()){setPrivatePlayerState({...getDefaultPrivatePlayerState(),...snapshot.data()});setIsLoading(false);// 가장 안전한 시점에 로딩 종료\n}},err=>{console.error(\"실시간 데이터 수신 오류:\",err);setLlmError(\"데이터 수신 중 오류가 발생했습니다.\");setIsLoading(false);});return unsubscribe;// 나중에 연결을 끊기 위해 반환\n}catch(error){console.error(\"플레이어 상태 설정 오류:\",error);setLlmError(\"플레이어 정보를 가져오는 데 실패했습니다.\");setIsLoading(false);}};let unsubscribePromise=setupPlayerState();return()=>{// 컴포넌트가 언마운트될 때 promise가 완료되면 구독을 취소\nunsubscribePromise.then(unsub=>{if(unsub)unsub();});};},[db,userId,isAuthReady]);useEffect(()=>{if(isLoading||!db||!isAuthReady||!userId||!auth)return;if(!privatePlayerState.characterCreated)return;const gameStatusDocRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');const unsubscribeGameStatus=onSnapshot(gameStatusDocRef,docSnap=>{const data=docSnap.data();setIsActionInProgress((data===null||data===void 0?void 0:data.isActionInProgress)||false);setActingPlayer((data===null||data===void 0?void 0:data.actingPlayer)||null);});const chatMessagesColRef=collection(db,'artifacts',appId,'public','data','chatMessages');const unsubscribeChat=onSnapshot(query(chatMessagesColRef),snapshot=>{const messages=snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});setChatMessages(messages);});const activeUsersColRef=collection(db,'artifacts',appId,'public','data','activeUsers');const unsubscribeActiveUsers=onSnapshot(query(activeUsersColRef),snapshot=>{const cutoffTime=Date.now()-60*1000;const users=snapshot.docs.map(d=>({id:d.id,...d.data()})).filter(u=>u.lastActive&&u.lastActive.toMillis()>cutoffTime);setActiveUsers(users);});const mainScenarioRef=getMainScenarioRef(db,appId);const unsubscribeMainScenario=onSnapshot(mainScenarioRef,snap=>{if(snap.exists()){const data=snap.data();setGameState(prev=>{var _data$player;return{...prev,log:data.storyLog||[],choices:data.choices||[],player:{...prev.player,currentLocation:((_data$player=data.player)===null||_data$player===void 0?void 0:_data$player.currentLocation)||prev.player.currentLocation}};});}},error=>{console.error(\"Main scenario snapshot error:\",error);setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");});return()=>{unsubscribeGameStatus();unsubscribeChat();unsubscribeActiveUsers();unsubscribeMainScenario();};},[db,isAuthReady,userId,auth,isLoading,privatePlayerState.characterCreated]);useEffect(()=>{if(!db||!userId||!nickname)return;const updateUserPresence=async()=>{const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);await setDoc(userDocRef,{lastActive:serverTimestamp(),nickname:nickname||`플레이어 ${userId.substring(0,4)}`,profession:privatePlayerState.profession},{merge:true});};const handleVisibilityChange=()=>{if(document.visibilityState==='visible'){updateUserPresence();}};document.addEventListener('visibilitychange',handleVisibilityChange);updateUserPresence();return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[db,userId,nickname,privatePlayerState.profession]);useEffect(()=>{if(accordion.gameLog&&logEndRef.current)logEndRef.current.scrollIntoView({behavior:\"smooth\"});},[gameState.log,accordion.gameLog]);useEffect(()=>{if(accordion.chat&&chatEndRef.current)chatEndRef.current.scrollIntoView({behavior:\"smooth\"});},[chatMessages,accordion.chat]);const systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 TRPG(Tabletop Role-Playing Game)의 최고 실력자 '게임 마스터(GM)'입니다. 당신의 임무는 단순한 스토리 생성이 아니라, 각 플레이어가 자신의 서사의 주인공이 되면서도, 모두가 하나의 거대한 세계관 속에서 살아 숨 쉬고 있다는 느낌을 받도록 만드는 것입니다. 당신은 유려한 문장가이자, 치밀한 설계자이며, 플레이어들의 행동에 즉각적으로 반응하는 유연한 스토리텔러입니다.\n\n    ### 핵심 철학: 하이브리드 월드 (Hybrid World)\n    이 세계는 '공유된 현실'과 '개인적인 서사'가 공존합니다.\n    1.  **공유된 현실 (Shared Reality):** 세상의 중요한 사건, 장소의 변화, 주요 NPC의 죽음 등은 모든 플레이어가 함께 경험하는 절대적인 현실입니다. 이는 'story'와 'sharedStateUpdates'로 표현됩니다.\n    2.  **개인적인 서사 (Personal Narrative):** 플레이어의 내면의 생각, 남들은 모르는 비밀 지식, 개인적인 퀘스트의 진행 등은 오직 그 플레이어에게만 주어지는 고유한 경험입니다. 이는 'privateStory', 'privateChoices', 'privateStateUpdates'로 표현됩니다.\n\n    ### 스토리텔링 원칙\n    * **보여주되, 말하지 말라 (Show, Don't Tell):** '그는 화가 났다'가 아니라 '그는 주먹을 불끈 쥐었다'라고 묘사하십시오.\n    * **역할 존중:** 플레이어의 직업, 능력치, 아이템, 그리고 특히 **'[개인 정보]'**에 담긴 단서('knownClues')나 퀘스트('activeQuests')는 당신이 스토리를 만들 때 가장 먼저 고려해야 할 재료입니다. 이것이 개인화된 경험의 핵심입니다.\n    * **살아있는 세계:** '[주변 플레이어]' 정보를 활용하여 다른 플레이어들의 존재를 이야기에 자연스럽게 녹여내십시오. 그들의 등장은 단순한 배경이 아니라, 새로운 사건의 계기가 되어야 합니다.\n    * **선택의 무게:** 플레이어의 선택은 반드시 의미 있는 결과를 가져와야 합니다. 사소한 선택이 나비효과를 일으킬 수도 있습니다.\n\n    ### JSON 출력 규칙 (매우 중요)\n    당신은 반드시 아래의 JSON 구조를 완벽하게 따라야 합니다. 설명(comment)은 절대 포함하지 마십시오.\n    {\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사. 이 사건의 결과로 세상이 어떻게 변했는지 객관적으로 묘사합니다.\",\n      \"privateStory\": \"선택을 한 플레이어만 볼 수 있는 2인칭 서사. '당신은...', '...라고 느낀다.' 와 같이 내면의 생각, 감각, 남들이 눈치채지 못한 미세한 발견 등을 묘사합니다.\",\n      \"choices\": [\n        \"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"\n      ],\n      \"privateChoices\": [\n        \"오직 이 플레이어의 직업, 아이템, 퀘스트, 단서 때문에 가능한 특별한 행동들.\"\n      ],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함됩니다.\"\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, ...},\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\n        \"knownClues\": [\"새롭게 알게 된 단서를 포함한 전체 단서 목록\"],\n        \"companions\": [\"업데이트된 동료 목록\"],\n        \"reputation\": {\"세력명\": \"상태\", ...}\n      }\n    }\n\n    ### 규칙 상세\n    * 'privateChoices' 예시: 플레이어의 'knownClues'에 '가문의 문장'이 있다면, \"가문의 문장을 제단에 맞춰본다.\" 와 같은 선택지를 제공하십시오.\n    * **상태 업데이트:** 'privateStateUpdates'의 모든 필드는 **변경 여부와 관계없이 항상 현재 플레이어의 전체 상태를 포함**하여 보내야 합니다. 예를 들어, 아이템을 하나 얻었다면, 기존 아이템을 포함한 전체 인벤토리 목록을 'inventory'에 담아야 합니다.\n    * 'story'와 'privateStory'는 합쳐서 500자 이내로 간결하게 작성하십시오.\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);setLlmRetryPrompt(promptData);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const backupApiKey=\"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const history=promptData.history.map(event=>event.publicStory).slice(-5);const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로 플레이어의 행동에 대한 결과를 생성해주십시오.\n\n      [공유 컨텍스트]\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 이전 주요 사건 로그 (최대 5개): ${JSON.stringify(history)}\n\n      [개인 정보 (현재 플레이어)]\n      - 직업: ${promptData.privateInfo.profession}\n      - 능력치: ${JSON.stringify(promptData.privateInfo.stats)}\n      - 인벤토리: ${JSON.stringify(promptData.privateInfo.inventory)}\n      - 활성 퀘스트: ${JSON.stringify(promptData.privateInfo.activeQuests)}\n      - 알려진 단서: ${JSON.stringify(promptData.privateInfo.knownClues)}\n      - 평판: ${JSON.stringify(promptData.privateInfo.reputation)}\n\n      [플레이어의 행동]\n      - 선택: \"${promptData.playerChoice}\"\n\n      [주변 플레이어]\n      - ${promptData.activeUsers.length>0?JSON.stringify(promptData.activeUsers):\"현재 주변에 다른 플레이어가 없습니다.\"}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};const tryGeminiCall=async apiKey=>fetch(getApiUrl(apiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;let response=await tryGeminiCall(mainApiKey);if(!response.ok){response=await tryGeminiCall(backupApiKey);}if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}finally{setIsTextLoading(false);}};const sendChatMessage=async()=>{if(!db||!userId||!isAuthReady||!currentChatMessage.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message:currentChatMessage,timestamp:serverTimestamp()});setCurrentChatMessage('');}catch(error){console.error(\"Error sending chat message:\",error);}};const updatePublicState=async(llmResponse,playerChoice)=>{const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:playerChoice,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",privateStories:{[userId]:llmResponse.privateStory||null},timestamp:new Date()};await runTransaction(db,async transaction=>{var _llmResponse$sharedSt;const scenarioDoc=await transaction.get(mainScenarioRef);if(!scenarioDoc.exists())throw\"시나리오 문서가 없습니다.\";const currentData=scenarioDoc.data();const newStoryLog=[...(currentData.storyLog||[]),newEvent];transaction.update(mainScenarioRef,{storyLog:newStoryLog,choices:llmResponse.choices||[],'player.currentLocation':((_llmResponse$sharedSt=llmResponse.sharedStateUpdates)===null||_llmResponse$sharedSt===void 0?void 0:_llmResponse$sharedSt.location)||currentData.player.currentLocation,lastUpdate:serverTimestamp()});});};const updatePrivateState=async llmResponse=>{const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);const updates={...llmResponse.privateStateUpdates,choices:llmResponse.privateChoices||[]};await setDoc(privateStateRef,updates,{merge:true});};const handleChoiceClick=async choice=>{if(isTextLoading)return;if(!privatePlayerState.characterCreated){setIsTextLoading(true);const choiceKey=choice.split('.')[0];const selectedProfession=professions[choiceKey];if(selectedProfession){const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);await setDoc(privateStateRef,{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name,initialMotivation:selectedProfession.motivation},{merge:true});const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,privateStories:{[userId]:selectedProfession.motivation},timestamp:new Date()};try{await runTransaction(db,async transaction=>{const scenarioDoc=await transaction.get(mainScenarioRef);const initialChoices=[\"여관을 둘러본다.\",\"다른 모험가에게 말을 건다.\",\"여관 주인에게 정보를 묻는다.\"];if(!scenarioDoc.exists()){transaction.set(mainScenarioRef,{...getDefaultGameState(),storyLog:[newEvent],choices:initialChoices,lastUpdate:serverTimestamp()});}else{transaction.update(mainScenarioRef,{storyLog:[...(scenarioDoc.data().storyLog||[]),newEvent],choices:initialChoices,lastUpdate:serverTimestamp()});}});}catch(e){console.error(\"등장 이벤트 추가 실패: \",e);setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");}finally{setIsTextLoading(false);}}return;}const isPublicChoice=gameState.choices.includes(choice);const gameStatusRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');setIsTextLoading(true);try{if(isPublicChoice){if(isActionInProgress){throw new Error(\"다른 플레이어가 주요 행동을 하고 있습니다. 잠시 후 다시 시도해주세요.\");}await setDoc(gameStatusRef,{isActionInProgress:true,actingPlayer:{id:userId,displayName:getDisplayName(userId)}},{merge:true});}const promptData={playerChoice:choice,sharedInfo:{currentLocation:gameState.player.currentLocation},privateInfo:privatePlayerState,history:gameState.log,activeUsers:activeUsers.map(u=>({nickname:getDisplayName(u.id),profession:u.profession})).filter(u=>u.id!==userId)};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){if(isPublicChoice){await updatePublicState(llmResponse,choice);}await updatePrivateState(llmResponse);setLlmError(null);setLlmRetryPrompt(null);}else{// llmResponse가 null이면 callGeminiTextLLM 내부에서 이미 setLlmError가 호출됨\n// 추가적인 오류 메시지를 설정할 수 있음\nif(!llmError){setLlmError(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");}}}catch(error){console.error(\"행동 처리 중 오류:\",error.message);setLlmError(error.message);}finally{if(isPublicChoice){await setDoc(gameStatusRef,{isActionInProgress:false,actingPlayer:null},{merge:true});}setIsTextLoading(false);}};const toggleAccordion=key=>{setAccordion(prev=>({...prev,[key]:!prev[key]}));};// [FIXED] 재사용 가능한 오류 모달 UI\nconst LlmErrorModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:llmError}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[llmRetryPrompt&&/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\",onClick:async()=>{setLlmError(null);// llmRetryPrompt에서 playerChoice를 가져와 handleChoiceClick 호출\nif(llmRetryPrompt.playerChoice){await handleChoiceClick(llmRetryPrompt.playerChoice);}},children:\"\\uC7AC\\uC2DC\\uB3C4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>{setLlmError(null);setLlmRetryPrompt(null);},children:\"\\uB2EB\\uAE30\"})]})]})});if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uC2DC\\uC791\\uD558\\uAE30\"})]})});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\",children:[llmError&&/*#__PURE__*/_jsx(LlmErrorModal,{}),showResetModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\u26A0\\uFE0F \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB97C \\uCD08\\uAE30\\uD654\\uD560\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:\"\\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA8\\uB4E0 \\uC2DC\\uB098\\uB9AC\\uC624, \\uB85C\\uADF8, \\uC720\\uC800, \\uCC44\\uD305 \\uB370\\uC774\\uD130\\uAC00 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setShowResetModal(false),disabled:isResetting,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\",onClick:resetAllGameData,disabled:isResetting,children:isResetting?'초기화 중...':'초기화'})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('gameLog'),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-gray-100\",children:\"\\uAC8C\\uC784 \\uB85C\\uADF8\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.gameLog?'▼':'▲'})]}),accordion.gameLog&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\",onClick:()=>setShowResetModal(true),children:\"\\uC804\\uCCB4 \\uB370\\uC774\\uD130 \\uCD08\\uAE30\\uD654\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",style:{maxHeight:'24rem'},children:[!privatePlayerState.characterCreated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 font-semibold italic text-lg\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"})]}),gameState.log.map((event,index)=>{var _event$actor;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50\",children:[((_event$actor=event.actor)===null||_event$actor===void 0?void 0:_event$actor.displayName)&&event.action&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[event.actor.displayName,\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",dangerouslySetInnerHTML:{__html:(event.publicStory||'').replace(/\\n/g,'<br />')}}),event.privateStories&&event.privateStories[userId]&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uB2F9\\uC2E0\\uB9CC \\uC544\\uB294 \\uC0AC\\uC2E4] \"}),event.privateStories[userId]]})]},index);}),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),isActionInProgress&&(!actingPlayer||actingPlayer.id!==userId)&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\",children:actingPlayer?`${getDisplayName(actingPlayer.id)}님이 주요 행동을 하고 있습니다...`:\"다른 플레이어가 주요 행동을 하고 있습니다...\"}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:privatePlayerState.characterCreated?[...gameState.choices,...(privatePlayerState.choices||[])].map((choice,index)=>{var _privatePlayerState$c;return/*#__PURE__*/_jsxs(\"button\",{className:`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\n                            ${gameState.choices.includes(choice)?'bg-blue-600 hover:bg-blue-700 text-white':'bg-purple-600 hover:bg-purple-700 text-white'}`,onClick:()=>handleChoiceClick(choice),disabled:isTextLoading||gameState.choices.includes(choice)&&isActionInProgress,children:[((_privatePlayerState$c=privatePlayerState.choices)===null||_privatePlayerState$c===void 0?void 0:_privatePlayerState$c.includes(choice))&&'[개인] ',choice]},index);}):Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick(`${key}. ${professions[key].name}`),disabled:isTextLoading,className:\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300\",children:`${key}. ${professions[key].name}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('playerInfo'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.playerInfo?'▼':'▲'})]}),accordion.playerInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",privatePlayerState.profession||'미정']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",gameState.player.currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",privatePlayerState.stats.strength,\") \\uC9C0\\uB2A5(\",privatePlayerState.stats.intelligence,\") \\uBBFC\\uCCA9(\",privatePlayerState.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",privatePlayerState.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",privatePlayerState.inventory.join(', ')||'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",privatePlayerState.activeQuests.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2E8\\uC11C:\"}),\" \",privatePlayerState.knownClues.join(', ')||'없음']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('users'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.users?'▼':'▲'})]}),accordion.users&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate p-1 rounded-md\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-300\",children:getDisplayName(user.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\" (\",user.profession||'모험가',\")\"]})]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('chat'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.chat?'▼':'▲'})]}),accordion.chat&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex flex-col h-64\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\",children:[chatMessages.map(msg=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",msg.message]})},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\",value:currentChatMessage,onChange:e=>setCurrentChatMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&sendChatMessage(),disabled:!isAuthReady}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\",onClick:sendChatMessage,disabled:!isAuthReady||!currentChatMessage.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","updateDoc","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","initialAuthToken","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getDefaultGameState","phase","log","choices","player","currentLocation","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","reputation","activeQuests","companions","knownClues","characterCreated","profession","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","isTextLoading","setIsTextLoading","activeUsers","setActiveUsers","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","actingPlayer","setActingPlayer","isActionInProgress","setIsActionInProgress","setDb","auth","setAuth","setUserId","isAuthReady","setIsAuthReady","logEndRef","chatEndRef","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","accordion","setAccordion","gameLog","chat","users","playerInfo","showResetModal","setShowResetModal","isResetting","setIsResetting","llmError","setLlmError","llmRetryPrompt","setLlmRetryPrompt","isLoading","setIsLoading","handleNicknameSubmit","trim","finalNickname","setItem","userDocRef","merge","getDisplayName","uid","substring","user","find","u","id","resetAllGameData","collectionsToDelete","colRef","snapshot","docSnap","docs","ref","usersColRef","usersSnapshot","userDoc","mainScenarioRef","gameStatusRef","privateStateRef","e","console","error","window","location","reload","app","firestoreDb","firebaseAuth","unsubscribeAuth","setupPlayerState","exists","unsubscribe","data","err","unsubscribePromise","then","unsub","gameStatusDocRef","unsubscribeGameStatus","chatMessagesColRef","unsubscribeChat","messages","map","d","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","activeUsersColRef","unsubscribeActiveUsers","cutoffTime","Date","now","filter","lastActive","unsubscribeMainScenario","snap","prev","_data$player","storyLog","updateUserPresence","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","backupApiKey","getApiUrl","history","event","publicStory","slice","userPrompt","sharedInfo","JSON","stringify","privateInfo","playerChoice","length","payload","contents","role","parts","text","tryGeminiCall","fetch","method","headers","body","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","message","sendChatMessage","chatCollectionRef","displayName","updatePublicState","llmResponse","newEvent","actor","action","story","privateStories","privateStory","transaction","_llmResponse$sharedSt","scenarioDoc","get","currentData","newStoryLog","update","sharedStateUpdates","lastUpdate","updatePrivateState","updates","privateStateUpdates","privateChoices","handleChoiceClick","choice","choiceKey","split","selectedProfession","initialChoices","set","isPublicChoice","includes","toggleAccordion","key","LlmErrorModal","className","children","onClick","placeholder","value","onChange","target","onKeyDown","autoFocus","disabled","style","maxHeight","index","_event$actor","dangerouslySetInnerHTML","__html","replace","_privatePlayerState$c","Object","keys","join","msg","type","onKeyPress"],"sources":["/workspace/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { initializeApp } from 'firebase/app';\nimport {\n  getAuth,\n  signInAnonymously,\n  signInWithCustomToken,\n  onAuthStateChanged\n} from 'firebase/auth';\nimport {\n  getFirestore,\n  doc,\n  setDoc,\n  getDoc,\n  collection,\n  query,\n  onSnapshot,\n  serverTimestamp,\n  addDoc,\n  getDocs,\n  deleteDoc,\n  runTransaction,\n  updateDoc\n} from 'firebase/firestore';\n\n// ====================================================================\n// Firebase configuration information - 수정 금지\nconst defaultFirebaseConfig = {\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\n  projectId: \"text-adventure-game-cb731\",\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\n  messagingSenderId: \"1092941614820\",\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\n  measurementId: \"G-FNGF42T1FP\"\n};\n\n// 수정금지\nconst firebaseConfig = defaultFirebaseConfig;\nconst appId = firebaseConfig.projectId;\nconst initialAuthToken = null;\n// ====================================================================\n\nconst professions = {\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\n};\n\n// Firestore 경로 유틸\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\n\n// 상태 초기화 유틸\nconst getDefaultGameState = () => ({\n  phase: 'playing',\n  log: [],\n  choices: [],\n  player: {\n    currentLocation: '방랑자의 안식처',\n  },\n});\n\nconst getDefaultPrivatePlayerState = () => ({\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\n    inventory: [],\n    initialMotivation: '',\n    reputation: {},\n    activeQuests: [],\n    companions: [],\n    knownClues: [],\n    characterCreated: false,\n    profession: '',\n    choices: [],\n});\n\n\nfunction App() {\n  const [gameState, setGameState] = useState(getDefaultGameState());\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\n  const [isTextLoading, setIsTextLoading] = useState(false);\n  const [activeUsers, setActiveUsers] = useState([]);\n  const [chatMessages, setChatMessages] = useState([]);\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\n  const [actingPlayer, setActingPlayer] = useState(null);\n  const [isActionInProgress, setIsActionInProgress] = useState(false);\n  const [db, setDb] = useState(null);\n  const [auth, setAuth] = useState(null);\n  const [userId, setUserId] = useState(null);\n  const [isAuthReady, setIsAuthReady] = useState(false);\n  const logEndRef = useRef(null);\n  const chatEndRef = useRef(null);\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\n  const [nicknameInput, setNicknameInput] = useState('');\n  const [accordion, setAccordion] = useState({ gameLog: true, chat: true, users: true, playerInfo: true });\n  const [showResetModal, setShowResetModal] = useState(false);\n  const [isResetting, setIsResetting] = useState(false);\n  const [llmError, setLlmError] = useState(null);\n  const [llmRetryPrompt, setLlmRetryPrompt] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleNicknameSubmit = () => {\n    if (nicknameInput.trim()) {\n      const finalNickname = nicknameInput.trim();\n      setNickname(finalNickname);\n      localStorage.setItem('nickname', finalNickname);\n      setShowNicknameModal(false);\n      if (userId && db) {\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\n          setDoc(userDocRef, { nickname: finalNickname }, { merge: true });\n      }\n    }\n  };\n\n  const getDisplayName = (uid) => {\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\n    const user = activeUsers.find(u => u.id === uid);\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\n  };\n\n  const resetAllGameData = async () => {\n    if (!db || !isAuthReady) return;\n    setIsResetting(true);\n    try {\n        const collectionsToDelete = [\n            collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages'),\n            collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers'),\n        ];\n\n        for (const colRef of collectionsToDelete) {\n            const snapshot = await getDocs(colRef);\n            for (const docSnap of snapshot.docs) {\n                await deleteDoc(docSnap.ref);\n            }\n        }\n\n        const usersColRef = collection(db, 'artifacts', appId, 'users');\n        const usersSnapshot = await getDocs(usersColRef);\n        for (const userDoc of usersSnapshot.docs) {\n            await deleteDoc(doc(db, 'artifacts', appId, 'users', userDoc.id));\n        }\n\n        const mainScenarioRef = getMainScenarioRef(db, appId);\n        await deleteDoc(mainScenarioRef);\n\n        const gameStatusRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\n        await deleteDoc(gameStatusRef);\n\n        setGameState(getDefaultGameState());\n        setPrivatePlayerState(getDefaultPrivatePlayerState());\n        setChatMessages([]);\n\n        if (userId) {\n          const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\n          await setDoc(privateStateRef, getDefaultPrivatePlayerState());\n        }\n\n    } catch (e) {\n        console.error(\"Data reset error:\", e);\n    } finally {\n      setIsResetting(false);\n      setShowResetModal(false);\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    try {\n      const app = initializeApp(firebaseConfig);\n      const firestoreDb = getFirestore(app);\n      const firebaseAuth = getAuth(app);\n      setDb(firestoreDb);\n      setAuth(firebaseAuth);\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\n        if (user) {\n          setUserId(user.uid);\n          setIsAuthReady(true);\n        } else {\n            await (initialAuthToken ? signInWithCustomToken(firebaseAuth, initialAuthToken) : signInAnonymously(firebaseAuth));\n        }\n      });\n      return () => unsubscribeAuth();\n    } catch (error) {\n      console.error(\"Firebase initialization error:\", error);\n      setLlmError(\"Firebase 초기화에 실패했습니다.\");\n    }\n  }, []);\n\n  // [FIXED] 안정적인 플레이어 상태 초기화를 위한 로직 수정\n  useEffect(() => {\n    if (!db || !userId || !isAuthReady) return;\n\n    const setupPlayerState = async () => {\n      setIsLoading(true);\n      const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\n      try {\n        // 1. 먼저 파일이 있는지 단 한번만 확인 (getDoc)\n        const docSnap = await getDoc(privateStateRef);\n\n        // 2. 파일이 없다면, 생성이 완료될 때까지 기다림 (await setDoc)\n        if (!docSnap.exists()) {\n          await setDoc(privateStateRef, getDefaultPrivatePlayerState());\n        }\n\n        // 3. 모든 준비가 끝났으니, 실시간 리스너를 붙임\n        const unsubscribe = onSnapshot(privateStateRef, (snapshot) => {\n          if (snapshot.exists()) {\n            setPrivatePlayerState({ ...getDefaultPrivatePlayerState(), ...snapshot.data() });\n            setIsLoading(false); // 가장 안전한 시점에 로딩 종료\n          }\n        }, (err) => {\n          console.error(\"실시간 데이터 수신 오류:\", err);\n          setLlmError(\"데이터 수신 중 오류가 발생했습니다.\");\n          setIsLoading(false);\n        });\n        return unsubscribe; // 나중에 연결을 끊기 위해 반환\n\n      } catch (error) {\n        console.error(\"플레이어 상태 설정 오류:\", error);\n        setLlmError(\"플레이어 정보를 가져오는 데 실패했습니다.\");\n        setIsLoading(false);\n      }\n    };\n\n    let unsubscribePromise = setupPlayerState();\n\n    return () => {\n      // 컴포넌트가 언마운트될 때 promise가 완료되면 구독을 취소\n      unsubscribePromise.then(unsub => {\n        if (unsub) unsub();\n      });\n    };\n  }, [db, userId, isAuthReady]);\n\n\n  useEffect(() => {\n    if (isLoading || !db || !isAuthReady || !userId || !auth) return;\n\n    if (!privatePlayerState.characterCreated) return;\n\n    const gameStatusDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\n    const unsubscribeGameStatus = onSnapshot(gameStatusDocRef, (docSnap) => {\n      const data = docSnap.data();\n      setIsActionInProgress(data?.isActionInProgress || false);\n      setActingPlayer(data?.actingPlayer || null);\n    });\n\n    const chatMessagesColRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\n    const unsubscribeChat = onSnapshot(query(chatMessagesColRef), (snapshot) => {\n        const messages = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\n        setChatMessages(messages);\n    });\n\n    const activeUsersColRef = collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers');\n    const unsubscribeActiveUsers = onSnapshot(query(activeUsersColRef), (snapshot) => {\n      const cutoffTime = Date.now() - 60 * 1000;\n      const users = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).filter(u => u.lastActive && u.lastActive.toMillis() > cutoffTime);\n      setActiveUsers(users);\n    });\n\n    const mainScenarioRef = getMainScenarioRef(db, appId);\n    const unsubscribeMainScenario = onSnapshot(mainScenarioRef, (snap) => {\n      if (snap.exists()) {\n        const data = snap.data();\n        setGameState(prev => ({\n          ...prev,\n          log: data.storyLog || [],\n          choices: data.choices || [],\n          player: { ...prev.player, currentLocation: data.player?.currentLocation || prev.player.currentLocation }\n        }));\n      }\n    }, (error) => {\n      console.error(\"Main scenario snapshot error:\", error);\n      setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");\n    });\n\n    return () => {\n      unsubscribeGameStatus();\n      unsubscribeChat();\n      unsubscribeActiveUsers();\n      unsubscribeMainScenario();\n    };\n  }, [db, isAuthReady, userId, auth, isLoading, privatePlayerState.characterCreated]);\n\n  useEffect(() => {\n    if (!db || !userId || !nickname) return;\n\n    const updateUserPresence = async () => {\n      const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\n      await setDoc(userDocRef, {\n        lastActive: serverTimestamp(),\n        nickname: nickname || `플레이어 ${userId.substring(0, 4)}`,\n        profession: privatePlayerState.profession,\n      }, { merge: true });\n    };\n\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        updateUserPresence();\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    updateUserPresence();\n\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }, [db, userId, nickname, privatePlayerState.profession]);\n\n  useEffect(() => {\n    if (accordion.gameLog && logEndRef.current) logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [gameState.log, accordion.gameLog]);\n\n  useEffect(() => {\n    if (accordion.chat && chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  }, [chatMessages, accordion.chat]);\n\n  const systemPrompt = `\n    ### 페르소나 (Persona)\n    당신은 TRPG(Tabletop Role-Playing Game)의 최고 실력자 '게임 마스터(GM)'입니다. 당신의 임무는 단순한 스토리 생성이 아니라, 각 플레이어가 자신의 서사의 주인공이 되면서도, 모두가 하나의 거대한 세계관 속에서 살아 숨 쉬고 있다는 느낌을 받도록 만드는 것입니다. 당신은 유려한 문장가이자, 치밀한 설계자이며, 플레이어들의 행동에 즉각적으로 반응하는 유연한 스토리텔러입니다.\n\n    ### 핵심 철학: 하이브리드 월드 (Hybrid World)\n    이 세계는 '공유된 현실'과 '개인적인 서사'가 공존합니다.\n    1.  **공유된 현실 (Shared Reality):** 세상의 중요한 사건, 장소의 변화, 주요 NPC의 죽음 등은 모든 플레이어가 함께 경험하는 절대적인 현실입니다. 이는 'story'와 'sharedStateUpdates'로 표현됩니다.\n    2.  **개인적인 서사 (Personal Narrative):** 플레이어의 내면의 생각, 남들은 모르는 비밀 지식, 개인적인 퀘스트의 진행 등은 오직 그 플레이어에게만 주어지는 고유한 경험입니다. 이는 'privateStory', 'privateChoices', 'privateStateUpdates'로 표현됩니다.\n\n    ### 스토리텔링 원칙\n    * **보여주되, 말하지 말라 (Show, Don't Tell):** '그는 화가 났다'가 아니라 '그는 주먹을 불끈 쥐었다'라고 묘사하십시오.\n    * **역할 존중:** 플레이어의 직업, 능력치, 아이템, 그리고 특히 **'[개인 정보]'**에 담긴 단서('knownClues')나 퀘스트('activeQuests')는 당신이 스토리를 만들 때 가장 먼저 고려해야 할 재료입니다. 이것이 개인화된 경험의 핵심입니다.\n    * **살아있는 세계:** '[주변 플레이어]' 정보를 활용하여 다른 플레이어들의 존재를 이야기에 자연스럽게 녹여내십시오. 그들의 등장은 단순한 배경이 아니라, 새로운 사건의 계기가 되어야 합니다.\n    * **선택의 무게:** 플레이어의 선택은 반드시 의미 있는 결과를 가져와야 합니다. 사소한 선택이 나비효과를 일으킬 수도 있습니다.\n\n    ### JSON 출력 규칙 (매우 중요)\n    당신은 반드시 아래의 JSON 구조를 완벽하게 따라야 합니다. 설명(comment)은 절대 포함하지 마십시오.\n    {\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사. 이 사건의 결과로 세상이 어떻게 변했는지 객관적으로 묘사합니다.\",\n      \"privateStory\": \"선택을 한 플레이어만 볼 수 있는 2인칭 서사. '당신은...', '...라고 느낀다.' 와 같이 내면의 생각, 감각, 남들이 눈치채지 못한 미세한 발견 등을 묘사합니다.\",\n      \"choices\": [\n        \"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"\n      ],\n      \"privateChoices\": [\n        \"오직 이 플레이어의 직업, 아이템, 퀘스트, 단서 때문에 가능한 특별한 행동들.\"\n      ],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함됩니다.\"\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, ...},\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\n        \"knownClues\": [\"새롭게 알게 된 단서를 포함한 전체 단서 목록\"],\n        \"companions\": [\"업데이트된 동료 목록\"],\n        \"reputation\": {\"세력명\": \"상태\", ...}\n      }\n    }\n\n    ### 규칙 상세\n    * 'privateChoices' 예시: 플레이어의 'knownClues'에 '가문의 문장'이 있다면, \"가문의 문장을 제단에 맞춰본다.\" 와 같은 선택지를 제공하십시오.\n    * **상태 업데이트:** 'privateStateUpdates'의 모든 필드는 **변경 여부와 관계없이 항상 현재 플레이어의 전체 상태를 포함**하여 보내야 합니다. 예를 들어, 아이템을 하나 얻었다면, 기존 아이템을 포함한 전체 인벤토리 목록을 'inventory'에 담아야 합니다.\n    * 'story'와 'privateStory'는 합쳐서 500자 이내로 간결하게 작성하십시오.\n  `;\n\n  const callGeminiTextLLM = async (promptData) => {\n    setIsTextLoading(true);\n    setLlmRetryPrompt(promptData);\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\n    const backupApiKey = \"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n    const history = promptData.history.map(event => event.publicStory).slice(-5);\n\n    const userPrompt = `\n      [상황 분석 요청]\n      아래 정보를 바탕으로 플레이어의 행동에 대한 결과를 생성해주십시오.\n\n      [공유 컨텍스트]\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 이전 주요 사건 로그 (최대 5개): ${JSON.stringify(history)}\n\n      [개인 정보 (현재 플레이어)]\n      - 직업: ${promptData.privateInfo.profession}\n      - 능력치: ${JSON.stringify(promptData.privateInfo.stats)}\n      - 인벤토리: ${JSON.stringify(promptData.privateInfo.inventory)}\n      - 활성 퀘스트: ${JSON.stringify(promptData.privateInfo.activeQuests)}\n      - 알려진 단서: ${JSON.stringify(promptData.privateInfo.knownClues)}\n      - 평판: ${JSON.stringify(promptData.privateInfo.reputation)}\n\n      [플레이어의 행동]\n      - 선택: \"${promptData.playerChoice}\"\n\n      [주변 플레이어]\n      - ${promptData.activeUsers.length > 0 ? JSON.stringify(promptData.activeUsers) : \"현재 주변에 다른 플레이어가 없습니다.\"}\n    `;\n\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\n\n    const tryGeminiCall = async (apiKey) => fetch(getApiUrl(apiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\n\n    try {\n      let response = await tryGeminiCall(mainApiKey);\n      if (!response.ok) {\n        response = await tryGeminiCall(backupApiKey);\n      }\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\n      throw new Error(\"Valid JSON object not found in LLM response.\");\n    } catch (error) {\n      console.error(\"LLM API call error:\", error);\n      setLlmError(error.message || 'LLM 호출 실패');\n      return null;\n    } finally {\n      setIsTextLoading(false);\n    }\n  };\n\n  const sendChatMessage = async () => {\n    if (!db || !userId || !isAuthReady || !currentChatMessage.trim()) return;\n    try {\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message: currentChatMessage, timestamp: serverTimestamp() });\n      setCurrentChatMessage('');\n    } catch (error) {\n      console.error(\"Error sending chat message:\", error);\n    }\n  };\n\n  const updatePublicState = async (llmResponse, playerChoice) => {\n      const mainScenarioRef = getMainScenarioRef(db, appId);\n      const newEvent = {\n          actor: { id: userId, displayName: getDisplayName(userId) },\n          action: playerChoice,\n          publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\n          privateStories: { [userId]: llmResponse.privateStory || null },\n          timestamp: new Date()\n      };\n\n      await runTransaction(db, async (transaction) => {\n          const scenarioDoc = await transaction.get(mainScenarioRef);\n          if (!scenarioDoc.exists()) throw \"시나리오 문서가 없습니다.\";\n\n          const currentData = scenarioDoc.data();\n          const newStoryLog = [...(currentData.storyLog || []), newEvent];\n\n          transaction.update(mainScenarioRef, {\n              storyLog: newStoryLog,\n              choices: llmResponse.choices || [],\n              'player.currentLocation': llmResponse.sharedStateUpdates?.location || currentData.player.currentLocation,\n              lastUpdate: serverTimestamp()\n          });\n      });\n  };\n\n  const updatePrivateState = async (llmResponse) => {\n      const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\n      const updates = {\n        ...llmResponse.privateStateUpdates,\n        choices: llmResponse.privateChoices || [],\n      };\n      await setDoc(privateStateRef, updates, { merge: true });\n  };\n\n  const handleChoiceClick = async (choice) => {\n    if (isTextLoading) return;\n\n    if (!privatePlayerState.characterCreated) {\n        setIsTextLoading(true);\n        const choiceKey = choice.split('.')[0];\n        const selectedProfession = professions[choiceKey];\n\n        if (selectedProfession) {\n            const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\n            await setDoc(privateStateRef, {\n                ...getDefaultPrivatePlayerState(),\n                characterCreated: true,\n                profession: selectedProfession.name,\n                initialMotivation: selectedProfession.motivation,\n            }, { merge: true });\n\n            const mainScenarioRef = getMainScenarioRef(db, appId);\n            const newEvent = {\n                actor: { id: userId, displayName: getDisplayName(userId) },\n                action: \"여관에 들어선다\",\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,\n                privateStories: { [userId]: selectedProfession.motivation },\n                timestamp: new Date()\n            };\n\n            try {\n                await runTransaction(db, async (transaction) => {\n                    const scenarioDoc = await transaction.get(mainScenarioRef);\n                    const initialChoices = [\"여관을 둘러본다.\", \"다른 모험가에게 말을 건다.\", \"여관 주인에게 정보를 묻는다.\"];\n                    if (!scenarioDoc.exists()) {\n                        transaction.set(mainScenarioRef, { ...getDefaultGameState(), storyLog: [newEvent], choices: initialChoices, lastUpdate: serverTimestamp() });\n                    } else {\n                        transaction.update(mainScenarioRef, { storyLog: [...(scenarioDoc.data().storyLog || []), newEvent], choices: initialChoices, lastUpdate: serverTimestamp() });\n                    }\n                });\n            } catch (e) {\n                console.error(\"등장 이벤트 추가 실패: \", e);\n                setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");\n            } finally {\n                setIsTextLoading(false);\n            }\n        }\n        return;\n    }\n\n    const isPublicChoice = gameState.choices.includes(choice);\n    const gameStatusRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\n\n    setIsTextLoading(true);\n\n    try {\n        if (isPublicChoice) {\n            if (isActionInProgress) {\n                 throw new Error(\"다른 플레이어가 주요 행동을 하고 있습니다. 잠시 후 다시 시도해주세요.\");\n            }\n            await setDoc(gameStatusRef, { isActionInProgress: true, actingPlayer: { id: userId, displayName: getDisplayName(userId) } }, { merge: true });\n        }\n\n        const promptData = {\n            playerChoice: choice,\n            sharedInfo: { currentLocation: gameState.player.currentLocation },\n            privateInfo: privatePlayerState,\n            history: gameState.log,\n            activeUsers: activeUsers.map(u => ({ nickname: getDisplayName(u.id), profession: u.profession })).filter(u => u.id !== userId),\n        };\n\n        const llmResponse = await callGeminiTextLLM(promptData);\n\n        if (llmResponse) {\n            if (isPublicChoice) {\n                await updatePublicState(llmResponse, choice);\n            }\n            await updatePrivateState(llmResponse);\n            setLlmError(null);\n            setLlmRetryPrompt(null);\n        } else {\n            // llmResponse가 null이면 callGeminiTextLLM 내부에서 이미 setLlmError가 호출됨\n            // 추가적인 오류 메시지를 설정할 수 있음\n            if (!llmError) {\n                setLlmError(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");\n            }\n        }\n\n    } catch (error) {\n        console.error(\"행동 처리 중 오류:\", error.message);\n        setLlmError(error.message);\n    } finally {\n        if (isPublicChoice) {\n            await setDoc(gameStatusRef, { isActionInProgress: false, actingPlayer: null }, { merge: true });\n        }\n        setIsTextLoading(false);\n    }\n  };\n\n  const toggleAccordion = (key) => {\n    setAccordion(prev => ({ ...prev, [key]: !prev[key] }));\n  };\n\n  // [FIXED] 재사용 가능한 오류 모달 UI\n  const LlmErrorModal = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\n      <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\n        <h3 className=\"text-xl font-bold text-red-400\">오류가 발생했습니다</h3>\n        <p className=\"text-gray-200\">{llmError}</p>\n        <div className=\"flex justify-center gap-4\">\n          {llmRetryPrompt && (\n            <button\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\"\n              onClick={async () => {\n                setLlmError(null);\n                // llmRetryPrompt에서 playerChoice를 가져와 handleChoiceClick 호출\n                if (llmRetryPrompt.playerChoice) {\n                  await handleChoiceClick(llmRetryPrompt.playerChoice);\n                }\n              }}\n            >\n              재시도\n            </button>\n          )}\n          <button\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\"\n            onClick={() => {\n              setLlmError(null);\n              setLlmRetryPrompt(null);\n            }}\n          >\n            닫기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n\n\n  if (showNicknameModal) {\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\n            <h3 className=\"text-xl font-bold text-gray-100\">닉네임을 입력하세요</h3>\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>시작하기</button>\n          </div>\n        </div>\n    )\n  }\n\n  if (isLoading) {\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">데이터를 불러오는 중...</span></div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\n      {llmError && <LlmErrorModal />}\n      {showResetModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\n            <h3 className=\"text-xl font-bold text-red-400\">⚠️ 모든 데이터를 초기화할까요?</h3>\n            <p className=\"text-gray-200\">이 작업은 되돌릴 수 없습니다. 모든 시나리오, 로그, 유저, 채팅 데이터가 삭제됩니다.</p>\n            <div className=\"flex justify-end gap-3\">\n              <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => setShowResetModal(false)} disabled={isResetting}>취소</button>\n              <button className=\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\" onClick={resetAllGameData} disabled={isResetting}>{isResetting ? '초기화 중...' : '초기화'}</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\">\n        <div className=\"flex flex-col w-full lg:w-2/3 space-y-6\">\n          <div className=\"mb-2\">\n            <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('gameLog')}>\n              <h2 className=\"text-lg font-bold text-gray-100\">게임 로그</h2>\n              <div className=\"text-xl\">{accordion.gameLog ? '▼' : '▲'}</div>\n            </div>\n            {accordion.gameLog && (\n              <>\n                <div className=\"flex justify-end mb-2\">\n                  <button className=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\" onClick={() => setShowResetModal(true)}>전체 데이터 초기화</button>\n                </div>\n                <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\" style={{ maxHeight: '24rem' }}>\n                  {!privatePlayerState.characterCreated && (\n                    <div className=\"mb-4 p-2 rounded bg-gray-900/50 text-center\">\n                        <p className=\"text-yellow-300 font-semibold italic text-lg\">모험의 서막</p>\n                        <p className=\"whitespace-pre-wrap mt-1\">당신은 어떤 운명을 선택하시겠습니까?</p>\n                    </div>\n                  )}\n                  {gameState.log.map((event, index) => (\n                    <div key={index} className=\"mb-4 p-2 rounded bg-gray-900/50\">\n                      {event.actor?.displayName && event.action && (\n                         <p className=\"text-yellow-300 font-semibold italic text-sm\">\n                            {event.actor.displayName} 님이 {event.action} 선택\n                         </p>\n                      )}\n                      <p className=\"whitespace-pre-wrap mt-1\" dangerouslySetInnerHTML={{ __html: (event.publicStory || '').replace(/\\n/g, '<br />') }}></p>\n                      {event.privateStories && event.privateStories[userId] && (\n                        <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\">\n                          <span className=\"font-bold\">[당신만 아는 사실] </span>\n                          {event.privateStories[userId]}\n                        </p>\n                      )}\n                    </div>\n                  ))}\n                  {isTextLoading && (\n                    <div className=\"flex justify-center items-center mt-4\">\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\n                      <span className=\"ml-3 text-gray-400\">이야기를 생성 중...</span>\n                    </div>\n                  )}\n                  {isActionInProgress && (!actingPlayer || actingPlayer.id !== userId) && (\n                      <div className=\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\">\n                          {actingPlayer ? `${getDisplayName(actingPlayer.id)}님이 주요 행동을 하고 있습니다...` : \"다른 플레이어가 주요 행동을 하고 있습니다...\"}\n                      </div>\n                  )}\n                  <div ref={logEndRef} />\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"flex flex-col gap-3\">\n              {privatePlayerState.characterCreated ? (\n                  [...gameState.choices, ...(privatePlayerState.choices || [])].map((choice, index) => (\n                      <button\n                          key={index}\n                          className={`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\n                            ${gameState.choices.includes(choice)\n                                ? 'bg-blue-600 hover:bg-blue-700 text-white'\n                                : 'bg-purple-600 hover:bg-purple-700 text-white'\n                            }`\n                          }\n                          onClick={() => handleChoiceClick(choice)}\n                          disabled={isTextLoading || (gameState.choices.includes(choice) && isActionInProgress)}\n                      >\n                          {privatePlayerState.choices?.includes(choice) && '[개인] '}{choice}\n                      </button>\n                  ))\n              ) : (\n                  Object.keys(professions).map(key => (\n                      <button\n                          key={key}\n                          onClick={() => handleChoiceClick(`${key}. ${professions[key].name}`)}\n                          disabled={isTextLoading}\n                          className=\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\"\n                      >\n                          <p className=\"text-lg text-blue-300\">{`${key}. ${professions[key].name}`}</p>\n                          <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\n                      </button>\n                  ))\n              )}\n          </div>\n        </div>\n\n        <div className=\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\">\n            <div className=\"mb-2\">\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('playerInfo')}>\n                    <h4 className=\"text-md font-semibold text-gray-200\">내 정보</h4>\n                    <div className=\"text-xl\">{accordion.playerInfo ? '▼' : '▲'}</div>\n                </div>\n                {accordion.playerInfo && (\n                  <div className=\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\">\n                    <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\n                    <p><span className=\"font-semibold text-blue-300\">직업:</span> {privatePlayerState.profession || '미정'}</p>\n                    <p><span className=\"font-semibold text-blue-300\">위치:</span> {gameState.player.currentLocation}</p>\n                    <p><span className=\"font-semibold text-blue-300\">능력치:</span> 힘({privatePlayerState.stats.strength}) 지능({privatePlayerState.stats.intelligence}) 민첩({privatePlayerState.stats.agility}) 카리스마({privatePlayerState.stats.charisma})</p>\n                    <p><span className=\"font-semibold text-blue-300\">인벤토리:</span> {privatePlayerState.inventory.join(', ') || '비어있음'}</p>\n                    <p><span className=\"font-semibold text-blue-300\">퀘스트:</span> {privatePlayerState.activeQuests.join(', ') || '없음'}</p>\n                    <p><span className=\"font-semibold text-blue-300\">단서:</span> {privatePlayerState.knownClues.join(', ') || '없음'}</p>\n                  </div>\n                )}\n            </div>\n            <div className=\"mb-2\">\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('users')}>\n                    <h4 className=\"text-md font-semibold text-gray-200\">현재 플레이어들</h4>\n                    <div className=\"text-xl\">{accordion.users ? '▼' : '▲'}</div>\n                </div>\n                {accordion.users && (\n                    <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\n                        {activeUsers.length > 0 ? (\n                            <ul className=\"text-sm text-gray-300 space-y-1\">\n                                {activeUsers.map(user => (\n                                    <li key={user.id} className=\"truncate p-1 rounded-md\">\n                                        <span className=\"font-medium text-green-300\">{getDisplayName(user.id)}</span>\n                                        <span className=\"text-gray-400 text-xs\"> ({user.profession || '모험가'})</span>\n                                    </li>\n                                ))}\n                            </ul>\n                        ) : <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>}\n                    </div>\n                )}\n            </div>\n            <div className=\"mb-2\">\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('chat')}>\n                    <h4 className=\"text-md font-semibold text-gray-200\">공개 채팅</h4>\n                    <div className=\"text-xl\">{accordion.chat ? '▼' : '▲'}</div>\n                </div>\n                {accordion.chat && (\n                    <div className=\"bg-gray-600 p-3 rounded-md flex flex-col h-64\">\n                        <div className=\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\">\n                            {chatMessages.map((msg) => (\n                                <div key={msg.id}><p><span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> {msg.message}</p></div>\n                            ))}\n                            <div ref={chatEndRef} />\n                        </div>\n                        <div className=\"flex\">\n                            <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\" value={currentChatMessage} onChange={(e) => setCurrentChatMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()} disabled={!isAuthReady} />\n                            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\" onClick={sendChatMessage} disabled={!isAuthReady || !currentChatMessage.trim()}>보내기</button>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n      </div>\n\n      <style>\n        {`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `}\n      </style>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}