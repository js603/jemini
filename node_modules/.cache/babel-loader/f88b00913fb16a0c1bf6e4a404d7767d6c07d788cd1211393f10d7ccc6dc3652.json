{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';// 1. prop-types 임포트\nimport{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction}from'firebase/firestore';import{useMediaQuery}from'react-responsive';// ====================================================================\n// Firebase configuration information\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};const firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;const initialAuthToken=null;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore Path Utils\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');const getGameStatusRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','gameStatus','status');const getMajorEventsRef=(db,appId)=>collection(db,'artifacts',appId,'public','data','majorEvents');// State Initialization Utils\nconst getDefaultGameState=()=>({phase:'playing',log:[],choices:[{id:'inn_look_around',text:\"여관을 둘러본다\",type:'location_default',location:'방랑자의 안식처'},{id:'inn_talk_to_owner',text:\"여관 주인에게 말을 건다\",type:'location_default',location:'방랑자의 안식처'},{id:'inn_talk_to_adventurer',text:\"다른 모험가에게 말을 건다\",type:'location_default',location:'방랑자의 안식처'}],player:{currentLocation:'방랑자의 안식처'},subtleClues:[]});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',reputation:{},activeQuests:[],companions:[],knownClues:[],characterCreated:false,profession:'',choices:[],groups:[],npcRelations:{}});// ====================================================================\n// 🎨 UI Components\n// ====================================================================\nconst GameLogPanel=_ref=>{let{log,userId,isTextLoading,logEndRef,characterCreated}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",children:[!characterCreated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 font-semibold italic text-lg\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"})]}),log.map((event,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50\",children:[event.actor&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[Array.isArray(event.actor)?event.actor.map(a=>a.displayName).join(', '):event.actor.displayName||'시스템',\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",dangerouslySetInnerHTML:{__html:(event.publicStory||'').replace(/\\n/g,'<br />')}}),event.privateStories&&event.privateStories[userId]&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uB2F9\\uC2E0\\uB9CC \\uC544\\uB294 \\uC0AC\\uC2E4] \"}),event.privateStories[userId]]})]},index)),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef})]});};// 2. prop-types 유효성 검사 추가\nconst ChoicesPanel=_ref2=>{let{choices,characterCreated,handleChoiceClick,isTextLoading,leaderId,userId,handleTakeLead,getDisplayName}=_ref2;const isMyTurn=leaderId===userId;const isPreparationPhase=!leaderId;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col gap-3\",children:[characterCreated&&isPreparationPhase&&/*#__PURE__*/_jsx(\"button\",{onClick:handleTakeLead,disabled:isTextLoading,className:\"w-full px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 bg-green-600 hover:bg-green-700 text-white disabled:opacity-50\",children:\"[\\uD589\\uB3D9\\uAD8C \\uC7A1\\uAE30]\"}),characterCreated&&leaderId&&!isMyTurn&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-3 bg-gray-700 rounded-md text-yellow-300 font-bold\",children:[getDisplayName(leaderId),\" \\uB2D8\\uC774 \\uD589\\uB3D9 \\uC911\\uC785\\uB2C8\\uB2E4...\"]}),characterCreated?choices.map(choice=>/*#__PURE__*/_jsx(\"button\",{className:`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 ${isMyTurn?'bg-blue-600 hover:bg-blue-700':'bg-gray-600 cursor-not-allowed'} text-white`,onClick:()=>handleChoiceClick(choice),disabled:isTextLoading||!isMyTurn,children:choice.text},choice.id)):Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick({id:key,text:`${key}. ${professions[key].name}`}),disabled:isTextLoading,className:\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300\",children:`${key}. ${professions[key].name}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key))]});};// prop-types 유효성 검사 추가\nconst Sidebar=_ref3=>{let{playerState,getDisplayName,userId,activeUsers,currentLocation}=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",playerState.profession||'미정']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",playerState.stats.strength,\") \\uC9C0\\uB2A5(\",playerState.stats.intelligence,\") \\uBBFC\\uCCA9(\",playerState.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",playerState.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",playerState.inventory.join(', ')||'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",playerState.activeQuests.join(', ')||'없음']})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate p-1 rounded-md\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-300\",children:getDisplayName(user.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\" (\",user.profession||'모험가',\")\"]})]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]})]});};// prop-types 유효성 검사 추가\nconst ChatPanel=_ref4=>{let{messages,chatEndRef,currentMessage,onMessageChange,onSendMessage,isAuthReady,getDisplayName}=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 p-4 rounded-lg flex flex-col h-full md:h-[32rem]\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex flex-col flex-grow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\",children:[messages.map(msg=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",msg.message]})},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\",value:currentMessage,onChange:onMessageChange,onKeyPress:e=>e.key==='Enter'&&onSendMessage(),disabled:!isAuthReady}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\",onClick:onSendMessage,disabled:!isAuthReady||!currentMessage.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})]});};// prop-types 유효성 검사 추가\n// ====================================================================\n// 🖥️ Responsive Layouts\n// ====================================================================\nconst DesktopLayout=props=>/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-7xl bg-gray-800 rounded-lg shadow-xl p-6 flex space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-2/3 space-y-6\",children:[/*#__PURE__*/_jsx(GameLogPanel,{...props}),/*#__PURE__*/_jsx(ChoicesPanel,{...props})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 flex flex-col space-y-6\",children:[/*#__PURE__*/_jsx(Sidebar,{...props}),/*#__PURE__*/_jsx(ChatPanel,{...props})]})]});const MobileLayout=props=>{const[activeTab,setActiveTab]=useState('game');// 'game', 'info', or 'chat'\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"w-full h-[90vh] bg-gray-800 rounded-lg shadow-xl p-2 flex flex-col\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 mb-2\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex border-b border-gray-600\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('game'),className:`flex-1 py-2 text-center font-bold ${activeTab==='game'?'text-white bg-blue-600':'text-gray-400'}`,children:\"\\uAC8C\\uC784\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('info'),className:`flex-1 py-2 text-center font-bold ${activeTab==='info'?'text-white bg-blue-600':'text-gray-400'}`,children:\"\\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setActiveTab('chat'),className:`flex-1 py-2 text-center font-bold ${activeTab==='chat'?'text-white bg-blue-600':'text-gray-400'}`,children:\"\\uCC44\\uD305\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto\",children:[activeTab==='game'&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col space-y-4 h-full\",children:[/*#__PURE__*/_jsx(GameLogPanel,{...props}),/*#__PURE__*/_jsx(ChoicesPanel,{...props})]}),activeTab==='info'&&/*#__PURE__*/_jsx(Sidebar,{...props}),activeTab==='chat'&&/*#__PURE__*/_jsx(ChatPanel,{...props})]})]});};// ====================================================================\n// 🚀 Main App Component\n// ====================================================================\nfunction App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[currentChatMessage,setCurrentChatMessage]=useState('');const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const logEndRef=useRef(null);const chatEndRef=useRef(null);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[llmError,setLlmError]=useState(null);const[llmRetryPrompt,setLlmRetryPrompt]=useState(null);const[isLoading,setIsLoading]=useState(true);const[worldHistory,setWorldHistory]=useState([]);const[showResetModal,setShowResetModal]=useState(false);const[isResetting,setIsResetting]=useState(false);const[leaderId,setLeaderId]=useState(null);const isDesktop=useMediaQuery({query:'(min-width: 1024px)'});// --- Helper Functions ---\nconst handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);if(userId&&db){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{nickname:finalNickname},{merge:true});}}};const getDisplayName=uid=>{if(!uid)return'시스템';if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const resetAllGameData=async()=>{if(!db||!isAuthReady)return;setIsResetting(true);try{const collectionsToDelete=[collection(db,'artifacts',appId,'public','data','chatMessages'),collection(db,'artifacts',appId,'public','data','activeUsers'),getMajorEventsRef(db,appId)];for(const colRef of collectionsToDelete){const snapshot=await getDocs(colRef);for(const docSnap of snapshot.docs){await deleteDoc(docSnap.ref);}}const usersColRef=collection(db,'artifacts',appId,'users');const usersSnapshot=await getDocs(usersColRef);for(const userDoc of usersSnapshot.docs){const playerStateColRef=collection(db,'artifacts',appId,'users',userDoc.id,'playerState');const playerStateSnapshot=await getDocs(playerStateColRef);for(const stateDoc of playerStateSnapshot.docs){await deleteDoc(stateDoc.ref);}await deleteDoc(doc(db,'artifacts',appId,'users',userDoc.id));}await deleteDoc(getMainScenarioRef(db,appId));await deleteDoc(getGameStatusRef(db,appId));localStorage.clear();console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");}catch(e){console.error(\"전체 데이터 초기화 중 오류 발생:\",e);}finally{setIsResetting(false);setShowResetModal(false);window.location.reload();}};// --- Firebase Listeners ---\nuseEffect(()=>{try{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{await(initialAuthToken?signInWithCustomToken(firebaseAuth,initialAuthToken):signInAnonymously(firebaseAuth));}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);setLlmError(\"Firebase 초기화에 실패했습니다.\");}},[]);useEffect(()=>{if(!isAuthReady||!db||!userId)return;const unsubscribes=[onSnapshot(getPrivatePlayerStateRef(db,appId,userId),snapshot=>{if(snapshot.exists()){setPrivatePlayerState({...getDefaultPrivatePlayerState(),...snapshot.data()});}else{setDoc(getPrivatePlayerStateRef(db,appId,userId),getDefaultPrivatePlayerState());}if(isLoading)setIsLoading(false);}),onSnapshot(getMainScenarioRef(db,appId),snap=>{if(snap.exists()){const data=snap.data();setGameState(prev=>({...prev,...data}));}else{setGameState(getDefaultGameState());}}),onSnapshot(getGameStatusRef(db,appId),docSnap=>{var _docSnap$data;setLeaderId(((_docSnap$data=docSnap.data())===null||_docSnap$data===void 0?void 0:_docSnap$data.leaderId)||null);}),onSnapshot(query(collection(db,'artifacts',appId,'public','data','chatMessages')),snapshot=>{const messages=snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});setChatMessages(messages);}),onSnapshot(query(collection(db,'artifacts',appId,'public','data','activeUsers')),snapshot=>{const users=snapshot.docs.map(d=>({id:d.id,...d.data()}));setActiveUsers(users);})];getDocs(getMajorEventsRef(db,appId)).then(historySnapshot=>{const historyData=historySnapshot.docs.map(doc=>doc.data().summary);setWorldHistory(historyData);});return()=>unsubscribes.forEach(unsub=>unsub());},[isAuthReady,db,userId]);useEffect(()=>{if(!db||!userId)return;const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{lastActive:serverTimestamp(),nickname:nickname||`플레이어 ${userId.substring(0,4)}`,profession:privatePlayerState.profession},{merge:true});},[db,userId,nickname,privatePlayerState.profession]);useEffect(()=>{if(logEndRef.current)logEndRef.current.scrollIntoView({behavior:\"smooth\"});},[gameState.log]);useEffect(()=>{if(chatEndRef.current)chatEndRef.current.scrollIntoView({behavior:\"smooth\"});},[chatMessages]);// --- AI Interaction ---\nconst systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\n    ### 핵심 규칙 (매우 중요)\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'의 시점에서, 그가 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다.\n    2.  **지능형 선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\n        -   **제거**: \\`choices_to_remove\\`에 더 이상 유효하지 않은 선택지의 \\`id\\`를 담아 제거하십시오.\n        -   **추가**: \\`choices_to_add\\`에 새로운 상황으로 생긴 선택지 객체를 담아 추가하십시오.\n    ### JSON 출력 구조\n    {\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\n      \"choices_to_add\": [{ \"id\": \"unique_id\", \"text\": \"새 선택지\", \"type\": \"event_driven\", \"location\": \"현재 장소\" }],\n      \"choices_to_remove\": [\"obsolete_choice_id\"],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\"\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"]\n      }\n    }\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);setLlmRetryPrompt(promptData);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const backupApiKey=\"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\n      ### [행동 주체 (Actor)]\n      - 이름: ${promptData.actorDisplayNames[0]}\n      - 정보: ${JSON.stringify(promptData.privateInfos[Object.keys(promptData.privateInfos)[0]])}\n      ### [선택 (Action)]\n      - \"${promptData.playerChoice}\"\n      ### [배경 정보]\n      - 세상의 주요 역사: ${promptData.worldHistory.length>0?promptData.worldHistory.join(', '):\"없음\"}\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};const tryGeminiCall=async apiKey=>fetch(getApiUrl(apiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;let response=await tryGeminiCall(mainApiKey);if(!response.ok){response=await tryGeminiCall(backupApiKey);}if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}};const sendChatMessage=async()=>{if(!db||!userId||!isAuthReady||!currentChatMessage.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message:currentChatMessage,timestamp:serverTimestamp()});setCurrentChatMessage('');}catch(error){console.error(\"Error sending chat message:\",error);}};// --- Game Logic (Turn-based) ---\nconst handleTakeLead=async()=>{if(!db||!userId||leaderId||isTextLoading)return;try{await setDoc(getGameStatusRef(db,appId),{leaderId:userId},{merge:true});}catch(e){console.error(\"행동권 획득 실패:\",e);setLlmError(\"행동권을 가져오는 데 실패했습니다.\");}};const performAction=async choiceObject=>{const choiceText=choiceObject.text;setIsTextLoading(true);setLlmRetryPrompt({playerChoice:choiceText});try{const promptData={actorDisplayNames:[getDisplayName(userId)],playerChoice:choiceText,sharedInfo:{currentLocation:gameState.player.currentLocation,subtleClues:gameState.subtleClues,currentChoices:gameState.choices},privateInfos:{[userId]:privatePlayerState},worldHistory:worldHistory};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){await runTransaction(db,async transaction=>{var _llmResponse$sharedSt;const mainScenarioRef=getMainScenarioRef(db,appId);const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);const scenarioDoc=await transaction.get(mainScenarioRef);const privateDoc=await transaction.get(privateStateRef);const currentData=scenarioDoc.exists()?scenarioDoc.data():getDefaultGameState();// 1. Update Public State\nlet newChoicePool=[...(currentData.choices||[])];if(llmResponse.choices_to_remove){const idsToRemove=new Set(llmResponse.choices_to_remove);newChoicePool=newChoicePool.filter(c=>!idsToRemove.has(c.id));}if(llmResponse.choices_to_add){newChoicePool.push(...llmResponse.choices_to_add.filter(c=>c.id&&c.text));}const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:choiceText,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",privateStories:llmResponse.privateStory?{[userId]:llmResponse.privateStory}:{},timestamp:new Date()};const publicUpdateData={storyLog:[...(currentData.log||[]),newEvent],choices:newChoicePool,lastUpdate:serverTimestamp()};if((_llmResponse$sharedSt=llmResponse.sharedStateUpdates)!==null&&_llmResponse$sharedSt!==void 0&&_llmResponse$sharedSt.location){publicUpdateData['player.currentLocation']=llmResponse.sharedStateUpdates.location;}transaction.update(mainScenarioRef,publicUpdateData);// 2. Update Private State\nif(privateDoc.exists()&&llmResponse.privateStateUpdates){transaction.update(privateStateRef,llmResponse.privateStateUpdates);}});}}catch(error){setLlmError(error.message);}finally{await setDoc(getGameStatusRef(db,appId),{leaderId:null},{merge:true});setIsTextLoading(false);}};const handleChoiceClick=async choiceObject=>{if(isTextLoading)return;if(!privatePlayerState.characterCreated){setIsTextLoading(true);const choiceKey=choiceObject.id;const selectedProfession=professions[choiceKey];if(selectedProfession){await setDoc(getPrivatePlayerStateRef(db,appId,userId),{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name,initialMotivation:selectedProfession.motivation},{merge:true});const newEvent={actor:{id:userId,displayName:getDisplayName(userId)||`플레이어 ${userId.substring(0,4)}`},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)||`플레이어 ${userId.substring(0,4)}`}'라는 이름의 ${selectedProfession.name}입니다.`,privateStories:{[userId]:selectedProfession.motivation},timestamp:new Date()};const mainScenarioRef=getMainScenarioRef(db,appId);const scenarioDoc=await getDoc(mainScenarioRef);const currentLog=scenarioDoc.exists()?scenarioDoc.data().log:[];await setDoc(mainScenarioRef,{...getDefaultGameState(),log:[...currentLog,newEvent]},{merge:true});}setIsTextLoading(false);return;}if(leaderId===userId){await performAction(choiceObject);}};const getVisibleChoices=()=>{const masterChoicePool=gameState.choices||[];const privateChoicePool=privatePlayerState.choices||[];const currentLocation=gameState.player.currentLocation;const visiblePublicChoices=masterChoicePool.filter(choice=>{return!choice.location||choice.location===currentLocation;});const allChoices=[...visiblePublicChoices,...privateChoicePool];return allChoices.filter((choice,index,self)=>index===self.findIndex(c=>c.id===choice.id));};// --- Render ---\nconst LlmErrorModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:llmError}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[llmRetryPrompt&&/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\",onClick:async()=>{setLlmError(null);if(llmRetryPrompt.playerChoice){await performAction({id:'retry',text:llmRetryPrompt.playerChoice});}},children:\"\\uC7AC\\uC2DC\\uB3C4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>{setLlmError(null);setLlmRetryPrompt(null);},children:\"\\uB2EB\\uAE30\"})]})]})});if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uC2DC\\uC791\\uD558\\uAE30\"})]})});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}const componentProps={log:gameState.log,choices:getVisibleChoices(),userId,isTextLoading,logEndRef,characterCreated:privatePlayerState.characterCreated,handleChoiceClick,leaderId,handleTakeLead,getDisplayName,playerState:privatePlayerState,activeUsers,currentLocation:gameState.player.currentLocation,messages:chatMessages,chatEndRef,currentMessage:currentChatMessage,onMessageChange:e=>setCurrentChatMessage(e.target.value),onSendMessage:sendChatMessage,isAuthReady};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center p-1 md:p-4 font-sans\",children:[llmError&&/*#__PURE__*/_jsx(LlmErrorModal,{}),showResetModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\u26A0\\uFE0F \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB97C \\uCD08\\uAE30\\uD654\\uD560\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:\"\\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA8\\uB4E0 \\uC2DC\\uB098\\uB9AC\\uC624, \\uB85C\\uADF8, \\uC720\\uC800, \\uCC44\\uD305 \\uB370\\uC774\\uD130\\uAC00 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setShowResetModal(false),disabled:isResetting,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\",onClick:resetAllGameData,disabled:isResetting,children:isResetting?'초기화 중...':'초기화'})]})]})}),isDesktop?/*#__PURE__*/_jsx(DesktopLayout,{...componentProps}):/*#__PURE__*/_jsx(MobileLayout,{...componentProps}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","useMediaQuery","jsx","_jsx","jsxs","_jsxs","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","initialAuthToken","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getGameStatusRef","getMajorEventsRef","getDefaultGameState","phase","log","choices","id","text","type","location","player","currentLocation","subtleClues","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","reputation","activeQuests","companions","knownClues","characterCreated","profession","groups","npcRelations","GameLogPanel","_ref","isTextLoading","logEndRef","className","children","map","event","index","actor","Array","isArray","a","displayName","join","action","dangerouslySetInnerHTML","__html","publicStory","replace","privateStories","ref","ChoicesPanel","_ref2","handleChoiceClick","leaderId","handleTakeLead","getDisplayName","isMyTurn","isPreparationPhase","onClick","disabled","choice","Object","keys","key","Sidebar","_ref3","playerState","activeUsers","length","user","ChatPanel","_ref4","messages","chatEndRef","currentMessage","onMessageChange","onSendMessage","isAuthReady","msg","message","value","onChange","onKeyPress","e","trim","DesktopLayout","props","MobileLayout","activeTab","setActiveTab","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","setIsTextLoading","setActiveUsers","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","setDb","auth","setAuth","setUserId","setIsAuthReady","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","llmError","setLlmError","llmRetryPrompt","setLlmRetryPrompt","isLoading","setIsLoading","worldHistory","setWorldHistory","showResetModal","setShowResetModal","isResetting","setIsResetting","setLeaderId","isDesktop","handleNicknameSubmit","finalNickname","setItem","userDocRef","merge","uid","substring","find","u","resetAllGameData","collectionsToDelete","colRef","snapshot","docSnap","docs","usersColRef","usersSnapshot","userDoc","playerStateColRef","playerStateSnapshot","stateDoc","clear","console","error","window","reload","app","firestoreDb","firebaseAuth","unsubscribeAuth","unsubscribes","exists","data","snap","prev","_docSnap$data","d","sort","b","_a$timestamp","_b$timestamp","timestamp","toMillis","users","then","historySnapshot","historyData","summary","forEach","unsub","lastActive","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","backupApiKey","getApiUrl","userPrompt","actorDisplayNames","JSON","stringify","privateInfos","playerChoice","sharedInfo","currentChoices","payload","contents","role","parts","tryGeminiCall","fetch","method","headers","body","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","sendChatMessage","chatCollectionRef","performAction","choiceObject","choiceText","llmResponse","transaction","_llmResponse$sharedSt","mainScenarioRef","privateStateRef","scenarioDoc","get","privateDoc","currentData","newChoicePool","choices_to_remove","idsToRemove","Set","filter","c","has","choices_to_add","push","newEvent","story","privateStory","Date","publicUpdateData","storyLog","lastUpdate","sharedStateUpdates","update","privateStateUpdates","choiceKey","selectedProfession","currentLog","getVisibleChoices","masterChoicePool","privateChoicePool","visiblePublicChoices","allChoices","self","findIndex","LlmErrorModal","placeholder","target","onKeyDown","autoFocus","componentProps"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types'; // 1. prop-types 임포트\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  signInWithCustomToken,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  runTransaction\r\n} from 'firebase/firestore';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\n// ====================================================================\r\n// Firebase configuration information\r\nconst defaultFirebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\n\r\nconst firebaseConfig = defaultFirebaseConfig;\r\nconst appId = firebaseConfig.projectId;\r\nconst initialAuthToken = null;\r\n// ====================================================================\r\n\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\n// Firestore Path Utils\r\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\r\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\r\nconst getGameStatusRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\nconst getMajorEventsRef = (db, appId) => collection(db, 'artifacts', appId, 'public', 'data', 'majorEvents');\r\n\r\n// State Initialization Utils\r\nconst getDefaultGameState = () => ({\r\n  phase: 'playing',\r\n  log: [],\r\n  choices: [\r\n    { id: 'inn_look_around', text: \"여관을 둘러본다\", type: 'location_default', location: '방랑자의 안식처' },\r\n    { id: 'inn_talk_to_owner', text: \"여관 주인에게 말을 건다\", type: 'location_default', location: '방랑자의 안식처' },\r\n    { id: 'inn_talk_to_adventurer', text: \"다른 모험가에게 말을 건다\", type: 'location_default', location: '방랑자의 안식처' },\r\n  ],\r\n  player: {\r\n    currentLocation: '방랑자의 안식처',\r\n  },\r\n  subtleClues: [],\r\n});\r\n\r\nconst getDefaultPrivatePlayerState = () => ({\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n    inventory: [],\r\n    initialMotivation: '',\r\n    reputation: {},\r\n    activeQuests: [],\r\n    companions: [],\r\n    knownClues: [],\r\n    characterCreated: false,\r\n    profession: '',\r\n    choices: [],\r\n    groups: [],\r\n    npcRelations: {},\r\n});\r\n\r\n// ====================================================================\r\n// 🎨 UI Components\r\n// ====================================================================\r\n\r\nconst GameLogPanel = ({ log, userId, isTextLoading, logEndRef, characterCreated }) => (\r\n  <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\">\r\n    {!characterCreated && (\r\n      <div className=\"mb-4 p-2 rounded bg-gray-900/50 text-center\">\r\n        <p className=\"text-yellow-300 font-semibold italic text-lg\">모험의 서막</p>\r\n        <p className=\"whitespace-pre-wrap mt-1\">당신은 어떤 운명을 선택하시겠습니까?</p>\r\n      </div>\r\n    )}\r\n    {log.map((event, index) => (\r\n      <div key={index} className=\"mb-4 p-2 rounded bg-gray-900/50\">\r\n        {event.actor && (\r\n          <p className=\"text-yellow-300 font-semibold italic text-sm\">\r\n            {Array.isArray(event.actor) ? event.actor.map(a => a.displayName).join(', ') : (event.actor.displayName || '시스템')} 님이 {event.action} 선택\r\n          </p>\r\n        )}\r\n        <p className=\"whitespace-pre-wrap mt-1\" dangerouslySetInnerHTML={{ __html: (event.publicStory || '').replace(/\\n/g, '<br />') }}></p>\r\n        {event.privateStories && event.privateStories[userId] && (\r\n          <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\">\r\n            <span className=\"font-bold\">[당신만 아는 사실] </span>{event.privateStories[userId]}\r\n          </p>\r\n        )}\r\n      </div>\r\n    ))}\r\n    {isTextLoading && (\r\n      <div className=\"flex justify-center items-center mt-4\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\r\n        <span className=\"ml-3 text-gray-400\">이야기를 생성 중...</span>\r\n      </div>\r\n    )}\r\n    <div ref={logEndRef} />\r\n  </div>\r\n);\r\n\r\n// 2. prop-types 유효성 검사 추가\r\nGameLogPanel.propTypes = {\r\n    log: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    userId: PropTypes.string,\r\n    isTextLoading: PropTypes.bool.isRequired,\r\n    logEndRef: PropTypes.object.isRequired,\r\n    characterCreated: PropTypes.bool.isRequired\r\n};\r\n\r\n\r\nconst ChoicesPanel = ({ choices, characterCreated, handleChoiceClick, isTextLoading, leaderId, userId, handleTakeLead, getDisplayName }) => {\r\n  const isMyTurn = leaderId === userId;\r\n  const isPreparationPhase = !leaderId;\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-3\">\r\n      {characterCreated && isPreparationPhase && (\r\n        <button\r\n          onClick={handleTakeLead}\r\n          disabled={isTextLoading}\r\n          className=\"w-full px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 bg-green-600 hover:bg-green-700 text-white disabled:opacity-50\"\r\n        >\r\n          [행동권 잡기]\r\n        </button>\r\n      )}\r\n      {characterCreated && leaderId && !isMyTurn && (\r\n         <div className=\"text-center p-3 bg-gray-700 rounded-md text-yellow-300 font-bold\">\r\n            {getDisplayName(leaderId)} 님이 행동 중입니다...\r\n         </div>\r\n      )}\r\n      {characterCreated ? (\r\n        choices.map((choice) => (\r\n          <button\r\n            key={choice.id}\r\n            className={`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 ${isMyTurn ? 'bg-blue-600 hover:bg-blue-700' : 'bg-gray-600 cursor-not-allowed'} text-white`}\r\n            onClick={() => handleChoiceClick(choice)}\r\n            disabled={isTextLoading || !isMyTurn}\r\n          >\r\n            {choice.text}\r\n          </button>\r\n        ))\r\n      ) : (\r\n        Object.keys(professions).map(key => (\r\n          <button\r\n            key={key}\r\n            onClick={() => handleChoiceClick({ id: key, text: `${key}. ${professions[key].name}` })}\r\n            disabled={isTextLoading}\r\n            className=\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 text-left\"\r\n          >\r\n            <p className=\"text-lg text-blue-300\">{`${key}. ${professions[key].name}`}</p>\r\n            <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\r\n          </button>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// prop-types 유효성 검사 추가\r\nChoicesPanel.propTypes = {\r\n    choices: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    characterCreated: PropTypes.bool.isRequired,\r\n    handleChoiceClick: PropTypes.func.isRequired,\r\n    isTextLoading: PropTypes.bool.isRequired,\r\n    leaderId: PropTypes.string,\r\n    userId: PropTypes.string,\r\n    handleTakeLead: PropTypes.func.isRequired,\r\n    getDisplayName: PropTypes.func.isRequired\r\n};\r\n\r\n\r\nconst Sidebar = ({ playerState, getDisplayName, userId, activeUsers, currentLocation }) => (\r\n    <div className=\"flex flex-col space-y-4 bg-gray-700 p-4 rounded-lg shadow-inner\">\r\n        <div>\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">내 정보</h4>\r\n            <div className=\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\">\r\n                <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">직업:</span> {playerState.profession || '미정'}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">위치:</span> {currentLocation}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">능력치:</span> 힘({playerState.stats.strength}) 지능({playerState.stats.intelligence}) 민첩({playerState.stats.agility}) 카리스마({playerState.stats.charisma})</p>\r\n                <p><span className=\"font-semibold text-blue-300\">인벤토리:</span> {playerState.inventory.join(', ') || '비어있음'}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">퀘스트:</span> {playerState.activeQuests.join(', ') || '없음'}</p>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">현재 플레이어들</h4>\r\n            <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\r\n                {activeUsers.length > 0 ? (\r\n                    <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                        {activeUsers.map(user => (\r\n                            <li key={user.id} className=\"truncate p-1 rounded-md\">\r\n                                <span className=\"font-medium text-green-300\">{getDisplayName(user.id)}</span>\r\n                                <span className=\"text-gray-400 text-xs\"> ({user.profession || '모험가'})</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                ) : <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n// prop-types 유효성 검사 추가\r\nSidebar.propTypes = {\r\n    playerState: PropTypes.shape({\r\n        profession: PropTypes.string,\r\n        stats: PropTypes.shape({\r\n            strength: PropTypes.number,\r\n            intelligence: PropTypes.number,\r\n            agility: PropTypes.number,\r\n            charisma: PropTypes.number\r\n        }).isRequired,\r\n        inventory: PropTypes.arrayOf(PropTypes.string),\r\n        activeQuests: PropTypes.arrayOf(PropTypes.string)\r\n    }).isRequired,\r\n    getDisplayName: PropTypes.func.isRequired,\r\n    userId: PropTypes.string,\r\n    activeUsers: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    currentLocation: PropTypes.string.isRequired\r\n};\r\n\r\nconst ChatPanel = ({ messages, chatEndRef, currentMessage, onMessageChange, onSendMessage, isAuthReady, getDisplayName }) => (\r\n    <div className=\"bg-gray-700 p-4 rounded-lg flex flex-col h-full md:h-[32rem]\">\r\n        <h4 className=\"text-md font-semibold text-gray-200 mb-2\">공개 채팅</h4>\r\n        <div className=\"bg-gray-600 p-3 rounded-md flex flex-col flex-grow\">\r\n            <div className=\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\">\r\n                {messages.map((msg) => (\r\n                    <div key={msg.id}><p><span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> {msg.message}</p></div>\r\n                ))}\r\n                <div ref={chatEndRef} />\r\n            </div>\r\n            <div className=\"flex\">\r\n                <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\" value={currentMessage} onChange={onMessageChange} onKeyPress={(e) => e.key === 'Enter' && onSendMessage()} disabled={!isAuthReady} />\r\n                <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\" onClick={onSendMessage} disabled={!isAuthReady || !currentMessage.trim()}>보내기</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n// prop-types 유효성 검사 추가\r\nChatPanel.propTypes = {\r\n    messages: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    chatEndRef: PropTypes.object.isRequired,\r\n    currentMessage: PropTypes.string.isRequired,\r\n    onMessageChange: PropTypes.func.isRequired,\r\n    onSendMessage: PropTypes.func.isRequired,\r\n    isAuthReady: PropTypes.bool.isRequired,\r\n    getDisplayName: PropTypes.func.isRequired\r\n};\r\n\r\n// ====================================================================\r\n// 🖥️ Responsive Layouts\r\n// ====================================================================\r\n\r\nconst DesktopLayout = (props) => (\r\n  <div className=\"w-full max-w-7xl bg-gray-800 rounded-lg shadow-xl p-6 flex space-x-6\">\r\n    <div className=\"flex flex-col w-2/3 space-y-6\">\r\n      <GameLogPanel {...props} />\r\n      <ChoicesPanel {...props} />\r\n    </div>\r\n    <div className=\"w-1/3 flex flex-col space-y-6\">\r\n      <Sidebar {...props} />\r\n      <ChatPanel {...props} />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst MobileLayout = (props) => {\r\n  const [activeTab, setActiveTab] = useState('game'); // 'game', 'info', or 'chat'\r\n\r\n  return (\r\n    <div className=\"w-full h-[90vh] bg-gray-800 rounded-lg shadow-xl p-2 flex flex-col\">\r\n      <div className=\"flex-shrink-0 mb-2\">\r\n        <div className=\"flex border-b border-gray-600\">\r\n          <button onClick={() => setActiveTab('game')} className={`flex-1 py-2 text-center font-bold ${activeTab === 'game' ? 'text-white bg-blue-600' : 'text-gray-400'}`}>게임</button>\r\n          <button onClick={() => setActiveTab('info')} className={`flex-1 py-2 text-center font-bold ${activeTab === 'info' ? 'text-white bg-blue-600' : 'text-gray-400'}`}>정보</button>\r\n          <button onClick={() => setActiveTab('chat')} className={`flex-1 py-2 text-center font-bold ${activeTab === 'chat' ? 'text-white bg-blue-600' : 'text-gray-400'}`}>채팅</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-grow overflow-y-auto\">\r\n        {activeTab === 'game' && (\r\n          <div className=\"flex flex-col space-y-4 h-full\">\r\n            <GameLogPanel {...props} />\r\n            <ChoicesPanel {...props} />\r\n          </div>\r\n        )}\r\n        {activeTab === 'info' && <Sidebar {...props} />}\r\n        {activeTab === 'chat' && <ChatPanel {...props} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ====================================================================\r\n// 🚀 Main App Component\r\n// ====================================================================\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(getDefaultGameState());\r\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const logEndRef = useRef(null);\r\n  const chatEndRef = useRef(null);\r\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\r\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\r\n  const [nicknameInput, setNicknameInput] = useState('');\r\n  const [llmError, setLlmError] = useState(null);\r\n  const [llmRetryPrompt, setLlmRetryPrompt] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [worldHistory, setWorldHistory] = useState([]);\r\n  const [showResetModal, setShowResetModal] = useState(false);\r\n  const [isResetting, setIsResetting] = useState(false);\r\n  \r\n  const [leaderId, setLeaderId] = useState(null);\r\n\r\n  const isDesktop = useMediaQuery({ query: '(min-width: 1024px)' });\r\n\r\n  // --- Helper Functions ---\r\n  const handleNicknameSubmit = () => {\r\n    if (nicknameInput.trim()) {\r\n      const finalNickname = nicknameInput.trim();\r\n      setNickname(finalNickname);\r\n      localStorage.setItem('nickname', finalNickname);\r\n      setShowNicknameModal(false);\r\n      if (userId && db) {\r\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n          setDoc(userDocRef, { nickname: finalNickname }, { merge: true });\r\n      }\r\n    }\r\n  };\r\n  \r\n  const getDisplayName = (uid) => {\r\n    if (!uid) return '시스템';\r\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\r\n    const user = activeUsers.find(u => u.id === uid);\r\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\r\n  };\r\n\r\n  const resetAllGameData = async () => {\r\n    if (!db || !isAuthReady) return;\r\n    setIsResetting(true);\r\n    try {\r\n        const collectionsToDelete = [\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages'),\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers'),\r\n            getMajorEventsRef(db, appId)\r\n        ];\r\n\r\n        for (const colRef of collectionsToDelete) {\r\n            const snapshot = await getDocs(colRef);\r\n            for (const docSnap of snapshot.docs) {\r\n                await deleteDoc(docSnap.ref);\r\n            }\r\n        }\r\n\r\n        const usersColRef = collection(db, 'artifacts', appId, 'users');\r\n        const usersSnapshot = await getDocs(usersColRef);\r\n        for (const userDoc of usersSnapshot.docs) {\r\n            const playerStateColRef = collection(db, 'artifacts', appId, 'users', userDoc.id, 'playerState');\r\n            const playerStateSnapshot = await getDocs(playerStateColRef);\r\n            for (const stateDoc of playerStateSnapshot.docs) {\r\n                await deleteDoc(stateDoc.ref);\r\n            }\r\n            await deleteDoc(doc(db, 'artifacts', appId, 'users', userDoc.id));\r\n        }\r\n\r\n        await deleteDoc(getMainScenarioRef(db, appId));\r\n        await deleteDoc(getGameStatusRef(db, appId));\r\n        \r\n        localStorage.clear();\r\n        console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");\r\n\r\n    } catch (e) {\r\n        console.error(\"전체 데이터 초기화 중 오류 발생:\", e);\r\n    } finally {\r\n      setIsResetting(false);\r\n      setShowResetModal(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n  \r\n  // --- Firebase Listeners ---\r\n  useEffect(() => {\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firebaseAuth = getAuth(app);\r\n      setDb(firestoreDb);\r\n      setAuth(firebaseAuth);\r\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\r\n        if (user) {\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n            await (initialAuthToken ? signInWithCustomToken(firebaseAuth, initialAuthToken) : signInAnonymously(firebaseAuth));\r\n        }\r\n      });\r\n      return () => unsubscribeAuth();\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error:\", error);\r\n      setLlmError(\"Firebase 초기화에 실패했습니다.\");\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!isAuthReady || !db || !userId) return;\r\n\r\n    const unsubscribes = [\r\n      onSnapshot(getPrivatePlayerStateRef(db, appId, userId), (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          setPrivatePlayerState({ ...getDefaultPrivatePlayerState(), ...snapshot.data() });\r\n        } else {\r\n          setDoc(getPrivatePlayerStateRef(db, appId, userId), getDefaultPrivatePlayerState());\r\n        }\r\n        if (isLoading) setIsLoading(false);\r\n      }),\r\n      onSnapshot(getMainScenarioRef(db, appId), (snap) => {\r\n        if (snap.exists()) {\r\n            const data = snap.data();\r\n            setGameState(prev => ({...prev, ...data}));\r\n        } else {\r\n            setGameState(getDefaultGameState());\r\n        }\r\n      }),\r\n      onSnapshot(getGameStatusRef(db, appId), (docSnap) => {\r\n        setLeaderId(docSnap.data()?.leaderId || null);\r\n      }),\r\n      onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages')), (snapshot) => {\r\n        const messages = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n        setChatMessages(messages);\r\n      }),\r\n      onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers')), (snapshot) => {\r\n        const users = snapshot.docs.map(d => ({ id: d.id, ...d.data() }));\r\n        setActiveUsers(users);\r\n      })\r\n    ];\r\n    \r\n    getDocs(getMajorEventsRef(db, appId)).then(historySnapshot => {\r\n      const historyData = historySnapshot.docs.map(doc => doc.data().summary);\r\n      setWorldHistory(historyData);\r\n    });\r\n\r\n    return () => unsubscribes.forEach(unsub => unsub());\r\n  }, [isAuthReady, db, userId]);\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId) return;\r\n    const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n    setDoc(userDocRef, {\r\n      lastActive: serverTimestamp(),\r\n      nickname: nickname || `플레이어 ${userId.substring(0, 4)}`,\r\n      profession: privatePlayerState.profession,\r\n    }, { merge: true });\r\n  }, [db, userId, nickname, privatePlayerState.profession]);\r\n\r\n  useEffect(() => {\r\n    if (logEndRef.current) logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [gameState.log]);\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatMessages]);\r\n\r\n  // --- AI Interaction ---\r\n  const systemPrompt = `\r\n    ### 페르소나 (Persona)\r\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\r\n    ### 핵심 규칙 (매우 중요)\r\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'의 시점에서, 그가 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다.\r\n    2.  **지능형 선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\r\n        -   **제거**: \\`choices_to_remove\\`에 더 이상 유효하지 않은 선택지의 \\`id\\`를 담아 제거하십시오.\r\n        -   **추가**: \\`choices_to_add\\`에 새로운 상황으로 생긴 선택지 객체를 담아 추가하십시오.\r\n    ### JSON 출력 구조\r\n    {\r\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\r\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\r\n      \"choices_to_add\": [{ \"id\": \"unique_id\", \"text\": \"새 선택지\", \"type\": \"event_driven\", \"location\": \"현재 장소\" }],\r\n      \"choices_to_remove\": [\"obsolete_choice_id\"],\r\n      \"sharedStateUpdates\": {\r\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\"\r\n      },\r\n      \"privateStateUpdates\": {\r\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\r\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\r\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"]\r\n      }\r\n    }\r\n  `;\r\n\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    setLlmRetryPrompt(promptData);\r\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\r\n    const backupApiKey = \"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";\r\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n\r\n    const userPrompt = `\r\n      [상황 분석 요청]\r\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\r\n      ### [행동 주체 (Actor)]\r\n      - 이름: ${promptData.actorDisplayNames[0]}\r\n      - 정보: ${JSON.stringify(promptData.privateInfos[Object.keys(promptData.privateInfos)[0]])}\r\n      ### [선택 (Action)]\r\n      - \"${promptData.playerChoice}\"\r\n      ### [배경 정보]\r\n      - 세상의 주요 역사: ${promptData.worldHistory.length > 0 ? promptData.worldHistory.join(', ') : \"없음\"}\r\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\r\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\r\n    `;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\r\n    const tryGeminiCall = async (apiKey) => fetch(getApiUrl(apiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n\r\n    try {\r\n      let response = await tryGeminiCall(mainApiKey);\r\n      if (!response.ok) { response = await tryGeminiCall(backupApiKey); }\r\n      if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); }\r\n      const result = await response.json();\r\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\r\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\r\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\r\n      throw new Error(\"Valid JSON object not found in LLM response.\");\r\n    } catch (error) {\r\n      console.error(\"LLM API call error:\", error);\r\n      setLlmError(error.message || 'LLM 호출 실패');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = async () => {\r\n    if (!db || !userId || !isAuthReady || !currentChatMessage.trim()) return;\r\n    try {\r\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message: currentChatMessage, timestamp: serverTimestamp() });\r\n      setCurrentChatMessage('');\r\n    } catch (error) {\r\n      console.error(\"Error sending chat message:\", error);\r\n    }\r\n  };\r\n\r\n  // --- Game Logic (Turn-based) ---\r\n  const handleTakeLead = async () => {\r\n    if (!db || !userId || leaderId || isTextLoading) return;\r\n    try {\r\n        await setDoc(getGameStatusRef(db, appId), { leaderId: userId }, { merge: true });\r\n    } catch (e) {\r\n        console.error(\"행동권 획득 실패:\", e);\r\n        setLlmError(\"행동권을 가져오는 데 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const performAction = async (choiceObject) => {\r\n    const choiceText = choiceObject.text;\r\n    setIsTextLoading(true);\r\n    setLlmRetryPrompt({ playerChoice: choiceText });\r\n\r\n    try {\r\n        const promptData = {\r\n            actorDisplayNames: [getDisplayName(userId)],\r\n            playerChoice: choiceText,\r\n            sharedInfo: { \r\n                currentLocation: gameState.player.currentLocation, \r\n                subtleClues: gameState.subtleClues,\r\n                currentChoices: gameState.choices \r\n            },\r\n            privateInfos: { [userId]: privatePlayerState },\r\n            worldHistory: worldHistory,\r\n        };\r\n\r\n        const llmResponse = await callGeminiTextLLM(promptData);\r\n\r\n        if (llmResponse) {\r\n            await runTransaction(db, async (transaction) => {\r\n                const mainScenarioRef = getMainScenarioRef(db, appId);\r\n                const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n\r\n                const scenarioDoc = await transaction.get(mainScenarioRef);\r\n                const privateDoc = await transaction.get(privateStateRef);\r\n                \r\n                const currentData = scenarioDoc.exists() ? scenarioDoc.data() : getDefaultGameState();\r\n                \r\n                // 1. Update Public State\r\n                let newChoicePool = [...(currentData.choices || [])];\r\n                if (llmResponse.choices_to_remove) {\r\n                    const idsToRemove = new Set(llmResponse.choices_to_remove);\r\n                    newChoicePool = newChoicePool.filter(c => !idsToRemove.has(c.id));\r\n                }\r\n                if (llmResponse.choices_to_add) {\r\n                    newChoicePool.push(...llmResponse.choices_to_add.filter(c => c.id && c.text));\r\n                }\r\n                const newEvent = {\r\n                    actor: { id: userId, displayName: getDisplayName(userId) },\r\n                    action: choiceText,\r\n                    publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\r\n                    privateStories: llmResponse.privateStory ? { [userId]: llmResponse.privateStory } : {},\r\n                    timestamp: new Date()\r\n                };\r\n                const publicUpdateData = {\r\n                    storyLog: [...(currentData.log || []), newEvent],\r\n                    choices: newChoicePool,\r\n                    lastUpdate: serverTimestamp()\r\n                };\r\n                 if (llmResponse.sharedStateUpdates?.location) {\r\n                    publicUpdateData['player.currentLocation'] = llmResponse.sharedStateUpdates.location;\r\n                }\r\n                transaction.update(mainScenarioRef, publicUpdateData);\r\n\r\n                // 2. Update Private State\r\n                if(privateDoc.exists() && llmResponse.privateStateUpdates) {\r\n                    transaction.update(privateStateRef, llmResponse.privateStateUpdates);\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        setLlmError(error.message);\r\n    } finally {\r\n        await setDoc(getGameStatusRef(db, appId), { leaderId: null }, { merge: true });\r\n        setIsTextLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleChoiceClick = async (choiceObject) => {\r\n    if (isTextLoading) return;\r\n    \r\n    if (!privatePlayerState.characterCreated) {\r\n        setIsTextLoading(true);\r\n        const choiceKey = choiceObject.id;\r\n        const selectedProfession = professions[choiceKey];\r\n        if (selectedProfession) {\r\n            await setDoc(getPrivatePlayerStateRef(db, appId, userId), {\r\n                ...getDefaultPrivatePlayerState(), characterCreated: true, profession: selectedProfession.name, initialMotivation: selectedProfession.motivation,\r\n            }, { merge: true });\r\n            \r\n            const newEvent = {\r\n                actor: { id: userId, displayName: getDisplayName(userId) || `플레이어 ${userId.substring(0,4)}` }, action: \"여관에 들어선다\",\r\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId) || `플레이어 ${userId.substring(0,4)}`}'라는 이름의 ${selectedProfession.name}입니다.`,\r\n                privateStories: { [userId]: selectedProfession.motivation }, timestamp: new Date()\r\n            };\r\n            const mainScenarioRef = getMainScenarioRef(db, appId);\r\n            const scenarioDoc = await getDoc(mainScenarioRef);\r\n            const currentLog = scenarioDoc.exists() ? scenarioDoc.data().log : [];\r\n            await setDoc(mainScenarioRef, { ...getDefaultGameState(), log: [...currentLog, newEvent] }, { merge: true });\r\n        }\r\n        setIsTextLoading(false);\r\n        return;\r\n    }\r\n\r\n    if (leaderId === userId) {\r\n        await performAction(choiceObject);\r\n    }\r\n  };\r\n\r\n  const getVisibleChoices = () => {\r\n    const masterChoicePool = gameState.choices || [];\r\n    const privateChoicePool = privatePlayerState.choices || [];\r\n    const currentLocation = gameState.player.currentLocation;\r\n\r\n    const visiblePublicChoices = masterChoicePool.filter(choice => {\r\n      return !choice.location || choice.location === currentLocation;\r\n    });\r\n    \r\n    const allChoices = [...visiblePublicChoices, ...privateChoicePool];\r\n    return allChoices.filter((choice, index, self) =>\r\n        index === self.findIndex((c) => c.id === choice.id)\r\n    );\r\n  };\r\n\r\n  // --- Render ---\r\n  const LlmErrorModal = () => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\r\n        <h3 className=\"text-xl font-bold text-red-400\">오류가 발생했습니다</h3>\r\n        <p className=\"text-gray-200\">{llmError}</p>\r\n        <div className=\"flex justify-center gap-4\">\r\n          {llmRetryPrompt && (\r\n            <button\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\"\r\n              onClick={async () => {\r\n                setLlmError(null);\r\n                if (llmRetryPrompt.playerChoice) {\r\n                  await performAction({ id: 'retry', text: llmRetryPrompt.playerChoice });\r\n                }\r\n              }}\r\n            >\r\n              재시도\r\n            </button>\r\n          )}\r\n          <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => { setLlmError(null); setLlmRetryPrompt(null); }}>\r\n            닫기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  if (showNicknameModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">닉네임을 입력하세요</h3>\r\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\r\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>시작하기</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">데이터를 불러오는 중...</span></div>;\r\n  }\r\n\r\n  const componentProps = {\r\n    log: gameState.log,\r\n    choices: getVisibleChoices(),\r\n    userId,\r\n    isTextLoading,\r\n    logEndRef,\r\n    characterCreated: privatePlayerState.characterCreated,\r\n    handleChoiceClick,\r\n    leaderId,\r\n    handleTakeLead,\r\n    getDisplayName,\r\n    playerState: privatePlayerState,\r\n    activeUsers,\r\n    currentLocation: gameState.player.currentLocation,\r\n    messages: chatMessages,\r\n    chatEndRef,\r\n    currentMessage: currentChatMessage,\r\n    onMessageChange: (e) => setCurrentChatMessage(e.target.value),\r\n    onSendMessage: sendChatMessage,\r\n    isAuthReady,\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center p-1 md:p-4 font-sans\">\r\n      {llmError && <LlmErrorModal />}\r\n      {showResetModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-red-400\">⚠️ 모든 데이터를 초기화할까요?</h3>\r\n            <p className=\"text-gray-200\">이 작업은 되돌릴 수 없습니다. 모든 시나리오, 로그, 유저, 채팅 데이터가 삭제됩니다.</p>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => setShowResetModal(false)} disabled={isResetting}>취소</button>\r\n              <button className=\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\" onClick={resetAllGameData} disabled={isResetting}>{isResetting ? '초기화 중...' : '초기화'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      {isDesktop ? <DesktopLayout {...componentProps} /> : <MobileLayout {...componentProps} />}\r\n\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body { font-family: 'Noto Sans KR', sans-serif; }\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}