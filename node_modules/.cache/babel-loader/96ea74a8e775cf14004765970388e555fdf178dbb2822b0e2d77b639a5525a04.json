{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc}from'firebase/firestore';// ====================================================================\n// TODO: 여기에 사용자님의 개인 Firebase 구성 정보를 직접 붙여넣으세요!\n// Firebase Console에서 복사한 firebaseConfig 객체를 여기에 붙여넣습니다.\n// **주의: \"YOUR_API_KEY\", \"YOUR_AUTH_DOMAIN\" 등의 플레이스홀더를\n// 반드시 사용자님의 실제 Firebase 프로젝트 정보로 교체해야 합니다.**\nimport{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const firebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.firebasestorage.app\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};// ====================================================================\n// Canvas 환경에서 제공되던 전역 변수들은 더 이상 사용하지 않습니다.\n// const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\n// const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-text-adventure-app';\n// 사용자님의 Firebase projectId를 앱 ID로 사용합니다.\nconst appId=firebaseConfig.projectId;// 게임의 초기 직업 정보 및 동기\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};function App(){// 게임의 현재 텍스트 로그 (개인)\nconst[gameLog,setGameLog]=useState([]);// LLM 텍스트 응답 로딩 상태\nconst[isTextLoading,setIsTextLoading]=useState(false);// 게임 단계: 'characterSelection' 또는 'playing'\nconst[gamePhase,setGamePhase]=useState('characterSelection');// 플레이어 캐릭터 정보\nconst[playerCharacter,setPlayerCharacter]=useState({profession:'',stats:{strength:10,intelligence:10,agility:10,charisma:10},// 기본 능력치\ninventory:[],initialMotivation:'',currentLocation:'왕국의 수도 외곽',// 초기 위치\nreputation:{},// NPC/세력 평판 (LLM이 관리)\nactiveQuests:[],// 활성 퀘스트 (LLM이 관리)\ncompanions:[]// 동료 (LLM이 관리)\n});// 현재 플레이어에게 제시되는 선택지들\nconst[currentChoices,setCurrentChoices]=useState([]);// 피드백 모달 표시 여부\nconst[showFeedbackModal,setShowFeedbackModal]=useState(false);// 피드백 텍스트\nconst[feedbackText,setFeedbackText]=useState('');// 공유 게임 로그 (멀티플레이어)\nconst[sharedGameLog,setSharedGameLog]=useState([]);// 활성 사용자 목록 (멀티플레이어)\nconst[activeUsers,setActiveUsers]=useState([]);// Firebase 및 인증 상태\nconst[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);// 스크롤을 최하단으로 유지하기 위한 ref\nconst logEndRef=useRef(null);const sharedLogEndRef=useRef(null);// Firebase 초기화 및 인증 처리\nuseEffect(()=>{try{// Firebase API 키가 플레이스홀더인지 확인합니다.\nif(firebaseConfig.apiKey===\"YOUR_API_KEY\"||!firebaseConfig.apiKey){console.error(\"Firebase 초기화 오류: firebaseConfig.apiKey를 사용자님의 실제 Firebase API 키로 교체해야 합니다.\");setGameLog(prev=>[...prev,\"오류: Firebase API 키가 올바르게 설정되지 않았습니다. 코드를 확인해주세요.\"]);return;// Firebase 초기화를 중단합니다.\n}const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{// Canvas의 __initial_auth_token 대신 익명 로그인 시도\ntry{await signInAnonymously(firebaseAuth);}catch(error){console.error(\"Anonymous sign-in failed:\",error);setGameLog(prev=>[...prev,\"오류: Firebase 인증에 실패했습니다.\"]);}}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);setGameLog(prev=>[...prev,\"오류: 게임을 초기화할 수 없습니다.\"]);}},[]);// Firebase 인증 완료 후 멀티플레이어 데이터 리스너 설정\nuseEffect(()=>{if(!db||!isAuthReady||!userId||!auth)return;// 1. 공유 게임 로그 리스너\n// Firestore 보안 규칙에 따라 경로를 조정합니다.\n// 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\nconst sharedLogCollectionRef=collection(db,'artifacts',appId,'public','data','sharedGameLog');const qSharedLog=query(sharedLogCollectionRef);const unsubscribeSharedLog=onSnapshot(qSharedLog,snapshot=>{const logs=snapshot.docs.map(doc=>({id:doc.id,...doc.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});// 타임스탬프 기준으로 정렬\nsetSharedGameLog(logs);},error=>{console.error(\"Shared game log snapshot error:\",error);});// 2. 활성 사용자 목록 리스너\n// 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\nconst activeUsersCollectionRef=collection(db,'artifacts',appId,'public','data','activeUsers');const qActiveUsers=query(activeUsersCollectionRef);const unsubscribeActiveUsers=onSnapshot(qActiveUsers,snapshot=>{const users=snapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setActiveUsers(users);},error=>{console.error(\"Active users snapshot error:\",error);});// 사용자 접속 상태 업데이트 (주기적으로)\nconst updateUserPresence=async()=>{if(userId){try{const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);await setDoc(userDocRef,{lastActive:serverTimestamp(),displayName:`플레이어 ${userId.substring(0,4)}`// 사용자 ID의 일부만 표시\n},{merge:true});}catch(error){console.error(\"Failed to update user presence:\",error);}}};updateUserPresence();// 초기 업데이트\nconst presenceInterval=setInterval(updateUserPresence,30000);// 30초마다 업데이트\nreturn()=>{unsubscribeSharedLog();unsubscribeActiveUsers();clearInterval(presenceInterval);};},[db,isAuthReady,userId,auth]);// 게임 시작 시 초기 메시지 및 직업 선택지 설정\nuseEffect(()=>{if(gamePhase==='characterSelection'){setGameLog([\"환영합니다! 당신은 중세 유럽풍 판타지 왕국의 모험가가 될 것입니다.\",\"어떤 직업을 선택하시겠습니까?\"]);setCurrentChoices(Object.keys(professions).map(key=>`${key}. ${professions[key].name}`));}},[gamePhase]);// 게임 로그가 업데이트될 때마다 스크롤을 최하단으로 이동\nuseEffect(()=>{if(logEndRef.current){logEndRef.current.scrollIntoView({behavior:\"smooth\"});}},[gameLog]);// 공유 로그가 업데이트될 때마다 스크롤을 최하단으로 이동\nuseEffect(()=>{if(sharedLogEndRef.current){sharedLogEndRef.current.scrollIntoView({behavior:\"smooth\"});}},[sharedGameLog]);// LLM에 보낼 시스템 프롬프트 정의\nconst systemPrompt=`\n    당신은 중세 유럽풍 판타지 텍스트 어드벤처 게임의 스토리텔러이자 게임 마스터입니다.\n    플레이어의 선택과 현재 게임 상태를 기반으로 스토리를 진행하고, 새로운 상황을 묘사하며, 다음 선택지를 제시해야 합니다.\n    당신은 3인칭으로 서술하며, 진지하고 서사적인 어조와 객관적이고 정보 전달적인 어조를 적절히 섞어 사용합니다.\n    정보는 직접적인 설명, 간접적인 묘사, NPC 대화, 아이템/문서 등 다양한 방식으로 제공합니다.\n    묘사의 세부 정도는 LLM이 유연하게 조절하되, 중요하거나 인상적인 장면에서는 상세하게 묘사합니다.\n    플레이어의 목표는 고정되어 있지 않으며, 플레이어의 선택과 행동에 따라 유동적으로 형성되어 무한한 엔딩으로 이어집니다.\n    간단한 인벤토리 시스템(주요 스토리 아이템 위주)을 고려하며, 아이템 획득 또는 사용 시 스토리 묘사에 반영합니다.\n    간단한 텍스트 기반 전투(선택 및 확률 기반)를 시뮬레이션합니다. 전투 시 적을 묘사하고, 플레이어의 행동, 능력치와 확률에 기반한 결과, 능력치 변화 또는 피해를 묘사합니다.\n    능력치(힘, 지능, 민첩, 카리스마)가 존재하며, 플레이어의 행동에 따라 능력치가 어떻게 변화하고 성장하는지 서사적으로 묘사해야 합니다.\n    LLM 기반 퍼즐을 생성하고 해결을 유도할 수 있습니다. 퍼즐을 제시할 때는 퍼즐의 내용과 해결 방법을 명확히 제시합니다.\n    시간 제한은 없습니다.\n\n    이야기를 통해 새로운 퀘스트를 암시적으로 도입합니다. 예를 들어, NPC가 도움을 요청하거나, 어떤 발견이 새로운 목표로 이어질 수 있습니다.\n    NPC 및 세력 평판을 이야기 내에서 암시적으로 관리합니다. 플레이어의 행동이 NPC 반응에 어떻게 영향을 미치는지 묘사합니다.\n    플레이어에게 잠재적인 동료를 소개합니다. 동료가 영입되면, 그들의 존재와 플레이어 및 세계와의 상호작용을 묘사합니다.\n    퀘스트 진행 상황, 평판 변화, 동료 상호작용을 JSON 출력에 명확히 포함하여 게임 로직이 이를 추적할 수 있도록 합니다.\n\n    당신은 항상 유효한 JSON 형식으로 응답해야 합니다. 구문에 세심한 주의를 기울이십시오. 모든 문자열은 올바르게 인용되어야 하며, 객체 또는 배열의 마지막 요소 뒤에 후행 쉼표가 없어야 합니다. 배열의 모든 요소는 쉼표로 구분되어야 합니다. 다음 JSON 스키마를 엄격히 따르십시오:\n    {\n      \"story\": \"현재 상황에 대한 스토리 텍스트 (3인칭으로 서술).\",\n      \"choices\": [\"선택지 1\", \"선택지 2\", ...],\n      \"inventoryUpdates\": [\"아이템1\", \"아이템2\", ...],\n      \"statChanges\": {\"strength\": 12, \"intelligence\": 10, ...},\n      \"location\": \"플레이어의 현재 위치\",\n      \"reputationUpdates\": {\"세력명\": \"상태\", ...},\n      \"activeQuestsUpdates\": [\"퀘스트1\", \"퀘스트2\", ...],\n      \"companionsUpdates\": [\"동료1\", \"동료2\", ...]\n    }\n    항상 2개에서 5개 사이의 'choices'를 제공하십시오.\n    'inventoryUpdates', 'statChanges', 'location', 'reputationUpdates', 'activeQuestsUpdates', 'companionsUpdates'는 변경 사항이 없더라도 현재 상태를 포함하여야 합니다.\n    스토리 텍스트는 500자 이내여야 합니다.\n  `;// LLM 텍스트 생성 함수 (Gemini-2.0-flash)\nconst callGeminiTextLLM=async promptData=>{setIsTextLoading(true);console.log(\"DEBUG: Starting callGeminiTextLLM\");// 여기에 본인의 Gemini API 키를 입력하세요.\n// Canvas 환경이 아니므로 직접 키를 입력해야 합니다.\nconst apiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";// <-- 여기에 실제 Gemini API 키를 입력하세요!\nconst apiUrl=`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const userPrompt=`\n      현재 게임 단계: ${promptData.phase}\n      플레이어 직업: ${promptData.character.profession}\n      플레이어 초기 동기: ${promptData.character.initialMotivation}\n      현재 능력치: ${JSON.stringify(promptData.character.stats)}\n      현재 인벤토리: ${JSON.stringify(promptData.character.inventory)}\n      현재 위치: ${promptData.character.currentLocation}\n      현재 평판: ${JSON.stringify(promptData.character.reputation)}\n      현재 활성 퀘스트: ${JSON.stringify(promptData.character.activeQuests)}\n      현재 동료: ${JSON.stringify(promptData.character.companions)}\n      이전 게임 로그 (마지막 5개 항목): ${JSON.stringify(promptData.history.slice(-5))}\n      플레이어의 마지막 선택: ${promptData.playerChoice}\n\n      위 정보를 바탕으로 다음 스토리 부분을 한국어로 생성하고, 시스템 프롬프트의 JSON 스키마에 따라 선택지를 제공하십시오.\n    `;const chatHistory=[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"user\",parts:[{text:userPrompt}]}];const payload={contents:chatHistory};console.log(\"DEBUG: Payload:\",JSON.stringify(payload,null,2));try{const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});console.log(\"DEBUG: Fetch response received.\");if(!response.ok){const errorBody=await response.text();console.error(\"DEBUG: HTTP Error Response:\",response.status,response.statusText,errorBody);throw new Error(`HTTP error! status: ${response.status}, body: ${errorBody}`);}const result=await response.json();console.log(\"DEBUG: Parsed JSON result:\",JSON.stringify(result,null,2));if(result.candidates&&result.candidates.length>0&&result.candidates[0].content&&result.candidates[0].content.parts&&result.candidates[0].content.parts.length>0){let llmOutputText=result.candidates[0].content.parts[0].text;console.log(\"DEBUG: LLM Raw Output Text:\",llmOutputText);// Extract JSON object from the LLM response, in case it includes pre/postamble text.\nconst jsonMatch=llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch){llmOutputText=jsonMatch[0];}else{throw new Error(\"Valid JSON object not found in LLM response.\");}// Attempt to parse the extracted JSON string.\ntry{const llmOutput=JSON.parse(llmOutputText);console.log(\"DEBUG: LLM Parsed Output JSON:\",JSON.stringify(llmOutput,null,2));return llmOutput;}catch(parsingError){console.error(\"JSON Parsing Error:\",parsingError);console.error(\"Malformed JSON string from LLM:\",llmOutputText);throw new Error(`LLM response was not valid JSON. Details: ${parsingError.message}`);}}else{console.error(\"LLM 응답 구조가 예상과 다릅니다:\",result);throw new Error(\"Invalid LLM response structure.\");}}catch(error){console.error(\"LLM API 호출 오류:\",error);return{story:`오류: LLM API 호출 중 문제가 발생했습니다: ${error.message}. 네트워크 연결을 확인하고 다시 시도해주세요.`,choices:[\"다시 시도\"],inventoryUpdates:promptData.character.inventory,statChanges:promptData.character.stats,location:promptData.character.currentLocation,reputationUpdates:promptData.character.reputation,activeQuestsUpdates:promptData.character.activeQuests,companionsUpdates:promptData.character.companions};}finally{setIsTextLoading(false);console.log(\"DEBUG: Finished callGeminiTextLLM\");}};// Function to save game state.\nconst saveGame=async()=>{if(!db||!userId||!isAuthReady){setGameLog(prev=>[...prev,\"오류: 게임을 저장할 수 없습니다. 인증 상태를 확인해주세요.\"]);return;}setIsTextLoading(true);try{// 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\nconst gameDocRef=doc(db,'artifacts',appId,'users',userId,'textAdventureGame','gameState');await setDoc(gameDocRef,{gameLog:gameLog,gamePhase:gamePhase,playerCharacter:playerCharacter,currentChoices:currentChoices,timestamp:new Date().toISOString()});setGameLog(prev=>[...prev,\"\\n게임이 성공적으로 저장되었습니다.\"]);}catch(error){console.error(\"게임 저장 오류:\",error);setGameLog(prev=>[...prev,`\\n게임 저장 중 오류가 발생했습니다: ${error.message}`]);}finally{setIsTextLoading(false);}};// Function to load game state.\nconst loadGame=async()=>{if(!db||!userId||!isAuthReady){setGameLog(prev=>[...prev,\"오류: 게임을 불러올 수 없습니다. 인증 상태를 확인해주세요.\"]);return;}setIsTextLoading(true);try{// 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\nconst gameDocRef=doc(db,'artifacts',appId,'users',userId,'textAdventureGame','gameState');const docSnap=await getDoc(gameDocRef);if(docSnap.exists()){const savedData=docSnap.data();setGameLog(savedData.gameLog||[]);setGamePhase(savedData.gamePhase||'characterSelection');setPlayerCharacter(savedData.playerCharacter||{profession:'',stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',currentLocation:'왕국의 수도 외곽',reputation:{},activeQuests:[],companions:[]});setCurrentChoices(savedData.currentChoices||[]);setGameLog(prev=>[...prev,\"\\n게임이 성공적으로 불러와졌습니다.\"]);}else{setGameLog(prev=>[...prev,\"\\n저장된 게임이 없습니다.\"]);}}catch(error){console.error(\"게임 불러오기 오류:\",error);setGameLog(prev=>[...prev,`\\n게임 불러오기 중 오류가 발생했습니다: ${error.message}`]);}finally{setIsTextLoading(false);}};// Function to send user feedback.\nconst sendFeedback=async()=>{if(!db||!userId||!isAuthReady||!feedbackText.trim()){setGameLog(prev=>[...prev,\"피드백을 보낼 수 없습니다. 내용을 입력하거나 인증 상태를 확인해주세요.\"]);return;}setIsTextLoading(true);try{// 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\nconst feedbackCollectionRef=collection(db,'artifacts',appId,'users',userId,'feedback');await addDoc(feedbackCollectionRef,{feedback:feedbackText,gameLogSnapshot:gameLog.slice(-10),// 최근 10개 로그 스냅샷\nplayerCharacterSnapshot:playerCharacter,timestamp:serverTimestamp()});setGameLog(prev=>[...prev,\"\\n피드백이 성공적으로 전송되었습니다. 감사합니다!\"]);setFeedbackText('');setShowFeedbackModal(false);}catch(error){console.error(\"피드백 전송 오류:\",error);setGameLog(prev=>[...prev,`\\n피드백 전송 중 오류가 발생했습니다: ${error.message}`]);}finally{setIsTextLoading(false);}};// 플레이어 선택 버튼 클릭 처리 함수\nconst handleChoiceClick=async choice=>{if(isTextLoading)return;// 텍스트 로딩 중이면 처리 안 함\nsetGameLog(prev=>[...prev,`\\n> 당신의 선택: ${choice}\\n`]);setCurrentChoices([]);// 선택지를 비워서 중복 클릭 방지 및 다음 응답 대기\nlet promptData;if(gamePhase==='characterSelection'){const chosenProfessionKey=choice.split('.')[0].trim();const chosenProfession=professions[chosenProfessionKey];if(chosenProfession){// 직업 선택 시 초기 캐릭터 상태 설정\nconst initialCharacterState={profession:chosenProfession.name,stats:{strength:chosenProfession.name.includes('기사')||chosenProfession.name.includes('용병')?12:10,intelligence:chosenProfession.name.includes('마법사')?12:10,agility:chosenProfession.name.includes('도적')?12:10,charisma:chosenProfession.name.includes('왕족')?12:10},inventory:[],initialMotivation:chosenProfession.motivation,currentLocation:'왕국의 수도 외곽',reputation:{},activeQuests:[],companions:[]};setPlayerCharacter(initialCharacterState);// 먼저 캐릭터 상태를 업데이트\n// LLM에 보낼 프롬프트 데이터 구성\npromptData={phase:'characterSelection',playerChoice:choice,character:initialCharacterState,// 업데이트된 캐릭터 상태를 LLM에 전달\nhistory:gameLog};// LLM 호출\nconst llmResponse=await callGeminiTextLLM(promptData);setGameLog(prev=>[...prev,llmResponse.story]);setPlayerCharacter(prev=>({...prev,inventory:llmResponse.inventoryUpdates||prev.inventory,stats:llmResponse.statChanges||prev.stats,currentLocation:llmResponse.location||prev.currentLocation,reputation:llmResponse.reputationUpdates||prev.reputation,activeQuests:llmResponse.activeQuestsUpdates||prev.activeQuests,companions:llmResponse.companionsUpdates||prev.companions}));setCurrentChoices(llmResponse.choices||[]);setGamePhase('playing');// 게임 단계 변경\n}else{setGameLog(prev=>[...prev,\"유효하지 않은 선택입니다. 제시된 직업 중 하나를 선택해주세요.\"]);setCurrentChoices(Object.keys(professions).map(key=>`${key}. ${professions[key].name}`));// 다시 직업 선택지 표시\n}}else{// gamePhase === 'playing'\n// 게임 플레이 중 LLM에 보낼 프롬프트 데이터 구성\npromptData={phase:'playing',playerChoice:choice,character:playerCharacter,// 현재 캐릭터 상태를 LLM에 전달\nhistory:gameLog};// LLM 호출\nconst llmResponse=await callGeminiTextLLM(promptData);setGameLog(prev=>[...prev,llmResponse.story]);// LLM 응답을 공유 로그에 추가 (멀티플레이어 기능)\nif(db&&userId){try{// 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\nconst sharedLogCollectionRef=collection(db,'artifacts',appId,'public','data','sharedGameLog');await addDoc(sharedLogCollectionRef,{userId:userId,displayName:`플레이어 ${userId.substring(0,4)}`,content:`[${playerCharacter.profession}]의 선택: ${choice}\\n\\n${llmResponse.story}`,timestamp:serverTimestamp()});}catch(error){console.error(\"Failed to add to shared log:\",error);}}setPlayerCharacter(prev=>({...prev,inventory:llmResponse.inventoryUpdates||prev.inventory,stats:llmResponse.statChanges||prev.stats,currentLocation:llmResponse.location||prev.currentLocation,reputation:llmResponse.reputationUpdates||prev.reputation,activeQuests:llmResponse.activeQuestsUpdates||prev.activeQuests,companions:llmResponse.companionsUpdates||prev.companions}));setCurrentChoices(llmResponse.choices||[]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 space-y-6\",children:[isAuthReady&&userId&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 text-center mb-2\",children:[\"\\uC0AC\\uC6A9\\uC790 ID: \",userId]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",children:[gameLog.map((line,index)=>/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mb-1\",dangerouslySetInnerHTML:{__html:line.replace(/\\n/g,'<br />')}},index)),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef}),\" \"]}),gamePhase==='playing'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uC9C1\\uC5C5:\"}),\" \",playerCharacter.profession]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uC704\\uCE58:\"}),\" \",playerCharacter.currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",playerCharacter.stats.strength,\") \\uC9C0\\uB2A5(\",playerCharacter.stats.intelligence,\") \\uBBFC\\uCCA9(\",playerCharacter.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",playerCharacter.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",playerCharacter.inventory.length>0?playerCharacter.inventory.join(', '):'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uD3C9\\uD310:\"}),\" \",Object.keys(playerCharacter.reputation).length>0?Object.entries(playerCharacter.reputation).map(_ref=>{let[key,value]=_ref;return`${key}: ${value}`;}).join(', '):'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",playerCharacter.activeQuests.length>0?playerCharacter.activeQuests.join(', '):'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-gray-100\",children:\"\\uB3D9\\uB8CC:\"}),\" \",playerCharacter.companions.length>0?playerCharacter.companions.join(', '):'없음']})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:currentChoices.map((choice,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:()=>handleChoiceClick(choice),disabled:isTextLoading,children:choice},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col md:flex-row gap-3 mt-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:saveGame,disabled:isTextLoading||!isAuthReady||gamePhase==='characterSelection',children:\"\\uAC8C\\uC784 \\uC800\\uC7A5\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flex-1 px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:loadGame,disabled:isTextLoading||!isAuthReady,children:\"\\uAC8C\\uC784 \\uBD88\\uB7EC\\uC624\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"flex-1 px-6 py-3 bg-yellow-600 hover:bg-yellow-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:()=>setShowFeedbackModal(true),disabled:isTextLoading||!isAuthReady,children:\"\\uD53C\\uB4DC\\uBC31 \\uBCF4\\uB0B4\\uAE30\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold text-gray-100 text-center mb-4\",children:\"\\uACF5\\uC720\\uB41C \\uBAA8\\uD5D8\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4:\"}),activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-blue-300\",children:user.displayName}),\" (ID: \",user.id,\")\"]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex-grow h-96 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uBAA8\\uB4E0 \\uD50C\\uB808\\uC774\\uC5B4\\uC758 \\uD65C\\uB3D9:\"}),sharedGameLog.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-300 space-y-2\",children:[sharedGameLog.map(logEntry=>/*#__PURE__*/_jsxs(\"div\",{className:\"border-b border-gray-500 pb-2 last:border-b-0\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-xs text-gray-400 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-purple-300\",children:logEntry.displayName}),\" (\",logEntry.timestamp?new Date(logEntry.timestamp.toMillis()).toLocaleTimeString():'시간 없음',\")\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap\",dangerouslySetInnerHTML:{__html:logEntry.content.replace(/\\n/g,'<br />')}})]},logEntry.id)),/*#__PURE__*/_jsx(\"div\",{ref:sharedLogEndRef})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uACF5\\uC720\\uB41C \\uD65C\\uB3D9\\uC774 \\uC544\\uC9C1 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})]})]})]}),showFeedbackModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uD53C\\uB4DC\\uBC31 \\uBCF4\\uB0B4\\uAE30\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 h-32 resize-none\",placeholder:\"\\uAC8C\\uC784\\uC5D0 \\uB300\\uD55C \\uD53C\\uB4DC\\uBC31\\uC744 \\uC5EC\\uAE30\\uC5D0 \\uC791\\uC131\\uD574\\uC8FC\\uC138\\uC694...\",value:feedbackText,onChange:e=>setFeedbackText(e.target.value),disabled:isTextLoading}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:()=>setShowFeedbackModal(false),disabled:isTextLoading,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:sendFeedback,disabled:isTextLoading||!feedbackText.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body {\n          font-family: 'Noto Sans KR', sans-serif;\n        }\n        .custom-scrollbar::-webkit-scrollbar {\n          width: 8px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-track {\n          background: #4a5568; /* gray-600 */\n          border-radius: 10px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb {\n          background: #6b7280; /* gray-500 */\n          border-radius: 10px;\n        }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n          background: #9ca3af; /* gray-400 */\n        }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","jsxs","_jsxs","jsx","_jsx","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","professions","name","motivation","App","gameLog","setGameLog","isTextLoading","setIsTextLoading","gamePhase","setGamePhase","playerCharacter","setPlayerCharacter","profession","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","currentLocation","reputation","activeQuests","companions","currentChoices","setCurrentChoices","showFeedbackModal","setShowFeedbackModal","feedbackText","setFeedbackText","sharedGameLog","setSharedGameLog","activeUsers","setActiveUsers","db","setDb","auth","setAuth","userId","setUserId","isAuthReady","setIsAuthReady","logEndRef","sharedLogEndRef","console","error","prev","app","firestoreDb","firebaseAuth","unsubscribeAuth","user","uid","sharedLogCollectionRef","qSharedLog","unsubscribeSharedLog","snapshot","logs","docs","map","id","data","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","activeUsersCollectionRef","qActiveUsers","unsubscribeActiveUsers","users","updateUserPresence","userDocRef","lastActive","displayName","substring","merge","presenceInterval","setInterval","clearInterval","Object","keys","key","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","log","apiUrl","userPrompt","phase","character","JSON","stringify","history","slice","playerChoice","chatHistory","role","parts","text","payload","contents","response","fetch","method","headers","body","ok","errorBody","status","statusText","Error","result","json","candidates","length","content","llmOutputText","jsonMatch","match","llmOutput","parse","parsingError","message","story","choices","inventoryUpdates","statChanges","location","reputationUpdates","activeQuestsUpdates","companionsUpdates","saveGame","gameDocRef","Date","toISOString","loadGame","docSnap","exists","savedData","sendFeedback","trim","feedbackCollectionRef","feedback","gameLogSnapshot","playerCharacterSnapshot","handleChoiceClick","choice","chosenProfessionKey","split","chosenProfession","initialCharacterState","includes","llmResponse","className","children","line","index","dangerouslySetInnerHTML","__html","replace","ref","join","entries","_ref","value","onClick","disabled","logEntry","toLocaleTimeString","placeholder","onChange","e","target"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from 'firebase/auth';\r\nimport { getFirestore, doc, setDoc, getDoc, collection, query, onSnapshot, serverTimestamp, addDoc } from 'firebase/firestore';\r\n\r\n// ====================================================================\r\n// TODO: 여기에 사용자님의 개인 Firebase 구성 정보를 직접 붙여넣으세요!\r\n// Firebase Console에서 복사한 firebaseConfig 객체를 여기에 붙여넣습니다.\r\n// **주의: \"YOUR_API_KEY\", \"YOUR_AUTH_DOMAIN\" 등의 플레이스홀더를\r\n// 반드시 사용자님의 실제 Firebase 프로젝트 정보로 교체해야 합니다.**\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.firebasestorage.app\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\n// ====================================================================\r\n\r\n// Canvas 환경에서 제공되던 전역 변수들은 더 이상 사용하지 않습니다.\r\n// const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;\r\n// const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-text-adventure-app';\r\n\r\n// 사용자님의 Firebase projectId를 앱 ID로 사용합니다.\r\nconst appId = firebaseConfig.projectId;\r\n\r\n\r\n// 게임의 초기 직업 정보 및 동기\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\nfunction App() {\r\n  // 게임의 현재 텍스트 로그 (개인)\r\n  const [gameLog, setGameLog] = useState([]);\r\n  // LLM 텍스트 응답 로딩 상태\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  // 게임 단계: 'characterSelection' 또는 'playing'\r\n  const [gamePhase, setGamePhase] = useState('characterSelection');\r\n  // 플레이어 캐릭터 정보\r\n  const [playerCharacter, setPlayerCharacter] = useState({\r\n    profession: '',\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 }, // 기본 능력치\r\n    inventory: [],\r\n    initialMotivation: '',\r\n    currentLocation: '왕국의 수도 외곽', // 초기 위치\r\n    reputation: {}, // NPC/세력 평판 (LLM이 관리)\r\n    activeQuests: [], // 활성 퀘스트 (LLM이 관리)\r\n    companions: [], // 동료 (LLM이 관리)\r\n  });\r\n  // 현재 플레이어에게 제시되는 선택지들\r\n  const [currentChoices, setCurrentChoices] = useState([]);\r\n  // 피드백 모달 표시 여부\r\n  const [showFeedbackModal, setShowFeedbackModal] = useState(false);\r\n  // 피드백 텍스트\r\n  const [feedbackText, setFeedbackText] = useState('');\r\n  // 공유 게임 로그 (멀티플레이어)\r\n  const [sharedGameLog, setSharedGameLog] = useState([]);\r\n  // 활성 사용자 목록 (멀티플레이어)\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n\r\n  // Firebase 및 인증 상태\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n\r\n  // 스크롤을 최하단으로 유지하기 위한 ref\r\n  const logEndRef = useRef(null);\r\n  const sharedLogEndRef = useRef(null);\r\n\r\n  // Firebase 초기화 및 인증 처리\r\n  useEffect(() => {\r\n    try {\r\n      // Firebase API 키가 플레이스홀더인지 확인합니다.\r\n      if (firebaseConfig.apiKey === \"YOUR_API_KEY\" || !firebaseConfig.apiKey) {\r\n        console.error(\"Firebase 초기화 오류: firebaseConfig.apiKey를 사용자님의 실제 Firebase API 키로 교체해야 합니다.\");\r\n        setGameLog(prev => [...prev, \"오류: Firebase API 키가 올바르게 설정되지 않았습니다. 코드를 확인해주세요.\"]);\r\n        return; // Firebase 초기화를 중단합니다.\r\n      }\r\n\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firebaseAuth = getAuth(app);\r\n\r\n      setDb(firestoreDb);\r\n      setAuth(firebaseAuth);\r\n\r\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\r\n        if (user) {\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n            // Canvas의 __initial_auth_token 대신 익명 로그인 시도\r\n            try {\r\n                await signInAnonymously(firebaseAuth);\r\n            } catch (error) {\r\n                console.error(\"Anonymous sign-in failed:\", error);\r\n                setGameLog(prev => [...prev, \"오류: Firebase 인증에 실패했습니다.\"]);\r\n            }\r\n        }\r\n      });\r\n\r\n      return () => unsubscribeAuth();\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error:\", error);\r\n      setGameLog(prev => [...prev, \"오류: 게임을 초기화할 수 없습니다.\"]);\r\n    }\r\n  }, []);\r\n\r\n  // Firebase 인증 완료 후 멀티플레이어 데이터 리스너 설정\r\n  useEffect(() => {\r\n    if (!db || !isAuthReady || !userId || !auth) return;\r\n\r\n    // 1. 공유 게임 로그 리스너\r\n    // Firestore 보안 규칙에 따라 경로를 조정합니다.\r\n    // 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\r\n    const sharedLogCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'sharedGameLog');\r\n    const qSharedLog = query(sharedLogCollectionRef);\r\n    const unsubscribeSharedLog = onSnapshot(qSharedLog, (snapshot) => {\r\n      const logs = snapshot.docs\r\n        .map(doc => ({ id: doc.id, ...doc.data() }))\r\n        .sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0)); // 타임스탬프 기준으로 정렬\r\n      setSharedGameLog(logs);\r\n    }, (error) => {\r\n      console.error(\"Shared game log snapshot error:\", error);\r\n    });\r\n\r\n    // 2. 활성 사용자 목록 리스너\r\n    // 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\r\n    const activeUsersCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers');\r\n    const qActiveUsers = query(activeUsersCollectionRef);\r\n    const unsubscribeActiveUsers = onSnapshot(qActiveUsers, (snapshot) => {\r\n      const users = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n      setActiveUsers(users);\r\n    }, (error) => {\r\n      console.error(\"Active users snapshot error:\", error);\r\n    });\r\n\r\n    // 사용자 접속 상태 업데이트 (주기적으로)\r\n    const updateUserPresence = async () => {\r\n      if (userId) {\r\n        try {\r\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n          await setDoc(userDocRef, {\r\n            lastActive: serverTimestamp(),\r\n            displayName: `플레이어 ${userId.substring(0, 4)}`, // 사용자 ID의 일부만 표시\r\n          }, { merge: true });\r\n        } catch (error) {\r\n          console.error(\"Failed to update user presence:\", error);\r\n        }\r\n      }\r\n    };\r\n\r\n    updateUserPresence(); // 초기 업데이트\r\n    const presenceInterval = setInterval(updateUserPresence, 30000); // 30초마다 업데이트\r\n\r\n    return () => {\r\n      unsubscribeSharedLog();\r\n      unsubscribeActiveUsers();\r\n      clearInterval(presenceInterval);\r\n    };\r\n  }, [db, isAuthReady, userId, auth]);\r\n\r\n\r\n  // 게임 시작 시 초기 메시지 및 직업 선택지 설정\r\n  useEffect(() => {\r\n    if (gamePhase === 'characterSelection') {\r\n      setGameLog([\r\n        \"환영합니다! 당신은 중세 유럽풍 판타지 왕국의 모험가가 될 것입니다.\",\r\n        \"어떤 직업을 선택하시겠습니까?\"\r\n      ]);\r\n      setCurrentChoices(Object.keys(professions).map(key => `${key}. ${professions[key].name}`));\r\n    }\r\n  }, [gamePhase]);\r\n\r\n  // 게임 로그가 업데이트될 때마다 스크롤을 최하단으로 이동\r\n  useEffect(() => {\r\n    if (logEndRef.current) {\r\n      logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [gameLog]);\r\n\r\n  // 공유 로그가 업데이트될 때마다 스크롤을 최하단으로 이동\r\n  useEffect(() => {\r\n    if (sharedLogEndRef.current) {\r\n      sharedLogEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [sharedGameLog]);\r\n\r\n  // LLM에 보낼 시스템 프롬프트 정의\r\n  const systemPrompt = `\r\n    당신은 중세 유럽풍 판타지 텍스트 어드벤처 게임의 스토리텔러이자 게임 마스터입니다.\r\n    플레이어의 선택과 현재 게임 상태를 기반으로 스토리를 진행하고, 새로운 상황을 묘사하며, 다음 선택지를 제시해야 합니다.\r\n    당신은 3인칭으로 서술하며, 진지하고 서사적인 어조와 객관적이고 정보 전달적인 어조를 적절히 섞어 사용합니다.\r\n    정보는 직접적인 설명, 간접적인 묘사, NPC 대화, 아이템/문서 등 다양한 방식으로 제공합니다.\r\n    묘사의 세부 정도는 LLM이 유연하게 조절하되, 중요하거나 인상적인 장면에서는 상세하게 묘사합니다.\r\n    플레이어의 목표는 고정되어 있지 않으며, 플레이어의 선택과 행동에 따라 유동적으로 형성되어 무한한 엔딩으로 이어집니다.\r\n    간단한 인벤토리 시스템(주요 스토리 아이템 위주)을 고려하며, 아이템 획득 또는 사용 시 스토리 묘사에 반영합니다.\r\n    간단한 텍스트 기반 전투(선택 및 확률 기반)를 시뮬레이션합니다. 전투 시 적을 묘사하고, 플레이어의 행동, 능력치와 확률에 기반한 결과, 능력치 변화 또는 피해를 묘사합니다.\r\n    능력치(힘, 지능, 민첩, 카리스마)가 존재하며, 플레이어의 행동에 따라 능력치가 어떻게 변화하고 성장하는지 서사적으로 묘사해야 합니다.\r\n    LLM 기반 퍼즐을 생성하고 해결을 유도할 수 있습니다. 퍼즐을 제시할 때는 퍼즐의 내용과 해결 방법을 명확히 제시합니다.\r\n    시간 제한은 없습니다.\r\n\r\n    이야기를 통해 새로운 퀘스트를 암시적으로 도입합니다. 예를 들어, NPC가 도움을 요청하거나, 어떤 발견이 새로운 목표로 이어질 수 있습니다.\r\n    NPC 및 세력 평판을 이야기 내에서 암시적으로 관리합니다. 플레이어의 행동이 NPC 반응에 어떻게 영향을 미치는지 묘사합니다.\r\n    플레이어에게 잠재적인 동료를 소개합니다. 동료가 영입되면, 그들의 존재와 플레이어 및 세계와의 상호작용을 묘사합니다.\r\n    퀘스트 진행 상황, 평판 변화, 동료 상호작용을 JSON 출력에 명확히 포함하여 게임 로직이 이를 추적할 수 있도록 합니다.\r\n\r\n    당신은 항상 유효한 JSON 형식으로 응답해야 합니다. 구문에 세심한 주의를 기울이십시오. 모든 문자열은 올바르게 인용되어야 하며, 객체 또는 배열의 마지막 요소 뒤에 후행 쉼표가 없어야 합니다. 배열의 모든 요소는 쉼표로 구분되어야 합니다. 다음 JSON 스키마를 엄격히 따르십시오:\r\n    {\r\n      \"story\": \"현재 상황에 대한 스토리 텍스트 (3인칭으로 서술).\",\r\n      \"choices\": [\"선택지 1\", \"선택지 2\", ...],\r\n      \"inventoryUpdates\": [\"아이템1\", \"아이템2\", ...],\r\n      \"statChanges\": {\"strength\": 12, \"intelligence\": 10, ...},\r\n      \"location\": \"플레이어의 현재 위치\",\r\n      \"reputationUpdates\": {\"세력명\": \"상태\", ...},\r\n      \"activeQuestsUpdates\": [\"퀘스트1\", \"퀘스트2\", ...],\r\n      \"companionsUpdates\": [\"동료1\", \"동료2\", ...]\r\n    }\r\n    항상 2개에서 5개 사이의 'choices'를 제공하십시오.\r\n    'inventoryUpdates', 'statChanges', 'location', 'reputationUpdates', 'activeQuestsUpdates', 'companionsUpdates'는 변경 사항이 없더라도 현재 상태를 포함하여야 합니다.\r\n    스토리 텍스트는 500자 이내여야 합니다.\r\n  `;\r\n\r\n  // LLM 텍스트 생성 함수 (Gemini-2.0-flash)\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    console.log(\"DEBUG: Starting callGeminiTextLLM\");\r\n    // 여기에 본인의 Gemini API 키를 입력하세요.\r\n    // Canvas 환경이 아니므로 직접 키를 입력해야 합니다.\r\n    const apiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\"; // <-- 여기에 실제 Gemini API 키를 입력하세요!\r\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n    \r\n    const userPrompt = `\r\n      현재 게임 단계: ${promptData.phase}\r\n      플레이어 직업: ${promptData.character.profession}\r\n      플레이어 초기 동기: ${promptData.character.initialMotivation}\r\n      현재 능력치: ${JSON.stringify(promptData.character.stats)}\r\n      현재 인벤토리: ${JSON.stringify(promptData.character.inventory)}\r\n      현재 위치: ${promptData.character.currentLocation}\r\n      현재 평판: ${JSON.stringify(promptData.character.reputation)}\r\n      현재 활성 퀘스트: ${JSON.stringify(promptData.character.activeQuests)}\r\n      현재 동료: ${JSON.stringify(promptData.character.companions)}\r\n      이전 게임 로그 (마지막 5개 항목): ${JSON.stringify(promptData.history.slice(-5))}\r\n      플레이어의 마지막 선택: ${promptData.playerChoice}\r\n\r\n      위 정보를 바탕으로 다음 스토리 부분을 한국어로 생성하고, 시스템 프롬프트의 JSON 스키마에 따라 선택지를 제공하십시오.\r\n    `;\r\n    \r\n    const chatHistory = [\r\n        { role: \"user\", parts: [{ text: systemPrompt }] },\r\n        { role: \"user\", parts: [{ text: userPrompt }] }\r\n    ];\r\n\r\n    const payload = {\r\n      contents: chatHistory,\r\n    };\r\n    console.log(\"DEBUG: Payload:\", JSON.stringify(payload, null, 2));\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      console.log(\"DEBUG: Fetch response received.\");\r\n\r\n      if (!response.ok) {\r\n          const errorBody = await response.text();\r\n          console.error(\"DEBUG: HTTP Error Response:\", response.status, response.statusText, errorBody);\r\n          throw new Error(`HTTP error! status: ${response.status}, body: ${errorBody}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(\"DEBUG: Parsed JSON result:\", JSON.stringify(result, null, 2));\r\n\r\n      if (result.candidates && result.candidates.length > 0 &&\r\n          result.candidates[0].content && result.candidates[0].content.parts &&\r\n          result.candidates[0].content.parts.length > 0) {\r\n        \r\n        let llmOutputText = result.candidates[0].content.parts[0].text;\r\n        console.log(\"DEBUG: LLM Raw Output Text:\", llmOutputText);\r\n        \r\n        // Extract JSON object from the LLM response, in case it includes pre/postamble text.\r\n        const jsonMatch = llmOutputText.match(/\\{[\\s\\S]*\\}/);\r\n        if (jsonMatch) {\r\n            llmOutputText = jsonMatch[0];\r\n        } else {\r\n            throw new Error(\"Valid JSON object not found in LLM response.\");\r\n        }\r\n        \r\n        // Attempt to parse the extracted JSON string.\r\n        try {\r\n            const llmOutput = JSON.parse(llmOutputText);\r\n            console.log(\"DEBUG: LLM Parsed Output JSON:\", JSON.stringify(llmOutput, null, 2));\r\n            return llmOutput;\r\n        } catch (parsingError) {\r\n            console.error(\"JSON Parsing Error:\", parsingError);\r\n            console.error(\"Malformed JSON string from LLM:\", llmOutputText);\r\n            throw new Error(`LLM response was not valid JSON. Details: ${parsingError.message}`);\r\n        }\r\n\r\n      } else {\r\n        console.error(\"LLM 응답 구조가 예상과 다릅니다:\", result);\r\n        throw new Error(\"Invalid LLM response structure.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"LLM API 호출 오류:\", error);\r\n      return {\r\n        story: `오류: LLM API 호출 중 문제가 발생했습니다: ${error.message}. 네트워크 연결을 확인하고 다시 시도해주세요.`,\r\n        choices: [\"다시 시도\"],\r\n        inventoryUpdates: promptData.character.inventory,\r\n        statChanges: promptData.character.stats,\r\n        location: promptData.character.currentLocation,\r\n        reputationUpdates: promptData.character.reputation,\r\n        activeQuestsUpdates: promptData.character.activeQuests,\r\n        companionsUpdates: promptData.character.companions,\r\n      };\r\n    } finally {\r\n      setIsTextLoading(false);\r\n      console.log(\"DEBUG: Finished callGeminiTextLLM\");\r\n    }\r\n  };\r\n\r\n  // Function to save game state.\r\n  const saveGame = async () => {\r\n    if (!db || !userId || !isAuthReady) {\r\n      setGameLog(prev => [...prev, \"오류: 게임을 저장할 수 없습니다. 인증 상태를 확인해주세요.\"]);\r\n      return;\r\n    }\r\n\r\n    setIsTextLoading(true);\r\n    try {\r\n      // 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\r\n      const gameDocRef = doc(db, 'artifacts', appId, 'users', userId, 'textAdventureGame', 'gameState');\r\n      await setDoc(gameDocRef, {\r\n        gameLog: gameLog,\r\n        gamePhase: gamePhase,\r\n        playerCharacter: playerCharacter,\r\n        currentChoices: currentChoices,\r\n        timestamp: new Date().toISOString()\r\n      });\r\n      setGameLog(prev => [...prev, \"\\n게임이 성공적으로 저장되었습니다.\"]);\r\n    } catch (error) {\r\n      console.error(\"게임 저장 오류:\", error);\r\n      setGameLog(prev => [...prev, `\\n게임 저장 중 오류가 발생했습니다: ${error.message}`]);\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to load game state.\r\n  const loadGame = async () => {\r\n    if (!db || !userId || !isAuthReady) {\r\n      setGameLog(prev => [...prev, \"오류: 게임을 불러올 수 없습니다. 인증 상태를 확인해주세요.\"]);\r\n      return;\r\n    }\r\n\r\n    setIsTextLoading(true);\r\n    try {\r\n      // 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\r\n      const gameDocRef = doc(db, 'artifacts', appId, 'users', userId, 'textAdventureGame', 'gameState');\r\n      const docSnap = await getDoc(gameDocRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const savedData = docSnap.data();\r\n        setGameLog(savedData.gameLog || []);\r\n        setGamePhase(savedData.gamePhase || 'characterSelection');\r\n        setPlayerCharacter(savedData.playerCharacter || {\r\n          profession: '',\r\n          stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n          inventory: [],\r\n          initialMotivation: '',\r\n          currentLocation: '왕국의 수도 외곽',\r\n          reputation: {},\r\n          activeQuests: [],\r\n          companions: [],\r\n        });\r\n        setCurrentChoices(savedData.currentChoices || []);\r\n        setGameLog(prev => [...prev, \"\\n게임이 성공적으로 불러와졌습니다.\"]);\r\n      } else {\r\n        setGameLog(prev => [...prev, \"\\n저장된 게임이 없습니다.\"]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"게임 불러오기 오류:\", error);\r\n      setGameLog(prev => [...prev, `\\n게임 불러오기 중 오류가 발생했습니다: ${error.message}`]);\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to send user feedback.\r\n  const sendFeedback = async () => {\r\n    if (!db || !userId || !isAuthReady || !feedbackText.trim()) {\r\n      setGameLog(prev => [...prev, \"피드백을 보낼 수 없습니다. 내용을 입력하거나 인증 상태를 확인해주세요.\"]);\r\n      return;\r\n    }\r\n\r\n    setIsTextLoading(true);\r\n    try {\r\n      // 개인 데이터는 /artifacts/{appId}/users/{userId}/{your_collection_name}\r\n      const feedbackCollectionRef = collection(db, 'artifacts', appId, 'users', userId, 'feedback');\r\n      await addDoc(feedbackCollectionRef, {\r\n        feedback: feedbackText,\r\n        gameLogSnapshot: gameLog.slice(-10), // 최근 10개 로그 스냅샷\r\n        playerCharacterSnapshot: playerCharacter,\r\n        timestamp: serverTimestamp(),\r\n      });\r\n      setGameLog(prev => [...prev, \"\\n피드백이 성공적으로 전송되었습니다. 감사합니다!\"]);\r\n      setFeedbackText('');\r\n      setShowFeedbackModal(false);\r\n    } catch (error) {\r\n      console.error(\"피드백 전송 오류:\", error);\r\n      setGameLog(prev => [...prev, `\\n피드백 전송 중 오류가 발생했습니다: ${error.message}`]);\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  // 플레이어 선택 버튼 클릭 처리 함수\r\n  const handleChoiceClick = async (choice) => {\r\n    if (isTextLoading) return; // 텍스트 로딩 중이면 처리 안 함\r\n\r\n    setGameLog(prev => [...prev, `\\n> 당신의 선택: ${choice}\\n`]);\r\n    setCurrentChoices([]); // 선택지를 비워서 중복 클릭 방지 및 다음 응답 대기\r\n\r\n    let promptData;\r\n    if (gamePhase === 'characterSelection') {\r\n      const chosenProfessionKey = choice.split('.')[0].trim();\r\n      const chosenProfession = professions[chosenProfessionKey];\r\n\r\n      if (chosenProfession) {\r\n        // 직업 선택 시 초기 캐릭터 상태 설정\r\n        const initialCharacterState = {\r\n          profession: chosenProfession.name,\r\n          stats: {\r\n            strength: chosenProfession.name.includes('기사') || chosenProfession.name.includes('용병') ? 12 : 10,\r\n            intelligence: chosenProfession.name.includes('마법사') ? 12 : 10,\r\n            agility: chosenProfession.name.includes('도적') ? 12 : 10,\r\n            charisma: chosenProfession.name.includes('왕족') ? 12 : 10,\r\n          },\r\n          inventory: [],\r\n          initialMotivation: chosenProfession.motivation,\r\n          currentLocation: '왕국의 수도 외곽',\r\n          reputation: {},\r\n          activeQuests: [],\r\n          companions: [],\r\n        };\r\n        setPlayerCharacter(initialCharacterState); // 먼저 캐릭터 상태를 업데이트\r\n\r\n        // LLM에 보낼 프롬프트 데이터 구성\r\n        promptData = {\r\n          phase: 'characterSelection',\r\n          playerChoice: choice,\r\n          character: initialCharacterState, // 업데이트된 캐릭터 상태를 LLM에 전달\r\n          history: gameLog,\r\n        };\r\n\r\n        // LLM 호출\r\n        const llmResponse = await callGeminiTextLLM(promptData);\r\n        setGameLog(prev => [...prev, llmResponse.story]);\r\n\r\n        setPlayerCharacter(prev => ({\r\n          ...prev,\r\n          inventory: llmResponse.inventoryUpdates || prev.inventory,\r\n          stats: llmResponse.statChanges || prev.stats,\r\n          currentLocation: llmResponse.location || prev.currentLocation,\r\n          reputation: llmResponse.reputationUpdates || prev.reputation,\r\n          activeQuests: llmResponse.activeQuestsUpdates || prev.activeQuests,\r\n          companions: llmResponse.companionsUpdates || prev.companions,\r\n        }));\r\n        setCurrentChoices(llmResponse.choices || []);\r\n        setGamePhase('playing'); // 게임 단계 변경\r\n      } else {\r\n        setGameLog(prev => [...prev, \"유효하지 않은 선택입니다. 제시된 직업 중 하나를 선택해주세요.\"]);\r\n        setCurrentChoices(Object.keys(professions).map(key => `${key}. ${professions[key].name}`)); // 다시 직업 선택지 표시\r\n      }\r\n\r\n    } else { // gamePhase === 'playing'\r\n      // 게임 플레이 중 LLM에 보낼 프롬프트 데이터 구성\r\n      promptData = {\r\n        phase: 'playing',\r\n        playerChoice: choice,\r\n        character: playerCharacter, // 현재 캐릭터 상태를 LLM에 전달\r\n        history: gameLog,\r\n      };\r\n\r\n      // LLM 호출\r\n      const llmResponse = await callGeminiTextLLM(promptData);\r\n      setGameLog(prev => [...prev, llmResponse.story]);\r\n\r\n      // LLM 응답을 공유 로그에 추가 (멀티플레이어 기능)\r\n      if (db && userId) {\r\n        try {\r\n          // 공개 데이터는 /artifacts/{appId}/public/data/{your_collection_name}\r\n          const sharedLogCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'sharedGameLog');\r\n          await addDoc(sharedLogCollectionRef, {\r\n            userId: userId,\r\n            displayName: `플레이어 ${userId.substring(0, 4)}`,\r\n            content: `[${playerCharacter.profession}]의 선택: ${choice}\\n\\n${llmResponse.story}`,\r\n            timestamp: serverTimestamp(),\r\n          });\r\n        } catch (error) {\r\n          console.error(\"Failed to add to shared log:\", error);\r\n        }\r\n      }\r\n\r\n      setPlayerCharacter(prev => ({\r\n        ...prev,\r\n        inventory: llmResponse.inventoryUpdates || prev.inventory,\r\n        stats: llmResponse.statChanges || prev.stats,\r\n        currentLocation: llmResponse.location || prev.currentLocation,\r\n        reputation: llmResponse.reputationUpdates || prev.reputation,\r\n        activeQuests: llmResponse.activeQuestsUpdates || prev.activeQuests,\r\n        companions: llmResponse.companionsUpdates || prev.companions,\r\n      }));\r\n      setCurrentChoices(llmResponse.choices || []);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      <div className=\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\">\r\n        {/* 메인 게임 영역 */}\r\n        <div className=\"flex flex-col w-full lg:w-2/3 space-y-6\">\r\n          {/* 사용자 ID 표시 (디버깅 및 다중 사용자 식별용) */}\r\n          {isAuthReady && userId && (\r\n            <div className=\"text-xs text-gray-500 text-center mb-2\">\r\n              사용자 ID: {userId}\r\n            </div>\r\n          )}\r\n\r\n          {/* 게임 텍스트 출력 영역 */}\r\n          <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\">\r\n            {gameLog.map((line, index) => (\r\n              <p key={index} className=\"whitespace-pre-wrap mb-1\" dangerouslySetInnerHTML={{ __html: line.replace(/\\n/g, '<br />') }}></p>\r\n            ))}\r\n            {isTextLoading && (\r\n              <div className=\"flex justify-center items-center mt-4\">\r\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\r\n                <span className=\"ml-3 text-gray-400\">\r\n                  이야기를 생성 중...\r\n                </span>\r\n              </div>\r\n            )}\r\n            <div ref={logEndRef} /> {/* 스크롤 위치를 위한 빈 div */}\r\n          </div>\r\n\r\n          {/* 캐릭터 정보 표시 */}\r\n          {gamePhase === 'playing' && (\r\n            <div className=\"bg-gray-700 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1\">\r\n              <p><span className=\"font-semibold text-gray-100\">직업:</span> {playerCharacter.profession}</p>\r\n              <p><span className=\"font-semibold text-gray-100\">위치:</span> {playerCharacter.currentLocation}</p>\r\n              <p><span className=\"font-semibold text-gray-100\">능력치:</span> 힘({playerCharacter.stats.strength}) 지능({playerCharacter.stats.intelligence}) 민첩({playerCharacter.stats.agility}) 카리스마({playerCharacter.stats.charisma})</p>\r\n              <p><span className=\"font-semibold text-gray-100\">인벤토리:</span> {playerCharacter.inventory.length > 0 ? playerCharacter.inventory.join(', ') : '비어있음'}</p>\r\n              <p><span className=\"font-semibold text-gray-100\">평판:</span> {Object.keys(playerCharacter.reputation).length > 0 ? Object.entries(playerCharacter.reputation).map(([key, value]) => `${key}: ${value}`).join(', ') : '없음'}</p>\r\n              <p><span className=\"font-semibold text-gray-100\">퀘스트:</span> {playerCharacter.activeQuests.length > 0 ? playerCharacter.activeQuests.join(', ') : '없음'}</p>\r\n              <p><span className=\"font-semibold text-gray-100\">동료:</span> {playerCharacter.companions.length > 0 ? playerCharacter.companions.join(', ') : '없음'}</p>\r\n            </div>\r\n          )}\r\n\r\n          {/* 선택 버튼 영역 */}\r\n          <div className=\"flex flex-col gap-3\">\r\n            {currentChoices.map((choice, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={() => handleChoiceClick(choice)}\r\n                disabled={isTextLoading}\r\n              >\r\n                {choice}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* 저장/불러오기 및 피드백 버튼 */}\r\n          <div className=\"flex flex-col md:flex-row gap-3 mt-4\">\r\n            <button\r\n              className=\"flex-1 px-6 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              onClick={saveGame}\r\n              disabled={isTextLoading || !isAuthReady || gamePhase === 'characterSelection'}\r\n            >\r\n              게임 저장\r\n            </button>\r\n            <button\r\n              className=\"flex-1 px-6 py-3 bg-purple-600 hover:bg-purple-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              onClick={loadGame}\r\n              disabled={isTextLoading || !isAuthReady}\r\n            >\r\n              게임 불러오기\r\n            </button>\r\n            <button\r\n              className=\"flex-1 px-6 py-3 bg-yellow-600 hover:bg-yellow-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:ring-offset-2 focus:ring-offset-gray-800 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              onClick={() => setShowFeedbackModal(true)}\r\n              disabled={isTextLoading || !isAuthReady}\r\n            >\r\n              피드백 보내기\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 멀티플레이어 사이드바 */}\r\n        <div className=\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\">\r\n          <h3 className=\"text-lg font-bold text-gray-100 text-center mb-4\">공유된 모험</h3>\r\n          \r\n          {/* 활성 사용자 목록 */}\r\n          <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">현재 플레이어들:</h4>\r\n            {activeUsers.length > 0 ? (\r\n              <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                {activeUsers.map(user => (\r\n                  <li key={user.id} className=\"truncate\">\r\n                    <span className=\"font-medium text-blue-300\">{user.displayName}</span> (ID: {user.id})\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* 공유 게임 로그 */}\r\n          <div className=\"bg-gray-600 p-3 rounded-md flex-grow h-96 overflow-y-auto custom-scrollbar\">\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">모든 플레이어의 활동:</h4>\r\n            {sharedGameLog.length > 0 ? (\r\n              <div className=\"text-sm text-gray-300 space-y-2\">\r\n                {sharedGameLog.map((logEntry) => (\r\n                  <div key={logEntry.id} className=\"border-b border-gray-500 pb-2 last:border-b-0\">\r\n                    <p className=\"text-xs text-gray-400 mb-1\">\r\n                      <span className=\"font-medium text-purple-300\">{logEntry.displayName}</span> (\r\n                      {logEntry.timestamp ? new Date(logEntry.timestamp.toMillis()).toLocaleTimeString() : '시간 없음'})\r\n                    </p>\r\n                    <p className=\"whitespace-pre-wrap\" dangerouslySetInnerHTML={{ __html: logEntry.content.replace(/\\n/g, '<br />') }}></p>\r\n                  </div>\r\n                ))}\r\n                <div ref={sharedLogEndRef} />\r\n              </div>\r\n            ) : (\r\n              <p className=\"text-sm text-gray-400\">공유된 활동이 아직 없습니다.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 피드백 모달 */}\r\n      {showFeedbackModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">피드백 보내기</h3>\r\n            <textarea\r\n              className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 h-32 resize-none\"\r\n              placeholder=\"게임에 대한 피드백을 여기에 작성해주세요...\"\r\n              value={feedbackText}\r\n              onChange={(e) => setFeedbackText(e.target.value)}\r\n              disabled={isTextLoading}\r\n            ></textarea>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button\r\n                className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={() => setShowFeedbackModal(false)}\r\n                disabled={isTextLoading}\r\n              >\r\n                취소\r\n              </button>\r\n              <button\r\n                className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={sendFeedback}\r\n                disabled={isTextLoading || !feedbackText.trim()}\r\n              >\r\n                보내기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body {\r\n          font-family: 'Noto Sans KR', sans-serif;\r\n        }\r\n        .custom-scrollbar::-webkit-scrollbar {\r\n          width: 8px;\r\n        }\r\n        .custom-scrollbar::-webkit-scrollbar-track {\r\n          background: #4a5568; /* gray-600 */\r\n          border-radius: 10px;\r\n        }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb {\r\n          background: #6b7280; /* gray-500 */\r\n          border-radius: 10px;\r\n        }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n          background: #9ca3af; /* gray-400 */\r\n        }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}