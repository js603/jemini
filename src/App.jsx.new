import React, { useState, useEffect } from 'react';
import { initializeApp } from 'firebase/app';
import { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';
import { getFirestore } from 'firebase/firestore';
import { useMediaQuery } from 'react-responsive';

// Import components
import GameRoom from './components/GameRoom';
import Lobby from './components/Lobby';

// Import services
import aiService from './services/ai';

/**
 * Firebase 연동 설정: Firebase 프로젝트의 구성 정보입니다.
 */
const firebaseConfig = {
  apiKey: 'AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8',
  authDomain: 'text-adventure-game-cb731.firebaseapp.com',
  projectId: 'text-adventure-game-cb731',
  storageBucket: 'text-adventure-game-cb731.appspot.com',
  messagingSenderId: '1092941614820',
  appId: '1:1092941614820:web:5545f36014b73c268026f1',
  measurementId: 'G-FNGF42T1FP',
};

/**
 * 최상위 컴포넌트: Firebase 초기화, 사용자 인증 및 게임 상태에 따른 화면 전환을 담당합니다.
 */
function App() {
  const [db, setDb] = useState(null);
  const [user, setUser] = useState(null);
  const [gameId, setGameId] = useState(null);
  const isMobile = useMediaQuery({ maxWidth: 768 });

  // 컴포넌트 마운트 시 Firebase 초기화 및 익명 로그인 처리
  useEffect(() => {
    const app = initializeApp(firebaseConfig);
    const authInstance = getAuth(app);
    const dbInstance = getFirestore(app);
    setDb(dbInstance);
    
    const unsubscribe = onAuthStateChanged(authInstance, (currentUser) => {
      if (currentUser) setUser(currentUser);
      else signInAnonymously(authInstance).catch(error => console.error("익명 로그인 실패:", error));
    });
    
    return () => unsubscribe();
  }, []);

  // 로딩 화면
  if (!user || !db) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500 mx-auto mb-4"></div>
          <p className="text-xl text-gray-700">로딩 중...</p>
        </div>
      </div>
    );
  }

  // 게임 ID 유무에 따라 로비 또는 게임방을 렌더링
  return (
    <div className="min-h-screen bg-gradient-to-b from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-900 text-gray-900 dark:text-gray-100">
      <div className={`container mx-auto px-4 ${isMobile ? 'py-4' : 'py-8'} max-w-7xl`}>
        <header className="mb-6">
          <h1 className="text-3xl md:text-4xl font-bold text-center text-indigo-800 dark:text-indigo-400">왕관의 회의 (최종 버전)</h1>
          <p className="text-center text-gray-600 dark:text-gray-400 mt-2">사용자 ID: {user.uid.substring(0, 8)}...</p>
          <div className="border-b border-gray-300 dark:border-gray-700 mt-4"></div>
        </header>
        <main>
          {gameId ? 
            <GameRoom db={db} user={user} gameId={gameId} setGameId={setGameId} /> : 
            <Lobby db={db} user={user} setGameId={setGameId} />
          }
        </main>
      </div>
    </div>
  );
}

export default App;