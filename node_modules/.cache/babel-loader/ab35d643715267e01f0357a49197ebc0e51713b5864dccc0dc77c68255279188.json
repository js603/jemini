{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction}from'firebase/firestore';// ====================================================================\n// Firebase configuration information - 수정 금지\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};// 수정금지\nconst firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;const initialAuthToken=null;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore 경로 유틸\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');const getGameStatusRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','gameStatus','status');const getMajorEventsRef=(db,appId)=>collection(db,'artifacts',appId,'public','data','majorEvents');// 상태 초기화 유틸\nconst getDefaultGameState=()=>({phase:'playing',log:[],choices:[],player:{currentLocation:'방랑자의 안식처'},subtleClues:[]});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',reputation:{},activeQuests:[],companions:[],knownClues:[],characterCreated:false,profession:'',choices:[],groups:[],npcRelations:{}});function App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[currentChatMessage,setCurrentChatMessage]=useState('');const[actionLocks,setActionLocks]=useState({});const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const logEndRef=useRef(null);const chatEndRef=useRef(null);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[accordion,setAccordion]=useState({gameLog:true,chat:true,users:true,playerInfo:true});const[showResetModal,setShowResetModal]=useState(false);const[isResetting,setIsResetting]=useState(false);const[llmError,setLlmError]=useState(null);const[llmRetryPrompt,setLlmRetryPrompt]=useState(null);const[isLoading,setIsLoading]=useState(true);const[worldHistory,setWorldHistory]=useState([]);const handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);if(userId&&db){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{nickname:finalNickname},{merge:true});}}};const getDisplayName=uid=>{if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const resetAllGameData=async()=>{if(!db||!isAuthReady)return;setIsResetting(true);try{const collectionsToDelete=[collection(db,'artifacts',appId,'public','data','chatMessages'),collection(db,'artifacts',appId,'public','data','activeUsers'),getMajorEventsRef(db,appId)];for(const colRef of collectionsToDelete){const snapshot=await getDocs(colRef);for(const docSnap of snapshot.docs){await deleteDoc(docSnap.ref);}}const usersColRef=collection(db,'artifacts',appId,'users');const usersSnapshot=await getDocs(usersColRef);for(const userDoc of usersSnapshot.docs){const playerStateColRef=collection(db,'artifacts',appId,'users',userDoc.id,'playerState');const playerStateSnapshot=await getDocs(playerStateColRef);for(const stateDoc of playerStateSnapshot.docs){await deleteDoc(stateDoc.ref);}await deleteDoc(doc(db,'artifacts',appId,'users',userDoc.id));}await deleteDoc(getMainScenarioRef(db,appId));await deleteDoc(getGameStatusRef(db,appId));localStorage.clear();setGameState(getDefaultGameState());setPrivatePlayerState(getDefaultPrivatePlayerState());setChatMessages([]);setActionLocks({});console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");}catch(e){console.error(\"전체 데이터 초기화 중 오류 발생:\",e);}finally{setIsResetting(false);setShowResetModal(false);window.location.reload();}};useEffect(()=>{try{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{await(initialAuthToken?signInWithCustomToken(firebaseAuth,initialAuthToken):signInAnonymously(firebaseAuth));}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);setLlmError(\"Firebase 초기화에 실패했습니다.\");}},[]);useEffect(()=>{if(!db||!userId||!isAuthReady)return;const setupPlayerState=async()=>{setIsLoading(true);const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);try{const docSnap=await getDoc(privateStateRef);if(!docSnap.exists()){await setDoc(privateStateRef,getDefaultPrivatePlayerState());}const unsubscribe=onSnapshot(privateStateRef,snapshot=>{if(snapshot.exists()){setPrivatePlayerState({...getDefaultPrivatePlayerState(),...snapshot.data()});}if(isLoading)setIsLoading(false);},err=>{console.error(\"실시간 데이터 수신 오류:\",err);setLlmError(\"데이터 수신 중 오류가 발생했습니다.\");setIsLoading(false);});return unsubscribe;}catch(error){console.error(\"플레이어 상태 설정 오류:\",error);setLlmError(\"플레이어 정보를 가져오는 데 실패했습니다.\");setIsLoading(false);}};let unsubscribePromise=setupPlayerState();return()=>{unsubscribePromise.then(unsub=>{if(unsub)unsub();});};},[db,userId,isAuthReady]);useEffect(()=>{if(isLoading||!db||!isAuthReady||!userId||!auth)return;if(!privatePlayerState.characterCreated)return;const gameStatusRef=getGameStatusRef(db,appId);const unsubscribeGameStatus=onSnapshot(gameStatusRef,docSnap=>{var _docSnap$data;setActionLocks(((_docSnap$data=docSnap.data())===null||_docSnap$data===void 0?void 0:_docSnap$data.actionLocks)||{});});const chatMessagesColRef=collection(db,'artifacts',appId,'public','data','chatMessages');const unsubscribeChat=onSnapshot(query(chatMessagesColRef),snapshot=>{const messages=snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});setChatMessages(messages);});const activeUsersColRef=collection(db,'artifacts',appId,'public','data','activeUsers');const unsubscribeActiveUsers=onSnapshot(query(activeUsersColRef),snapshot=>{const cutoffTime=Date.now()-60*1000;const users=snapshot.docs.map(d=>({id:d.id,...d.data()})).filter(u=>u.lastActive&&u.lastActive.toMillis()>cutoffTime);setActiveUsers(users);});const mainScenarioRef=getMainScenarioRef(db,appId);const unsubscribeMainScenario=onSnapshot(mainScenarioRef,snap=>{if(snap.exists()){const data=snap.data();setGameState(prev=>{var _data$player;return{...prev,log:data.storyLog||[],choices:data.choices||[],player:{...prev.player,currentLocation:((_data$player=data.player)===null||_data$player===void 0?void 0:_data$player.currentLocation)||prev.player.currentLocation},subtleClues:data.subtleClues||[]};});}},error=>{console.error(\"Main scenario snapshot error:\",error);setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");});const fetchHistory=async()=>{const historySnapshot=await getDocs(getMajorEventsRef(db,appId));const historyData=historySnapshot.docs.map(doc=>doc.data().summary);setWorldHistory(historyData);};fetchHistory();return()=>{unsubscribeGameStatus();unsubscribeChat();unsubscribeActiveUsers();unsubscribeMainScenario();};},[db,isAuthReady,userId,auth,isLoading,privatePlayerState.characterCreated]);useEffect(()=>{if(!db||!userId||!nickname)return;const updateUserPresence=async()=>{const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);await setDoc(userDocRef,{lastActive:serverTimestamp(),nickname:nickname||`플레이어 ${userId.substring(0,4)}`,profession:privatePlayerState.profession},{merge:true});};const handleVisibilityChange=()=>{if(document.visibilityState==='visible'){updateUserPresence();}};document.addEventListener('visibilitychange',handleVisibilityChange);updateUserPresence();return()=>{document.removeEventListener('visibilitychange',handleVisibilityChange);};},[db,userId,nickname,privatePlayerState.profession]);useEffect(()=>{if(accordion.gameLog&&logEndRef.current)logEndRef.current.scrollIntoView({behavior:\"smooth\"});},[gameState.log,accordion.gameLog]);useEffect(()=>{if(accordion.chat&&chatEndRef.current)chatEndRef.current.scrollIntoView({behavior:\"smooth\"});},[chatMessages,accordion.chat]);const systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 유기적으로 살아 숨 쉬는 세계를 창조하는 것입니다. 플레이어의 선택은 세상에 영구적인 흔적을 남기고, 다른 플레이어의 경험에 영향을 미치며, 세상의 역사를 바꾸어야 합니다.\n\n    ### 핵심 규칙 (매우 중요)\n    1.  **행동 주체 절대 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어의 시점에서, 그가 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다.\n    2.  **관찰자 원칙**: '[주변 플레이어]' 목록에 있는 인물들은 현재 턴의 관찰자일 뿐, 절대 행동하지 않습니다. 그들의 존재를 묘사할 수는 있지만, 그들이 행동의 주체가 되어서는 안 됩니다.\n    3.  **다층적 서사**: 이 원칙들 위에서 '공유된 현실(story)', '개인적 서사(privateStory)', '그룹 서사(groupStory)'를 구분하여 이야기를 전개하십시오.\n\n    ### JSON 출력 구조\n    {\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사.\",\n      \"privateStory\": \"오직 행동 주체만 볼 수 있는 2인칭 서사. ('당신은...')\",\n      \"groupStory\": \"행동 주체와 같은 그룹 소속원들만 볼 수 있는 비밀스러운 이야기. 해당사항 없으면 null.\",\n      \"choices\": [\"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"],\n      \"privateChoices\": [\"오직 행동 주체의 특성 때문에 가능한 특별한 행동들.\"],\n      \"groupChoices\": [\"같은 그룹 소속원들만 할 수 있는 비밀 행동들.\"],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\",\n        \"subtleClues\": [{\"location\": \"장소명\", \"clue\": \"새롭게 생성된 단서\"}]\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\n        \"knownClues\": [\"새롭게 알게 된 단서 목록\"],\n        \"groups\": [\"업데이트된 소속 그룹 목록\"],\n        \"npcRelations\": {\"가라크\": 55, \"엘라라\": -10}\n      }\n    }\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);setLlmRetryPrompt(promptData);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const backupApiKey=\"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성해주십시오.\n\n      ### [행동 주체 (Actor)]\n      - 이름: ${promptData.actorDisplayName}\n      - 정보: ${JSON.stringify(promptData.privateInfo)}\n\n      ### [선택 (Action)]\n      - \"${promptData.playerChoice}\"\n\n      ### [배경 정보]\n      - 세상의 주요 역사: ${promptData.worldHistory.length>0?promptData.worldHistory.join(', '):\"없음\"}\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 개인화된 최근 사건 로그: ${promptData.personalizedHistory}\n      - 세상에 남겨진 흔적들: ${JSON.stringify(promptData.sharedInfo.subtleClues)}\n\n      ### [주변 플레이어 (Observers)]\n      - 이들은 현재 턴의 관찰자이며, 직접 행동하지 않습니다.\n      - ${promptData.activeUsers.length>0?JSON.stringify(promptData.activeUsers):\"주변에 다른 플레이어가 없습니다.\"}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};const tryGeminiCall=async apiKey=>fetch(getApiUrl(apiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;let response=await tryGeminiCall(mainApiKey);if(!response.ok){response=await tryGeminiCall(backupApiKey);}if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}finally{setIsTextLoading(false);}};const sendChatMessage=async()=>{if(!db||!userId||!isAuthReady||!currentChatMessage.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message:currentChatMessage,timestamp:serverTimestamp()});setCurrentChatMessage('');}catch(error){console.error(\"Error sending chat message:\",error);}};const updatePublicState=async(llmResponse,playerChoice)=>{const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:playerChoice,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",privateStories:{[userId]:llmResponse.privateStory||null},groupStory:llmResponse.groupStory||null,timestamp:new Date()};await runTransaction(db,async transaction=>{var _llmResponse$sharedSt,_llmResponse$sharedSt2;const scenarioDoc=await transaction.get(mainScenarioRef);const currentData=scenarioDoc.exists()?scenarioDoc.data():getDefaultGameState();const newStoryLog=[...(currentData.storyLog||[]),newEvent];const updateData={storyLog:newStoryLog,lastUpdate:serverTimestamp()};if(llmResponse.choices&&llmResponse.choices.length>0){updateData.choices=llmResponse.choices;}if((_llmResponse$sharedSt=llmResponse.sharedStateUpdates)!==null&&_llmResponse$sharedSt!==void 0&&_llmResponse$sharedSt.location){updateData['player.currentLocation']=llmResponse.sharedStateUpdates.location;}if((_llmResponse$sharedSt2=llmResponse.sharedStateUpdates)!==null&&_llmResponse$sharedSt2!==void 0&&_llmResponse$sharedSt2.subtleClues){updateData.subtleClues=llmResponse.sharedStateUpdates.subtleClues;}if(scenarioDoc.exists()){transaction.update(mainScenarioRef,updateData);}else{transaction.set(mainScenarioRef,{...currentData,...updateData});}});};const updatePrivateState=async llmResponse=>{const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);const updates=llmResponse.privateStateUpdates?{...llmResponse.privateStateUpdates}:{};const newPrivateChoices=llmResponse.privateChoices||[];const newGroupChoices=llmResponse.groupChoices||[];if(newPrivateChoices.length>0||newGroupChoices.length>0){updates.choices=[...newPrivateChoices,...newGroupChoices];}if(Object.keys(updates).length>0){await setDoc(privateStateRef,updates,{merge:true});}};const getActionScope=choice=>{const npcMatch=choice.match(/(.+)에게 말을 건다/);if(npcMatch){return`npc:${npcMatch[1].trim()}`;}return`location:${gameState.player.currentLocation}`;};const handleChoiceClick=async choice=>{if(isTextLoading)return;if(!privatePlayerState.characterCreated){setIsTextLoading(true);const choiceKey=choice.split('.')[0];const selectedProfession=professions[choiceKey];if(selectedProfession){const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);await setDoc(privateStateRef,{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name,initialMotivation:selectedProfession.motivation},{merge:true});const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,privateStories:{[userId]:selectedProfession.motivation},timestamp:new Date()};try{await updatePublicState({story:newEvent.publicStory,privateStory:newEvent.privateStories[userId],choices:[\"여관을 둘러본다.\",\"다른 모험가에게 말을 건다.\",\"여관 주인에게 정보를 묻는다.\"]},newEvent.action);}catch(e){console.error(\"등장 이벤트 추가 실패: \",e);setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");}finally{setIsTextLoading(false);}}return;}const gameStatusRef=getGameStatusRef(db,appId);const scope=getActionScope(choice);setIsTextLoading(true);try{var _await$getDoc$data;const currentLocks=((_await$getDoc$data=(await getDoc(gameStatusRef)).data())===null||_await$getDoc$data===void 0?void 0:_await$getDoc$data.actionLocks)||{};if(currentLocks[scope]&&currentLocks[scope]!==userId){throw new Error(`현재 '${scope.split(':')[1]}'(은)는 다른 플레이어(${getDisplayName(currentLocks[scope])})가 사용 중입니다.`);}await setDoc(gameStatusRef,{actionLocks:{...currentLocks,[scope]:userId}},{merge:true});const personalizedHistory=gameState.log.slice(-10).map(event=>{let historyEntry=`[${event.actor.displayName}] ${event.action} -> ${event.publicStory}`;if(event.privateStories&&event.privateStories[userId]){historyEntry+=` (개인적으로 당신은 다음을 경험했다: ${event.privateStories[userId]})`;}return historyEntry;}).join('\\n');const promptData={actorDisplayName:getDisplayName(userId),playerChoice:choice,sharedInfo:{currentLocation:gameState.player.currentLocation,subtleClues:gameState.subtleClues},privateInfo:privatePlayerState,personalizedHistory:personalizedHistory,activeUsers:activeUsers.map(u=>({nickname:getDisplayName(u.id),profession:u.profession})).filter(u=>u.id!==userId),worldHistory:worldHistory};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){await updatePublicState(llmResponse,choice);await updatePrivateState(llmResponse);setLlmError(null);setLlmRetryPrompt(null);}else{if(!llmError){setLlmError(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");}}}catch(error){console.error(\"행동 처리 중 오류:\",error.message);setLlmError(error.message);}finally{const finalLocksDoc=await getDoc(gameStatusRef);if(finalLocksDoc.exists()){const finalLocks=finalLocksDoc.data().actionLocks||{};if(finalLocks[scope]===userId){delete finalLocks[scope];await setDoc(gameStatusRef,{actionLocks:finalLocks},{merge:true});}}setIsTextLoading(false);}};const toggleAccordion=key=>{setAccordion(prev=>({...prev,[key]:!prev[key]}));};const LlmErrorModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:llmError}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[llmRetryPrompt&&/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\",onClick:async()=>{setLlmError(null);if(llmRetryPrompt.playerChoice){await handleChoiceClick(llmRetryPrompt.playerChoice);}},children:\"\\uC7AC\\uC2DC\\uB3C4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>{setLlmError(null);setLlmRetryPrompt(null);},children:\"\\uB2EB\\uAE30\"})]})]})});if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uC2DC\\uC791\\uD558\\uAE30\"})]})});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\",children:[llmError&&/*#__PURE__*/_jsx(LlmErrorModal,{}),showResetModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\u26A0\\uFE0F \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB97C \\uCD08\\uAE30\\uD654\\uD560\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:\"\\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA8\\uB4E0 \\uC2DC\\uB098\\uB9AC\\uC624, \\uB85C\\uADF8, \\uC720\\uC800, \\uCC44\\uD305 \\uB370\\uC774\\uD130\\uAC00 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setShowResetModal(false),disabled:isResetting,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\",onClick:resetAllGameData,disabled:isResetting,children:isResetting?'초기화 중...':'초기화'})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('gameLog'),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-gray-100\",children:\"\\uAC8C\\uC784 \\uB85C\\uADF8\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.gameLog?'▼':'▲'})]}),accordion.gameLog&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\",onClick:()=>setShowResetModal(true),children:\"\\uC804\\uCCB4 \\uB370\\uC774\\uD130 \\uCD08\\uAE30\\uD654\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",style:{maxHeight:'24rem'},children:[!privatePlayerState.characterCreated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 font-semibold italic text-lg\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"})]}),gameState.log.map((event,index)=>{var _event$actor;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50\",children:[((_event$actor=event.actor)===null||_event$actor===void 0?void 0:_event$actor.displayName)&&event.action&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[event.actor.displayName,\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",dangerouslySetInnerHTML:{__html:(event.publicStory||'').replace(/\\n/g,'<br />')}}),event.groupStory&&privatePlayerState.groups.length>0&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-green-900/30 border-l-4 border-green-400 text-green-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uADF8\\uB8F9 \\uC774\\uC57C\\uAE30] \"}),event.groupStory]}),event.privateStories&&event.privateStories[userId]&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uB2F9\\uC2E0\\uB9CC \\uC544\\uB294 \\uC0AC\\uC2E4] \"}),event.privateStories[userId]]})]},index);}),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),Object.entries(actionLocks).map(_ref=>{let[scope,lockedBy]=_ref;if(lockedBy===userId)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\",children:`'${scope.split(':')[1]}' 영역은 ${getDisplayName(lockedBy)}님이 사용 중입니다...`},scope);}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:privatePlayerState.characterCreated?[...gameState.choices,...(privatePlayerState.choices||[])].map((choice,index)=>{const scope=getActionScope(choice);const isLockedByOther=actionLocks[scope]&&actionLocks[scope]!==userId;const allPrivateChoices=privatePlayerState.choices||[];const isPersonalChoice=allPrivateChoices.includes(choice);const isPublicChoice=gameState.choices.includes(choice);let buttonStyle='bg-blue-600 hover:bg-blue-700';let prefix='';if(isPersonalChoice&&!isPublicChoice){buttonStyle='bg-green-600 hover:bg-green-700';prefix='[개인/그룹] ';}if(isLockedByOther){buttonStyle='bg-gray-500 cursor-not-allowed';prefix=`[${getDisplayName(actionLocks[scope])} 사용 중] `;}return/*#__PURE__*/_jsxs(\"button\",{className:`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 ${buttonStyle} text-white`,onClick:()=>handleChoiceClick(choice),disabled:isTextLoading||isLockedByOther,children:[prefix,choice]},index);}):Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick(`${key}. ${professions[key].name}`),disabled:isTextLoading,className:\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300\",children:`${key}. ${professions[key].name}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('playerInfo'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.playerInfo?'▼':'▲'})]}),accordion.playerInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",privatePlayerState.profession||'미정']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",gameState.player.currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",privatePlayerState.stats.strength,\") \\uC9C0\\uB2A5(\",privatePlayerState.stats.intelligence,\") \\uBBFC\\uCCA9(\",privatePlayerState.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",privatePlayerState.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",privatePlayerState.inventory.join(', ')||'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",privatePlayerState.activeQuests.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2E8\\uC11C:\"}),\" \",privatePlayerState.knownClues.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-green-300\",children:\"\\uC18C\\uC18D \\uADF8\\uB8F9:\"}),\" \",privatePlayerState.groups.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-yellow-300\",children:\"NPC \\uAD00\\uACC4:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside ml-4\",children:Object.entries(privatePlayerState.npcRelations).length>0?Object.entries(privatePlayerState.npcRelations).map(_ref2=>{let[name,value]=_ref2;return/*#__PURE__*/_jsx(\"li\",{children:`${name}: ${value}`},name);}):/*#__PURE__*/_jsx(\"li\",{children:\"\\uC54C\\uB824\\uC9C4 \\uAD00\\uACC4 \\uC5C6\\uC74C\"})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('users'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.users?'▼':'▲'})]}),accordion.users&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate p-1 rounded-md\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-300\",children:getDisplayName(user.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\" (\",user.profession||'모험가',\")\"]})]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('chat'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.chat?'▼':'▲'})]}),accordion.chat&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex flex-col h-64\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\",children:[chatMessages.map(msg=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",msg.message]})},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\",value:currentChatMessage,onChange:e=>setCurrentChatMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&sendChatMessage(),disabled:!isAuthReady}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\",onClick:sendChatMessage,disabled:!isAuthReady||!currentChatMessage.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","initialAuthToken","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getGameStatusRef","getMajorEventsRef","getDefaultGameState","phase","log","choices","player","currentLocation","subtleClues","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","reputation","activeQuests","companions","knownClues","characterCreated","profession","groups","npcRelations","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","isTextLoading","setIsTextLoading","activeUsers","setActiveUsers","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","actionLocks","setActionLocks","setDb","auth","setAuth","setUserId","isAuthReady","setIsAuthReady","logEndRef","chatEndRef","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","accordion","setAccordion","gameLog","chat","users","playerInfo","showResetModal","setShowResetModal","isResetting","setIsResetting","llmError","setLlmError","llmRetryPrompt","setLlmRetryPrompt","isLoading","setIsLoading","worldHistory","setWorldHistory","handleNicknameSubmit","trim","finalNickname","setItem","userDocRef","merge","getDisplayName","uid","substring","user","find","u","id","resetAllGameData","collectionsToDelete","colRef","snapshot","docSnap","docs","ref","usersColRef","usersSnapshot","userDoc","playerStateColRef","playerStateSnapshot","stateDoc","clear","console","e","error","window","location","reload","app","firestoreDb","firebaseAuth","unsubscribeAuth","setupPlayerState","privateStateRef","exists","unsubscribe","data","err","unsubscribePromise","then","unsub","gameStatusRef","unsubscribeGameStatus","_docSnap$data","chatMessagesColRef","unsubscribeChat","messages","map","d","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","activeUsersColRef","unsubscribeActiveUsers","cutoffTime","Date","now","filter","lastActive","mainScenarioRef","unsubscribeMainScenario","snap","prev","_data$player","storyLog","fetchHistory","historySnapshot","historyData","summary","updateUserPresence","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","backupApiKey","getApiUrl","userPrompt","actorDisplayName","JSON","stringify","privateInfo","playerChoice","length","join","sharedInfo","personalizedHistory","payload","contents","role","parts","text","tryGeminiCall","fetch","method","headers","body","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","message","sendChatMessage","chatCollectionRef","displayName","updatePublicState","llmResponse","newEvent","actor","action","publicStory","story","privateStories","privateStory","groupStory","transaction","_llmResponse$sharedSt","_llmResponse$sharedSt2","scenarioDoc","get","currentData","newStoryLog","updateData","lastUpdate","sharedStateUpdates","update","set","updatePrivateState","updates","privateStateUpdates","newPrivateChoices","privateChoices","newGroupChoices","groupChoices","Object","keys","getActionScope","choice","npcMatch","handleChoiceClick","choiceKey","split","selectedProfession","scope","_await$getDoc$data","currentLocks","slice","event","historyEntry","finalLocksDoc","finalLocks","toggleAccordion","key","LlmErrorModal","className","children","onClick","placeholder","value","onChange","target","onKeyDown","autoFocus","disabled","style","maxHeight","index","_event$actor","dangerouslySetInnerHTML","__html","replace","entries","_ref","lockedBy","isLockedByOther","allPrivateChoices","isPersonalChoice","includes","isPublicChoice","buttonStyle","prefix","_ref2","msg","type","onKeyPress"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  signInWithCustomToken,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  runTransaction\r\n} from 'firebase/firestore';\r\n\r\n// ====================================================================\r\n// Firebase configuration information - 수정 금지\r\nconst defaultFirebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\n\r\n// 수정금지\r\nconst firebaseConfig = defaultFirebaseConfig;\r\nconst appId = firebaseConfig.projectId;\r\nconst initialAuthToken = null;\r\n// ====================================================================\r\n\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\n// Firestore 경로 유틸\r\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\r\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\r\nconst getGameStatusRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\nconst getMajorEventsRef = (db, appId) => collection(db, 'artifacts', appId, 'public', 'data', 'majorEvents');\r\n\r\n\r\n// 상태 초기화 유틸\r\nconst getDefaultGameState = () => ({\r\n  phase: 'playing',\r\n  log: [],\r\n  choices: [],\r\n  player: {\r\n    currentLocation: '방랑자의 안식처',\r\n  },\r\n  subtleClues: [],\r\n});\r\n\r\nconst getDefaultPrivatePlayerState = () => ({\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n    inventory: [],\r\n    initialMotivation: '',\r\n    reputation: {},\r\n    activeQuests: [],\r\n    companions: [],\r\n    knownClues: [],\r\n    characterCreated: false,\r\n    profession: '',\r\n    choices: [],\r\n    groups: [],\r\n    npcRelations: {},\r\n});\r\n\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(getDefaultGameState());\r\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\r\n  const [actionLocks, setActionLocks] = useState({});\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const logEndRef = useRef(null);\r\n  const chatEndRef = useRef(null);\r\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\r\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\r\n  const [nicknameInput, setNicknameInput] = useState('');\r\n  const [accordion, setAccordion] = useState({ gameLog: true, chat: true, users: true, playerInfo: true });\r\n  const [showResetModal, setShowResetModal] = useState(false);\r\n  const [isResetting, setIsResetting] = useState(false);\r\n  const [llmError, setLlmError] = useState(null);\r\n  const [llmRetryPrompt, setLlmRetryPrompt] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [worldHistory, setWorldHistory] = useState([]);\r\n\r\n  const handleNicknameSubmit = () => {\r\n    if (nicknameInput.trim()) {\r\n      const finalNickname = nicknameInput.trim();\r\n      setNickname(finalNickname);\r\n      localStorage.setItem('nickname', finalNickname);\r\n      setShowNicknameModal(false);\r\n      if (userId && db) {\r\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n          setDoc(userDocRef, { nickname: finalNickname }, { merge: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDisplayName = (uid) => {\r\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\r\n    const user = activeUsers.find(u => u.id === uid);\r\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\r\n  };\r\n\r\n  const resetAllGameData = async () => {\r\n    if (!db || !isAuthReady) return;\r\n    setIsResetting(true);\r\n    try {\r\n        const collectionsToDelete = [\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages'),\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers'),\r\n            getMajorEventsRef(db, appId)\r\n        ];\r\n\r\n        for (const colRef of collectionsToDelete) {\r\n            const snapshot = await getDocs(colRef);\r\n            for (const docSnap of snapshot.docs) {\r\n                await deleteDoc(docSnap.ref);\r\n            }\r\n        }\r\n\r\n        const usersColRef = collection(db, 'artifacts', appId, 'users');\r\n        const usersSnapshot = await getDocs(usersColRef);\r\n        for (const userDoc of usersSnapshot.docs) {\r\n            const playerStateColRef = collection(db, 'artifacts', appId, 'users', userDoc.id, 'playerState');\r\n            const playerStateSnapshot = await getDocs(playerStateColRef);\r\n            for (const stateDoc of playerStateSnapshot.docs) {\r\n                await deleteDoc(stateDoc.ref);\r\n            }\r\n            await deleteDoc(doc(db, 'artifacts', appId, 'users', userDoc.id));\r\n        }\r\n\r\n        await deleteDoc(getMainScenarioRef(db, appId));\r\n        await deleteDoc(getGameStatusRef(db, appId));\r\n        \r\n        localStorage.clear();\r\n\r\n        setGameState(getDefaultGameState());\r\n        setPrivatePlayerState(getDefaultPrivatePlayerState());\r\n        setChatMessages([]);\r\n        setActionLocks({});\r\n\r\n        console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");\r\n\r\n    } catch (e) {\r\n        console.error(\"전체 데이터 초기화 중 오류 발생:\", e);\r\n    } finally {\r\n      setIsResetting(false);\r\n      setShowResetModal(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firebaseAuth = getAuth(app);\r\n      setDb(firestoreDb);\r\n      setAuth(firebaseAuth);\r\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\r\n        if (user) {\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n            await (initialAuthToken ? signInWithCustomToken(firebaseAuth, initialAuthToken) : signInAnonymously(firebaseAuth));\r\n        }\r\n      });\r\n      return () => unsubscribeAuth();\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error:\", error);\r\n      setLlmError(\"Firebase 초기화에 실패했습니다.\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) return;\r\n\r\n    const setupPlayerState = async () => {\r\n      setIsLoading(true);\r\n      const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n      try {\r\n        const docSnap = await getDoc(privateStateRef);\r\n\r\n        if (!docSnap.exists()) {\r\n          await setDoc(privateStateRef, getDefaultPrivatePlayerState());\r\n        }\r\n\r\n        const unsubscribe = onSnapshot(privateStateRef, (snapshot) => {\r\n          if (snapshot.exists()) {\r\n            setPrivatePlayerState({ ...getDefaultPrivatePlayerState(), ...snapshot.data() });\r\n          }\r\n          if(isLoading) setIsLoading(false);\r\n        }, (err) => {\r\n          console.error(\"실시간 데이터 수신 오류:\", err);\r\n          setLlmError(\"데이터 수신 중 오류가 발생했습니다.\");\r\n          setIsLoading(false);\r\n        });\r\n        return unsubscribe;\r\n\r\n      } catch (error) {\r\n        console.error(\"플레이어 상태 설정 오류:\", error);\r\n        setLlmError(\"플레이어 정보를 가져오는 데 실패했습니다.\");\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    let unsubscribePromise = setupPlayerState();\r\n\r\n    return () => {\r\n      unsubscribePromise.then(unsub => {\r\n        if (unsub) unsub();\r\n      });\r\n    };\r\n  }, [db, userId, isAuthReady]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (isLoading || !db || !isAuthReady || !userId || !auth) return;\r\n    if (!privatePlayerState.characterCreated) return;\r\n\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    const unsubscribeGameStatus = onSnapshot(gameStatusRef, (docSnap) => {\r\n      setActionLocks(docSnap.data()?.actionLocks || {});\r\n    });\r\n\r\n    const chatMessagesColRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n    const unsubscribeChat = onSnapshot(query(chatMessagesColRef), (snapshot) => {\r\n        const messages = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n        setChatMessages(messages);\r\n    });\r\n\r\n    const activeUsersColRef = collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers');\r\n    const unsubscribeActiveUsers = onSnapshot(query(activeUsersColRef), (snapshot) => {\r\n      const cutoffTime = Date.now() - 60 * 1000;\r\n      const users = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).filter(u => u.lastActive && u.lastActive.toMillis() > cutoffTime);\r\n      setActiveUsers(users);\r\n    });\r\n\r\n    const mainScenarioRef = getMainScenarioRef(db, appId);\r\n    const unsubscribeMainScenario = onSnapshot(mainScenarioRef, (snap) => {\r\n      if (snap.exists()) {\r\n        const data = snap.data();\r\n        setGameState(prev => ({\r\n          ...prev,\r\n          log: data.storyLog || [],\r\n          choices: data.choices || [],\r\n          player: { ...prev.player, currentLocation: data.player?.currentLocation || prev.player.currentLocation },\r\n          subtleClues: data.subtleClues || []\r\n        }));\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Main scenario snapshot error:\", error);\r\n      setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");\r\n    });\r\n\r\n    const fetchHistory = async () => {\r\n      const historySnapshot = await getDocs(getMajorEventsRef(db, appId));\r\n      const historyData = historySnapshot.docs.map(doc => doc.data().summary);\r\n      setWorldHistory(historyData);\r\n    };\r\n    fetchHistory();\r\n\r\n    return () => {\r\n      unsubscribeGameStatus();\r\n      unsubscribeChat();\r\n      unsubscribeActiveUsers();\r\n      unsubscribeMainScenario();\r\n    };\r\n  }, [db, isAuthReady, userId, auth, isLoading, privatePlayerState.characterCreated]);\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId || !nickname) return;\r\n\r\n    const updateUserPresence = async () => {\r\n      const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n      await setDoc(userDocRef, {\r\n        lastActive: serverTimestamp(),\r\n        nickname: nickname || `플레이어 ${userId.substring(0, 4)}`,\r\n        profession: privatePlayerState.profession,\r\n      }, { merge: true });\r\n    };\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === 'visible') {\r\n        updateUserPresence();\r\n      }\r\n    };\r\n\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    updateUserPresence();\r\n\r\n    return () => {\r\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n    };\r\n  }, [db, userId, nickname, privatePlayerState.profession]);\r\n\r\n  useEffect(() => {\r\n    if (accordion.gameLog && logEndRef.current) logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [gameState.log, accordion.gameLog]);\r\n\r\n  useEffect(() => {\r\n    if (accordion.chat && chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatMessages, accordion.chat]);\r\n\r\n  const systemPrompt = `\r\n    ### 페르소나 (Persona)\r\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 유기적으로 살아 숨 쉬는 세계를 창조하는 것입니다. 플레이어의 선택은 세상에 영구적인 흔적을 남기고, 다른 플레이어의 경험에 영향을 미치며, 세상의 역사를 바꾸어야 합니다.\r\n\r\n    ### 핵심 규칙 (매우 중요)\r\n    1.  **행동 주체 절대 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어의 시점에서, 그가 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다.\r\n    2.  **관찰자 원칙**: '[주변 플레이어]' 목록에 있는 인물들은 현재 턴의 관찰자일 뿐, 절대 행동하지 않습니다. 그들의 존재를 묘사할 수는 있지만, 그들이 행동의 주체가 되어서는 안 됩니다.\r\n    3.  **다층적 서사**: 이 원칙들 위에서 '공유된 현실(story)', '개인적 서사(privateStory)', '그룹 서사(groupStory)'를 구분하여 이야기를 전개하십시오.\r\n\r\n    ### JSON 출력 구조\r\n    {\r\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사.\",\r\n      \"privateStory\": \"오직 행동 주체만 볼 수 있는 2인칭 서사. ('당신은...')\",\r\n      \"groupStory\": \"행동 주체와 같은 그룹 소속원들만 볼 수 있는 비밀스러운 이야기. 해당사항 없으면 null.\",\r\n      \"choices\": [\"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"],\r\n      \"privateChoices\": [\"오직 행동 주체의 특성 때문에 가능한 특별한 행동들.\"],\r\n      \"groupChoices\": [\"같은 그룹 소속원들만 할 수 있는 비밀 행동들.\"],\r\n      \"sharedStateUpdates\": {\r\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\",\r\n        \"subtleClues\": [{\"location\": \"장소명\", \"clue\": \"새롭게 생성된 단서\"}]\r\n      },\r\n      \"privateStateUpdates\": {\r\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\r\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\r\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\r\n        \"knownClues\": [\"새롭게 알게 된 단서 목록\"],\r\n        \"groups\": [\"업데이트된 소속 그룹 목록\"],\r\n        \"npcRelations\": {\"가라크\": 55, \"엘라라\": -10}\r\n      }\r\n    }\r\n  `;\r\n\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    setLlmRetryPrompt(promptData);\r\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\r\n    const backupApiKey = \"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";\r\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n\r\n    const userPrompt = `\r\n      [상황 분석 요청]\r\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성해주십시오.\r\n\r\n      ### [행동 주체 (Actor)]\r\n      - 이름: ${promptData.actorDisplayName}\r\n      - 정보: ${JSON.stringify(promptData.privateInfo)}\r\n\r\n      ### [선택 (Action)]\r\n      - \"${promptData.playerChoice}\"\r\n\r\n      ### [배경 정보]\r\n      - 세상의 주요 역사: ${promptData.worldHistory.length > 0 ? promptData.worldHistory.join(', ') : \"없음\"}\r\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\r\n      - 개인화된 최근 사건 로그: ${promptData.personalizedHistory}\r\n      - 세상에 남겨진 흔적들: ${JSON.stringify(promptData.sharedInfo.subtleClues)}\r\n\r\n      ### [주변 플레이어 (Observers)]\r\n      - 이들은 현재 턴의 관찰자이며, 직접 행동하지 않습니다.\r\n      - ${promptData.activeUsers.length > 0 ? JSON.stringify(promptData.activeUsers) : \"주변에 다른 플레이어가 없습니다.\"}\r\n    `;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\r\n\r\n    const tryGeminiCall = async (apiKey) => fetch(getApiUrl(apiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n\r\n    try {\r\n      let response = await tryGeminiCall(mainApiKey);\r\n      if (!response.ok) {\r\n        response = await tryGeminiCall(backupApiKey);\r\n      }\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const result = await response.json();\r\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\r\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\r\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\r\n      throw new Error(\"Valid JSON object not found in LLM response.\");\r\n    } catch (error) {\r\n      console.error(\"LLM API call error:\", error);\r\n      setLlmError(error.message || 'LLM 호출 실패');\r\n      return null;\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = async () => {\r\n    if (!db || !userId || !isAuthReady || !currentChatMessage.trim()) return;\r\n    try {\r\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message: currentChatMessage, timestamp: serverTimestamp() });\r\n      setCurrentChatMessage('');\r\n    } catch (error) {\r\n      console.error(\"Error sending chat message:\", error);\r\n    }\r\n  };\r\n\r\n  const updatePublicState = async (llmResponse, playerChoice) => {\r\n    const mainScenarioRef = getMainScenarioRef(db, appId);\r\n    const newEvent = {\r\n        actor: { id: userId, displayName: getDisplayName(userId) },\r\n        action: playerChoice,\r\n        publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\r\n        privateStories: { [userId]: llmResponse.privateStory || null },\r\n        groupStory: llmResponse.groupStory || null,\r\n        timestamp: new Date()\r\n    };\r\n  \r\n    await runTransaction(db, async (transaction) => {\r\n        const scenarioDoc = await transaction.get(mainScenarioRef);\r\n        const currentData = scenarioDoc.exists() ? scenarioDoc.data() : getDefaultGameState();\r\n        \r\n        const newStoryLog = [...(currentData.storyLog || []), newEvent];\r\n        \r\n        const updateData = {\r\n          storyLog: newStoryLog,\r\n          lastUpdate: serverTimestamp()\r\n        };\r\n  \r\n        if (llmResponse.choices && llmResponse.choices.length > 0) {\r\n          updateData.choices = llmResponse.choices;\r\n        }\r\n  \r\n        if (llmResponse.sharedStateUpdates?.location) {\r\n          updateData['player.currentLocation'] = llmResponse.sharedStateUpdates.location;\r\n        }\r\n  \r\n        if (llmResponse.sharedStateUpdates?.subtleClues) {\r\n          updateData.subtleClues = llmResponse.sharedStateUpdates.subtleClues;\r\n        }\r\n        \r\n        if (scenarioDoc.exists()) {\r\n            transaction.update(mainScenarioRef, updateData);\r\n        } else {\r\n            transaction.set(mainScenarioRef, { ...currentData, ...updateData });\r\n        }\r\n    });\r\n  };\r\n  \r\n  const updatePrivateState = async (llmResponse) => {\r\n    const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n  \r\n    const updates = llmResponse.privateStateUpdates ? { ...llmResponse.privateStateUpdates } : {};\r\n  \r\n    const newPrivateChoices = llmResponse.privateChoices || [];\r\n    const newGroupChoices = llmResponse.groupChoices || [];\r\n    if (newPrivateChoices.length > 0 || newGroupChoices.length > 0) {\r\n      updates.choices = [...newPrivateChoices, ...newGroupChoices];\r\n    }\r\n  \r\n    if (Object.keys(updates).length > 0) {\r\n      await setDoc(privateStateRef, updates, { merge: true });\r\n    }\r\n  };\r\n\r\n  const getActionScope = (choice) => {\r\n    const npcMatch = choice.match(/(.+)에게 말을 건다/);\r\n    if (npcMatch) {\r\n        return `npc:${npcMatch[1].trim()}`;\r\n    }\r\n    return `location:${gameState.player.currentLocation}`;\r\n  };\r\n\r\n  const handleChoiceClick = async (choice) => {\r\n    if (isTextLoading) return;\r\n\r\n    if (!privatePlayerState.characterCreated) {\r\n        setIsTextLoading(true);\r\n        const choiceKey = choice.split('.')[0];\r\n        const selectedProfession = professions[choiceKey];\r\n        if (selectedProfession) {\r\n            const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n            await setDoc(privateStateRef, {\r\n                ...getDefaultPrivatePlayerState(),\r\n                characterCreated: true,\r\n                profession: selectedProfession.name,\r\n                initialMotivation: selectedProfession.motivation,\r\n            }, { merge: true });\r\n\r\n            const newEvent = {\r\n                actor: { id: userId, displayName: getDisplayName(userId) },\r\n                action: \"여관에 들어선다\",\r\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,\r\n                privateStories: { [userId]: selectedProfession.motivation },\r\n                timestamp: new Date()\r\n            };\r\n\r\n            try {\r\n                await updatePublicState({ story: newEvent.publicStory, privateStory: newEvent.privateStories[userId], choices: [\"여관을 둘러본다.\", \"다른 모험가에게 말을 건다.\", \"여관 주인에게 정보를 묻는다.\"] }, newEvent.action);\r\n            } catch (e) {\r\n                console.error(\"등장 이벤트 추가 실패: \", e);\r\n                setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setIsTextLoading(false);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    const scope = getActionScope(choice);\r\n\r\n    setIsTextLoading(true);\r\n\r\n    try {\r\n        const currentLocks = (await getDoc(gameStatusRef)).data()?.actionLocks || {};\r\n        if (currentLocks[scope] && currentLocks[scope] !== userId) {\r\n            throw new Error(`현재 '${scope.split(':')[1]}'(은)는 다른 플레이어(${getDisplayName(currentLocks[scope])})가 사용 중입니다.`);\r\n        }\r\n        await setDoc(gameStatusRef, { actionLocks: { ...currentLocks, [scope]: userId } }, { merge: true });\r\n\r\n        const personalizedHistory = gameState.log.slice(-10).map(event => {\r\n            let historyEntry = `[${event.actor.displayName}] ${event.action} -> ${event.publicStory}`;\r\n            if(event.privateStories && event.privateStories[userId]) {\r\n                historyEntry += ` (개인적으로 당신은 다음을 경험했다: ${event.privateStories[userId]})`;\r\n            }\r\n            return historyEntry;\r\n        }).join('\\n');\r\n\r\n        const promptData = {\r\n            actorDisplayName: getDisplayName(userId),\r\n            playerChoice: choice,\r\n            sharedInfo: { currentLocation: gameState.player.currentLocation, subtleClues: gameState.subtleClues },\r\n            privateInfo: privatePlayerState,\r\n            personalizedHistory: personalizedHistory,\r\n            activeUsers: activeUsers.map(u => ({ nickname: getDisplayName(u.id), profession: u.profession })).filter(u => u.id !== userId),\r\n            worldHistory: worldHistory,\r\n        };\r\n\r\n        const llmResponse = await callGeminiTextLLM(promptData);\r\n\r\n        if (llmResponse) {\r\n            await updatePublicState(llmResponse, choice);\r\n            await updatePrivateState(llmResponse);\r\n            setLlmError(null);\r\n            setLlmRetryPrompt(null);\r\n        } else {\r\n            if (!llmError) {\r\n                setLlmError(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.error(\"행동 처리 중 오류:\", error.message);\r\n        setLlmError(error.message);\r\n    } finally {\r\n        const finalLocksDoc = await getDoc(gameStatusRef);\r\n        if (finalLocksDoc.exists()) {\r\n            const finalLocks = finalLocksDoc.data().actionLocks || {};\r\n            if (finalLocks[scope] === userId) {\r\n                delete finalLocks[scope];\r\n                await setDoc(gameStatusRef, { actionLocks: finalLocks }, { merge: true });\r\n            }\r\n        }\r\n        setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleAccordion = (key) => {\r\n    setAccordion(prev => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  const LlmErrorModal = () => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\r\n        <h3 className=\"text-xl font-bold text-red-400\">오류가 발생했습니다</h3>\r\n        <p className=\"text-gray-200\">{llmError}</p>\r\n        <div className=\"flex justify-center gap-4\">\r\n          {llmRetryPrompt && (\r\n            <button\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\"\r\n              onClick={async () => {\r\n                setLlmError(null);\r\n                if (llmRetryPrompt.playerChoice) {\r\n                  await handleChoiceClick(llmRetryPrompt.playerChoice);\r\n                }\r\n              }}\r\n            >\r\n              재시도\r\n            </button>\r\n          )}\r\n          <button\r\n            className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\"\r\n            onClick={() => {\r\n              setLlmError(null);\r\n              setLlmRetryPrompt(null);\r\n            }}\r\n          >\r\n            닫기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  if (showNicknameModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">닉네임을 입력하세요</h3>\r\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\r\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>시작하기</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">데이터를 불러오는 중...</span></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      {llmError && <LlmErrorModal />}\r\n      {showResetModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-red-400\">⚠️ 모든 데이터를 초기화할까요?</h3>\r\n            <p className=\"text-gray-200\">이 작업은 되돌릴 수 없습니다. 모든 시나리오, 로그, 유저, 채팅 데이터가 삭제됩니다.</p>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => setShowResetModal(false)} disabled={isResetting}>취소</button>\r\n              <button className=\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\" onClick={resetAllGameData} disabled={isResetting}>{isResetting ? '초기화 중...' : '초기화'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\">\r\n        <div className=\"flex flex-col w-full lg:w-2/3 space-y-6\">\r\n          <div className=\"mb-2\">\r\n            <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('gameLog')}>\r\n              <h2 className=\"text-lg font-bold text-gray-100\">게임 로그</h2>\r\n              <div className=\"text-xl\">{accordion.gameLog ? '▼' : '▲'}</div>\r\n            </div>\r\n            {accordion.gameLog && (\r\n              <>\r\n                <div className=\"flex justify-end mb-2\">\r\n                  <button className=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\" onClick={() => setShowResetModal(true)}>전체 데이터 초기화</button>\r\n                </div>\r\n                <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\" style={{ maxHeight: '24rem' }}>\r\n                  {!privatePlayerState.characterCreated && (\r\n                    <div className=\"mb-4 p-2 rounded bg-gray-900/50 text-center\">\r\n                        <p className=\"text-yellow-300 font-semibold italic text-lg\">모험의 서막</p>\r\n                        <p className=\"whitespace-pre-wrap mt-1\">당신은 어떤 운명을 선택하시겠습니까?</p>\r\n                    </div>\r\n                  )}\r\n                  {gameState.log.map((event, index) => (\r\n                    <div key={index} className=\"mb-4 p-2 rounded bg-gray-900/50\">\r\n                      {event.actor?.displayName && event.action && (\r\n                         <p className=\"text-yellow-300 font-semibold italic text-sm\">\r\n                            {event.actor.displayName} 님이 {event.action} 선택\r\n                         </p>\r\n                      )}\r\n                      <p className=\"whitespace-pre-wrap mt-1\" dangerouslySetInnerHTML={{ __html: (event.publicStory || '').replace(/\\n/g, '<br />') }}></p>\r\n                      {event.groupStory && privatePlayerState.groups.length > 0 && (\r\n                          <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-green-900/30 border-l-4 border-green-400 text-green-200\">\r\n                              <span className=\"font-bold\">[그룹 이야기] </span>\r\n                              {event.groupStory}\r\n                          </p>\r\n                      )}\r\n                      {event.privateStories && event.privateStories[userId] && (\r\n                        <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\">\r\n                          <span className=\"font-bold\">[당신만 아는 사실] </span>\r\n                          {event.privateStories[userId]}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {isTextLoading && (\r\n                    <div className=\"flex justify-center items-center mt-4\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\r\n                      <span className=\"ml-3 text-gray-400\">이야기를 생성 중...</span>\r\n                    </div>\r\n                  )}\r\n                  {Object.entries(actionLocks).map(([scope, lockedBy]) => {\r\n                    if (lockedBy === userId) return null;\r\n                    return (\r\n                        <div key={scope} className=\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\">\r\n                            {`'${scope.split(':')[1]}' 영역은 ${getDisplayName(lockedBy)}님이 사용 중입니다...`}\r\n                        </div>\r\n                    )\r\n                  })}\r\n                  <div ref={logEndRef} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n              {privatePlayerState.characterCreated ? (\r\n                  [...gameState.choices, ...(privatePlayerState.choices || [])].map((choice, index) => {\r\n                      const scope = getActionScope(choice);\r\n                      const isLockedByOther = actionLocks[scope] && actionLocks[scope] !== userId;\r\n                      const allPrivateChoices = privatePlayerState.choices || [];\r\n                      const isPersonalChoice = allPrivateChoices.includes(choice);\r\n                      const isPublicChoice = gameState.choices.includes(choice);\r\n                      \r\n                      let buttonStyle = 'bg-blue-600 hover:bg-blue-700';\r\n                      let prefix = '';\r\n\r\n                      if (isPersonalChoice && !isPublicChoice) {\r\n                        buttonStyle = 'bg-green-600 hover:bg-green-700';\r\n                        prefix = '[개인/그룹] ';\r\n                      }\r\n                      \r\n                      if (isLockedByOther) {\r\n                        buttonStyle = 'bg-gray-500 cursor-not-allowed';\r\n                        prefix = `[${getDisplayName(actionLocks[scope])} 사용 중] `;\r\n                      }\r\n\r\n                      return (\r\n                          <button\r\n                              key={index}\r\n                              className={`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 ${buttonStyle} text-white`}\r\n                              onClick={() => handleChoiceClick(choice)}\r\n                              disabled={isTextLoading || isLockedByOther}\r\n                          >\r\n                              {prefix}{choice}\r\n                          </button>\r\n                      )\r\n                  })\r\n              ) : (\r\n                  Object.keys(professions).map(key => (\r\n                      <button\r\n                          key={key}\r\n                          onClick={() => handleChoiceClick(`${key}. ${professions[key].name}`)}\r\n                          disabled={isTextLoading}\r\n                          className=\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\"\r\n                      >\r\n                          <p className=\"text-lg text-blue-300\">{`${key}. ${professions[key].name}`}</p>\r\n                          <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\r\n                      </button>\r\n                  ))\r\n              )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\">\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('playerInfo')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">내 정보</h4>\r\n                    <div className=\"text-xl\">{accordion.playerInfo ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.playerInfo && (\r\n                  <div className=\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\">\r\n                    <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">직업:</span> {privatePlayerState.profession || '미정'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">위치:</span> {gameState.player.currentLocation}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">능력치:</span> 힘({privatePlayerState.stats.strength}) 지능({privatePlayerState.stats.intelligence}) 민첩({privatePlayerState.stats.agility}) 카리스마({privatePlayerState.stats.charisma})</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">인벤토리:</span> {privatePlayerState.inventory.join(', ') || '비어있음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">퀘스트:</span> {privatePlayerState.activeQuests.join(', ') || '없음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">단서:</span> {privatePlayerState.knownClues.join(', ') || '없음'}</p>\r\n                    <p><span className=\"font-semibold text-green-300\">소속 그룹:</span> {privatePlayerState.groups.join(', ') || '없음'}</p>\r\n                    <div>\r\n                        <span className=\"font-semibold text-yellow-300\">NPC 관계:</span>\r\n                        <ul className=\"list-disc list-inside ml-4\">\r\n                            {Object.entries(privatePlayerState.npcRelations).length > 0 ? \r\n                                Object.entries(privatePlayerState.npcRelations).map(([name, value]) => <li key={name}>{`${name}: ${value}`}</li>) :\r\n                                <li>알려진 관계 없음</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('users')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">현재 플레이어들</h4>\r\n                    <div className=\"text-xl\">{accordion.users ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.users && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\r\n                        {activeUsers.length > 0 ? (\r\n                            <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                                {activeUsers.map(user => (\r\n                                    <li key={user.id} className=\"truncate p-1 rounded-md\">\r\n                                        <span className=\"font-medium text-green-300\">{getDisplayName(user.id)}</span>\r\n                                        <span className=\"text-gray-400 text-xs\"> ({user.profession || '모험가'})</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('chat')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">공개 채팅</h4>\r\n                    <div className=\"text-xl\">{accordion.chat ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.chat && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md flex flex-col h-64\">\r\n                        <div className=\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\">\r\n                            {chatMessages.map((msg) => (\r\n                                <div key={msg.id}><p><span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> {msg.message}</p></div>\r\n                            ))}\r\n                            <div ref={chatEndRef} />\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\" value={currentChatMessage} onChange={(e) => setCurrentChatMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()} disabled={!isAuthReady} />\r\n                            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\" onClick={sendChatMessage} disabled={!isAuthReady || !currentChatMessage.trim()}>보내기</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body { font-family: 'Noto Sans KR', sans-serif; }\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}