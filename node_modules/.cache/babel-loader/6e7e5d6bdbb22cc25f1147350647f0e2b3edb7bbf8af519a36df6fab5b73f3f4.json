{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{useMediaQuery}from'react-responsive';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction}from'firebase/firestore';// ====================================================================\n// Firebase configuration information\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};const firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore Path Utils\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');const getGameStatusRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','gameStatus','status');// State Initializers\nconst getDefaultGameState=()=>({log:[],choices:[{id:'inn_look_around',text:\"여관을 둘러본다\",type:'location_default',location:'방랑자의 안식처'},{id:'inn_talk_to_owner',text:\"여관 주인에게 말을 건다\",type:'location_default',location:'방랑자의 안식처'}],player:{currentLocation:'방랑자의 안식처'},leaderId:null// 선착순 리더 ID\n});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],characterCreated:false,profession:'',choices:[]// 개인 선택지 풀\n});// Main App Component\nfunction App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[actionLocks,setActionLocks]=useState({});const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[llmError,setLlmError]=useState(null);const[isLoading,setIsLoading]=useState(true);const[cooperativeAction,setCooperativeAction]=useState(null);const isDesktopOrLaptop=useMediaQuery({query:'(min-width: 1024px)'});const isMobile=useMediaQuery({query:'(max-width: 1023px)'});const[mobileTab,setMobileTab]=useState('game');// --- Core Functions ---\nconst handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);}};const getDisplayName=uid=>{if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const sendChatMessage=async message=>{if(!db||!userId||!isAuthReady||!message.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message,timestamp:serverTimestamp()});}catch(error){console.error(\"Error sending chat message:\",error);}};const systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\n\n    ### 핵심 규칙 (매우 중요)\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어(들)의 시점에서, 그(들)이 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다. 여러 명이 참여하는 행동의 경우, 모두를 조명해야 합니다.\n    2.  **선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\n\n    ### JSON 출력 구조\n    {\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\n      \"choices_to_add\": [ { \"id\": \"unique_id_1\", \"text\": \"새로운 선택지\", \"type\": \"location_default\", \"location\": \"현재 장소\" } ],\n      \"choices_to_remove\": [\"obsolete_choice_id_1\"],\n      \"privateChoices_to_add\": [ { \"id\": \"private_choice_1\", \"text\": \"개인 선택지\", \"type\": \"private\" } ],\n      \"privateChoices_to_remove\": [\"obsolete_private_id_1\"],\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 }\n      },\n      \"sharedStateUpdates\": {\n        \"leaderId\": null\n      }\n    }\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\n\n      ### [행동 주체 (Actor)]\n      - 이름(들): ${promptData.actorDisplayNames.join(', ')}\n      - 정보: ${JSON.stringify(promptData.privateInfos)}\n\n      ### [선택 (Action)]\n      - \"${promptData.playerChoice}\"\n\n      ### [배경 정보]\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;const response=await fetch(getApiUrl(mainApiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}finally{setIsTextLoading(false);}};const getActionScope=choiceText=>{const talkMatch=choiceText.match(/(.+)에게 말을 건다/);if(talkMatch)return`interaction:talk_to:${talkMatch[1].trim()}`;const lookMatch=choiceText.match(/(.+)을[를]? 살펴본다/);if(lookMatch)return`action:examine:${lookMatch[1].trim()}`;return`location:${gameState.player.currentLocation}`;};const performAction=async(choiceObject,participants)=>{const choiceText=choiceObject.text;setIsTextLoading(true);try{const actorDisplayNames=participants.map(pid=>getDisplayName(pid));const privateInfos={};// For now, the action is based on the initiator's state.\nprivateInfos[userId]=privatePlayerState;const promptData={actorDisplayNames,playerChoice:choiceText,sharedInfo:{currentLocation:gameState.player.currentLocation,currentChoices:gameState.choices},privateInfos};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){await runTransaction(db,async transaction=>{const scenarioDoc=await transaction.get(getMainScenarioRef(db,appId));const privateDoc=await transaction.get(getPrivatePlayerStateRef(db,appId,userId));const statusDoc=await transaction.get(getGameStatusRef(db,appId));const currentPublicData=scenarioDoc.exists()?scenarioDoc.data():getDefaultGameState();const currentPrivateData=privateDoc.exists()?privateDoc.data():getDefaultPrivatePlayerState();let newChoicePool=[...(currentPublicData.choices||[])];if(llmResponse.choices_to_remove)newChoicePool=newChoicePool.filter(c=>!llmResponse.choices_to_remove.includes(c.id));if(llmResponse.choices_to_add)newChoicePool.push(...llmResponse.choices_to_add.filter(c=>c.id&&c.text));transaction.set(getMainScenarioRef(db,appId),{log:[...(currentPublicData.log||[]),{actor:participants.map(pid=>({id:pid,displayName:getDisplayName(pid)})),action:choiceText,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",timestamp:serverTimestamp()}],choices:newChoicePool},{merge:true});let newPrivateChoices=[...(currentPrivateData.choices||[])];if(llmResponse.privateChoices_to_remove)newPrivateChoices=newPrivateChoices.filter(c=>!llmResponse.privateChoices_to_remove.includes(c.id));if(llmResponse.privateChoices_to_add)newPrivateChoices.push(...llmResponse.privateChoices_to_add.filter(c=>c.id&&c.text));transaction.set(getPrivatePlayerStateRef(db,appId,userId),{...llmResponse.privateStateUpdates,choices:newPrivateChoices},{merge:true});// 리더십 해제 및 잠금 관리\nconst currentLocks=statusDoc.exists()?statusDoc.data().actionLocks:{};const scope=getActionScope(choiceText);delete currentLocks[scope];transaction.set(getGameStatusRef(db,appId),{leaderId:null,actionLocks:currentLocks});});}}catch(error){setLlmError(error.message);}finally{setIsTextLoading(false);}};const handleLeaveConversation=async scope=>{const gameStatusRef=getGameStatusRef(db,appId);setIsTextLoading(true);try{await runTransaction(db,async transaction=>{const statusDoc=await transaction.get(gameStatusRef);if(!statusDoc.exists())return;const currentLocks=statusDoc.data().actionLocks||{};let participants=currentLocks[scope]||[];if(Array.isArray(participants)){const newParticipants=participants.filter(pId=>pId!==userId);if(newParticipants.length>0){transaction.update(gameStatusRef,{[`actionLocks.${scope}`]:newParticipants});}else{delete currentLocks[scope];transaction.update(gameStatusRef,{actionLocks:currentLocks});}}});}catch(error){setLlmError(\"대화에서 벗어나는 중 오류가 발생했습니다.\");}finally{setIsTextLoading(false);}};const handleCooperativeAction=async(scope,choiceObject)=>{const gameStatusRef=getGameStatusRef(db,appId);setCooperativeAction(null);try{let finalParticipants;await runTransaction(db,async transaction=>{const statusDoc=await transaction.get(gameStatusRef);const currentLocks=statusDoc.exists()?statusDoc.data().actionLocks:{};const participants=currentLocks[scope]||[];if(Array.isArray(participants)&&!participants.includes(userId)){finalParticipants=[...participants,userId];transaction.update(gameStatusRef,{[`actionLocks.${scope}`]:finalParticipants});}else{finalParticipants=participants;}});if(finalParticipants){await performAction(choiceObject,finalParticipants);}}catch(error){setLlmError(\"대화 참여에 실패했습니다.\");}};const handleChoiceClick=async choiceObject=>{if(isTextLoading)return;setCooperativeAction(null);if(choiceObject.type==='action_leave'){const scope=choiceObject.id.replace('action:leave_conversation:','');await handleLeaveConversation(scope);return;}if(!privatePlayerState.characterCreated){setIsTextLoading(true);const choiceKey=choiceObject.text.split('.')[0];const selectedProfession=professions[choiceKey];if(selectedProfession){await setDoc(getPrivatePlayerStateRef(db,appId,userId),{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name},{merge:true});const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,timestamp:serverTimestamp()};await setDoc(mainScenarioRef,{...getDefaultGameState(),log:[newEvent]},{merge:true});}setIsTextLoading(false);return;}// 리더 시스템 + 협력 시스템 결합\nconst scope=getActionScope(choiceObject.text);const lockedBy=actionLocks[scope];const isPublicAction=choiceObject.type!=='private';// 공개 행동은 리더가 필요\nif(isPublicAction&&!gameState.leaderId){setLlmError(\"먼저 '행동권 잡기'를 통해 리더가 되어주세요.\");setTimeout(()=>setLlmError(null),3000);return;}// 리더가 아니면 공개 행동 불가\nif(isPublicAction&&gameState.leaderId!==userId){// 단, 다른 사람이 진행중인 행동에 참여는 가능\nif(lockedBy&&Array.isArray(lockedBy)&&!lockedBy.includes(userId)){setCooperativeAction({scope,choiceObject,lockedBy});}else{setLlmError(\"현재 턴의 리더만 주요 행동을 할 수 있습니다.\");setTimeout(()=>setLlmError(null),3000);}return;}// 내가 리더거나, 개인 행동이거나, 이미 참여중인 협력 행동일 경우\nconst participants=lockedBy&&Array.isArray(lockedBy)?lockedBy:[userId];if(!lockedBy&&isPublicAction){const gameStatusRef=getGameStatusRef(db,appId);await setDoc(gameStatusRef,{actionLocks:{...actionLocks,[scope]:participants}},{merge:true});}await performAction(choiceObject,participants);};// --- useEffect Hooks ---\nuseEffect(()=>{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubAuth=onAuthStateChanged(firebaseAuth,user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{signInAnonymously(firebaseAuth);}});return()=>unsubAuth();},[]);useEffect(()=>{if(!isAuthReady||!db||!userId)return;const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);getDoc(privateStateRef).then(docSnap=>{if(!docSnap.exists())setDoc(privateStateRef,getDefaultPrivatePlayerState());});const unsubPrivate=onSnapshot(privateStateRef,snapshot=>{if(snapshot.exists())setPrivatePlayerState({...getDefaultPrivatePlayerState(),...snapshot.data()});if(isLoading)setIsLoading(false);});const unsubPublic=onSnapshot(getMainScenarioRef(db,appId),snap=>{if(snap.exists())setGameState(prev=>({...prev,...snap.data()}));});const unsubStatus=onSnapshot(getGameStatusRef(db,appId),snap=>{const data=snap.data()||{};setActionLocks(data.actionLocks||{});setGameState(prev=>({...prev,leaderId:data.leaderId||null}));});const unsubChat=onSnapshot(query(collection(db,'artifacts',appId,'public','data','chatMessages')),snapshot=>{setChatMessages(snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);}));});const unsubUsers=onSnapshot(query(collection(db,'artifacts',appId,'public','data','activeUsers')),snapshot=>{setActiveUsers(snapshot.docs.map(d=>({id:d.id,...d.data()})));});return()=>{unsubPrivate();unsubPublic();unsubStatus();unsubChat();unsubUsers();};},[isAuthReady,db,userId]);useEffect(()=>{if(!db||!userId||!nickname)return;const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{lastActive:serverTimestamp(),nickname,profession:privatePlayerState.profession},{merge:true});},[db,userId,nickname,privatePlayerState.profession]);// --- Render Components ---\nconst gameLogRef=useRef(null);useEffect(()=>{if(gameLogRef.current)gameLogRef.current.scrollTop=gameLogRef.current.scrollHeight;},[gameState.log]);const GameLogPanel=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700/50 p-4 rounded-md overflow-y-auto h-full custom-scrollbar\",ref:gameLogRef,children:[!privatePlayerState.characterCreated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 font-semibold italic text-lg\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"})]}),gameState.log.map((event,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 rounded bg-gray-900/50\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[Array.isArray(event.actor)?event.actor.map(a=>a.displayName).join(', '):event.actor.displayName,\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-2\",children:event.publicStory})]},index)),isTextLoading&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-yellow-400 p-2\",children:\"\\uC774\\uC57C\\uAE30 \\uC0DD\\uC131 \\uC911...\"})]});const chatLogRef=useRef(null);useEffect(()=>{if(chatLogRef.current)chatLogRef.current.scrollTop=chatLogRef.current.scrollHeight;},[chatMessages]);const ChatPanel=_ref=>{let{isMobile}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:`flex flex-col h-full rounded-md ${isMobile?'bg-gray-900':'bg-gray-700/50'}`,children:/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow p-4 overflow-y-auto custom-scrollbar\",ref:chatLogRef,children:chatMessages.map(msg=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2 leading-snug\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-200\",children:msg.message})]},msg.id))})});};const ChatInput=_ref2=>{let{onSendMessage}=_ref2;const[message,setMessage]=useState('');const handleSend=()=>{onSendMessage(message);setMessage('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex p-2 bg-gray-800/80 border-t border-gray-700\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-600 border border-gray-500 text-white focus:ring-2 focus:ring-blue-500 focus:outline-none\",value:message,onChange:e=>setMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleSend(),placeholder:\"\\uBA54\\uC2DC\\uC9C0 \\uC785\\uB825...\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md text-white\",onClick:handleSend,disabled:!message.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]});};const ChoicesPanel=()=>{const myLocks=Object.entries(actionLocks).filter(_ref3=>{let[,p]=_ref3;return Array.isArray(p)&&p.includes(userId);});const visibleChoices=[...(gameState.choices||[]).filter(c=>c.location===gameState.player.currentLocation),...(privatePlayerState.choices||[]),...myLocks.map(_ref4=>{let[scope]=_ref4;return{id:`action:leave_conversation:${scope}`,text:`'${scope.split(':')[2]||'현재 활동'}'에서 벗어나기`,type:'action_leave'};})].filter((c,i,self)=>i===self.findIndex(t=>t.id===c.id));return/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3 p-4 overflow-y-auto custom-scrollbar\",children:!privatePlayerState.characterCreated?Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick({id:key,text:`${key}. ${professions[key].name}`}),className:\"p-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white rounded-md text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300 font-bold\",children:professions[key].name}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key)):/*#__PURE__*/_jsxs(_Fragment,{children:[gameState.leaderId===null&&!myLocks.length&&/*#__PURE__*/_jsx(\"button\",{className:\"px-6 py-3 font-bold rounded-md shadow-lg bg-green-600 hover:bg-green-700 text-white transition-transform transform hover:scale-105\",onClick:takeLead,children:\"\\uD589\\uB3D9\\uAD8C \\uC7A1\\uAE30\"}),gameState.leaderId!==null&&gameState.leaderId!==userId&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-center p-3 bg-yellow-900/50 rounded-md text-yellow-300 font-bold\",children:[getDisplayName(gameState.leaderId),\"\\uB2D8\\uC774 \\uD589\\uB3D9 \\uC911\\uC785\\uB2C8\\uB2E4...\"]}),visibleChoices.map(choice=>{const scope=getActionScope(choice.text);const lockedBy=actionLocks[scope];const isLockedByOther=lockedBy&&Array.isArray(lockedBy)&&!lockedBy.includes(userId);let buttonStyle='bg-blue-600 hover:bg-blue-700';let prefix='';if(choice.type==='private')buttonStyle='bg-purple-600 hover:bg-purple-700';else if(choice.type==='action_leave')buttonStyle='bg-red-600 hover:bg-red-700';if(isLockedByOther){buttonStyle='bg-yellow-600 hover:bg-yellow-700';prefix=`[참여] `;}return/*#__PURE__*/_jsxs(\"button\",{className:`px-6 py-3 font-bold rounded-md shadow-lg transition-transform transform hover:scale-105 disabled:opacity-50 ${buttonStyle} text-white`,onClick:()=>handleChoiceClick(choice),disabled:isTextLoading,children:[prefix,choice.text]},choice.id);})]})});};const Sidebar=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-4 p-4 bg-gray-800/50 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700/50 p-3 rounded-md text-sm text-gray-300 space-y-1\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",privatePlayerState.profession||'미정']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",gameState.player.currentLocation]})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:[\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4 (\",activeUsers.length,\")\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-700/50 p-3 rounded-md text-sm text-gray-300 space-y-1 h-32 overflow-y-auto custom-scrollbar\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"div\",{className:`p-1 rounded transition-colors ${gameState.leaderId===user.id?'bg-yellow-500 text-black font-bold':''}`,children:[getDisplayName(user.id),\" \",gameState.leaderId===user.id&&'(리더)']},user.id))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow flex flex-col min-h-0\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200 mb-2\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsx(ChatPanel,{})]})]});const DesktopLayout=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-7xl h-[90vh] bg-gray-900/50 rounded-lg shadow-2xl p-6 flex space-x-6 border border-gray-700\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"w-2/3 flex flex-col space-y-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow h-1/2 min-h-0\",children:/*#__PURE__*/_jsx(GameLogPanel,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow h-1/2 min-h-0 border-t-2 border-gray-700 pt-4\",children:/*#__PURE__*/_jsx(ChoicesPanel,{})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-1/3 h-full flex flex-col\",children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(ChatInput,{onSendMessage:sendChatMessage})]})]});const MobileLayout=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"w-full h-[95vh] bg-gray-900 rounded-lg shadow-xl flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex border-b border-gray-700\",children:[/*#__PURE__*/_jsx(\"button\",{className:`flex-1 p-3 font-bold text-lg ${mobileTab==='game'?'bg-gray-700 text-white':'bg-gray-800 text-gray-400'}`,onClick:()=>setMobileTab('game'),children:\"\\uAC8C\\uC784\"}),/*#__PURE__*/_jsx(\"button\",{className:`flex-1 p-3 font-bold text-lg ${mobileTab==='chat'?'bg-gray-700 text-white':'bg-gray-800 text-gray-400'}`,onClick:()=>setMobileTab('chat'),children:\"\\uCC44\\uD305\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow min-h-0\",children:mobileTab==='game'?/*#__PURE__*/_jsx(GameLogPanel,{}):/*#__PURE__*/_jsx(ChatPanel,{isMobile:true})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-shrink-0 border-t border-gray-700 bg-gray-800\",children:mobileTab==='game'?/*#__PURE__*/_jsx(ChoicesPanel,{}):/*#__PURE__*/_jsx(ChatInput,{onSendMessage:sendChatMessage})})]});// --- Main Render ---\nif(!isAuthReady){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uC5F0\\uACB0 \\uC911...\"})]});}if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uBAA8\\uD5D8\\uC5D0 \\uC0AC\\uC6A9\\uD560 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uBAA8\\uD5D8 \\uC2DC\\uC791\"})]})});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uC138\\uACC4\\uC758 \\uBB38\\uC744 \\uC5EC\\uB294 \\uC911...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-2 font-sans\",children:[llmError&&/*#__PURE__*/_jsxs(\"div\",{className:\"fixed top-5 right-5 bg-red-800/90 text-white p-4 rounded-lg shadow-lg z-50 border border-red-600 max-w-sm\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"\\uC624\\uB958 \\uBC1C\\uC0DD\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1\",children:llmError}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setLlmError(null),className:\"absolute top-1 right-2 text-lg font-bold\",children:\"\\xD7\"})]}),cooperativeAction&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-yellow-400\",children:\"\\uC9C4\\uD589 \\uC911\\uC778 \\uB300\\uD654\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-200\",children:[getDisplayName(cooperativeAction.lockedBy[0]),\"\\uB2D8\\uC774 \\uC774\\uBBF8 \",cooperativeAction.choiceObject.text,\" \\uD589\\uB3D9\\uC744 \\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uCC38\\uC5EC\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md\",onClick:()=>handleCooperativeAction(cooperativeAction.scope,cooperativeAction.choiceObject),children:\"\\uB300\\uD654 \\uCC38\\uC5EC\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setCooperativeAction(null),children:\"\\uB098\\uC911\\uC5D0 \\uD558\\uAE30\"})]})]})}),isDesktopOrLaptop&&/*#__PURE__*/_jsx(DesktopLayout,{}),isMobile&&/*#__PURE__*/_jsx(MobileLayout,{}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; background-color: #111827; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #1f2937; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #4b5563; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #6b7280; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMediaQuery","initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getGameStatusRef","getDefaultGameState","log","choices","id","text","type","location","player","currentLocation","leaderId","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","characterCreated","profession","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","actionLocks","setActionLocks","isTextLoading","setIsTextLoading","activeUsers","setActiveUsers","chatMessages","setChatMessages","setDb","auth","setAuth","setUserId","isAuthReady","setIsAuthReady","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","llmError","setLlmError","isLoading","setIsLoading","cooperativeAction","setCooperativeAction","isDesktopOrLaptop","isMobile","mobileTab","setMobileTab","handleNicknameSubmit","trim","finalNickname","setItem","getDisplayName","uid","substring","user","find","u","sendChatMessage","message","chatCollectionRef","displayName","timestamp","error","console","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","getApiUrl","userPrompt","actorDisplayNames","join","JSON","stringify","privateInfos","playerChoice","sharedInfo","currentChoices","payload","contents","role","parts","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","fetch","method","headers","body","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","getActionScope","choiceText","talkMatch","lookMatch","performAction","choiceObject","participants","map","pid","llmResponse","transaction","scenarioDoc","get","privateDoc","statusDoc","currentPublicData","exists","data","currentPrivateData","newChoicePool","choices_to_remove","filter","c","includes","choices_to_add","push","set","actor","action","publicStory","story","merge","newPrivateChoices","privateChoices_to_remove","privateChoices_to_add","privateStateUpdates","currentLocks","scope","handleLeaveConversation","gameStatusRef","Array","isArray","newParticipants","pId","length","update","handleCooperativeAction","finalParticipants","handleChoiceClick","replace","choiceKey","split","selectedProfession","mainScenarioRef","newEvent","lockedBy","isPublicAction","setTimeout","app","firestoreDb","firebaseAuth","unsubAuth","privateStateRef","then","docSnap","unsubPrivate","snapshot","unsubPublic","snap","prev","unsubStatus","unsubChat","docs","d","sort","a","b","_a$timestamp","_b$timestamp","toMillis","unsubUsers","userDocRef","lastActive","gameLogRef","current","scrollTop","scrollHeight","GameLogPanel","className","ref","children","event","index","chatLogRef","ChatPanel","_ref","msg","ChatInput","_ref2","onSendMessage","setMessage","handleSend","value","onChange","e","target","onKeyPress","key","placeholder","onClick","disabled","ChoicesPanel","myLocks","Object","entries","_ref3","p","visibleChoices","_ref4","i","self","findIndex","t","keys","takeLead","choice","isLockedByOther","buttonStyle","prefix","Sidebar","DesktopLayout","MobileLayout","onKeyDown","autoFocus"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  runTransaction\r\n} from 'firebase/firestore';\r\n\r\n// ====================================================================\r\n// Firebase configuration information\r\nconst defaultFirebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\nconst firebaseConfig = defaultFirebaseConfig;\r\nconst appId = firebaseConfig.projectId;\r\n// ====================================================================\r\n\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\n// Firestore Path Utils\r\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\r\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\r\nconst getGameStatusRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\n\r\n// State Initializers\r\nconst getDefaultGameState = () => ({\r\n  log: [],\r\n  choices: [\r\n    { id: 'inn_look_around', text: \"여관을 둘러본다\", type: 'location_default', location: '방랑자의 안식처' },\r\n    { id: 'inn_talk_to_owner', text: \"여관 주인에게 말을 건다\", type: 'location_default', location: '방랑자의 안식처' },\r\n  ],\r\n  player: { currentLocation: '방랑자의 안식처' },\r\n  leaderId: null, // 선착순 리더 ID\r\n});\r\n\r\nconst getDefaultPrivatePlayerState = () => ({\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n    inventory: [],\r\n    characterCreated: false,\r\n    profession: '',\r\n    choices: [], // 개인 선택지 풀\r\n});\r\n\r\n// Main App Component\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(getDefaultGameState());\r\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\r\n  const [actionLocks, setActionLocks] = useState({});\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\r\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\r\n  const [nicknameInput, setNicknameInput] = useState('');\r\n  const [llmError, setLlmError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [cooperativeAction, setCooperativeAction] = useState(null);\r\n  \r\n  const isDesktopOrLaptop = useMediaQuery({ query: '(min-width: 1024px)' });\r\n  const isMobile = useMediaQuery({ query: '(max-width: 1023px)' });\r\n  const [mobileTab, setMobileTab] = useState('game');\r\n\r\n  // --- Core Functions ---\r\n  \r\n  const handleNicknameSubmit = () => {\r\n    if (nicknameInput.trim()) {\r\n      const finalNickname = nicknameInput.trim();\r\n      setNickname(finalNickname);\r\n      localStorage.setItem('nickname', finalNickname);\r\n      setShowNicknameModal(false);\r\n    }\r\n  };\r\n\r\n  const getDisplayName = (uid) => {\r\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\r\n    const user = activeUsers.find(u => u.id === uid);\r\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\r\n  };\r\n  \r\n  const sendChatMessage = async (message) => {\r\n    if (!db || !userId || !isAuthReady || !message.trim()) return;\r\n    try {\r\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message, timestamp: serverTimestamp() });\r\n    } catch (error) {\r\n      console.error(\"Error sending chat message:\", error);\r\n    }\r\n  };\r\n  \r\n  const systemPrompt = `\r\n    ### 페르소나 (Persona)\r\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\r\n\r\n    ### 핵심 규칙 (매우 중요)\r\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어(들)의 시점에서, 그(들)이 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다. 여러 명이 참여하는 행동의 경우, 모두를 조명해야 합니다.\r\n    2.  **선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\r\n\r\n    ### JSON 출력 구조\r\n    {\r\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\r\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\r\n      \"choices_to_add\": [ { \"id\": \"unique_id_1\", \"text\": \"새로운 선택지\", \"type\": \"location_default\", \"location\": \"현재 장소\" } ],\r\n      \"choices_to_remove\": [\"obsolete_choice_id_1\"],\r\n      \"privateChoices_to_add\": [ { \"id\": \"private_choice_1\", \"text\": \"개인 선택지\", \"type\": \"private\" } ],\r\n      \"privateChoices_to_remove\": [\"obsolete_private_id_1\"],\r\n      \"privateStateUpdates\": {\r\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\r\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 }\r\n      },\r\n      \"sharedStateUpdates\": {\r\n        \"leaderId\": null\r\n      }\r\n    }\r\n  `;\r\n\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\r\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n\r\n    const userPrompt = `\r\n      [상황 분석 요청]\r\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\r\n\r\n      ### [행동 주체 (Actor)]\r\n      - 이름(들): ${promptData.actorDisplayNames.join(', ')}\r\n      - 정보: ${JSON.stringify(promptData.privateInfos)}\r\n\r\n      ### [선택 (Action)]\r\n      - \"${promptData.playerChoice}\"\r\n\r\n      ### [배경 정보]\r\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\r\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\r\n    `;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\r\n    \r\n    try {\r\n      const response = await fetch(getApiUrl(mainApiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n      if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); }\r\n      const result = await response.json();\r\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\r\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\r\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\r\n      throw new Error(\"Valid JSON object not found in LLM response.\");\r\n    } catch (error) {\r\n      console.error(\"LLM API call error:\", error);\r\n      setLlmError(error.message || 'LLM 호출 실패');\r\n      return null;\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const getActionScope = (choiceText) => {\r\n    const talkMatch = choiceText.match(/(.+)에게 말을 건다/);\r\n    if (talkMatch) return `interaction:talk_to:${talkMatch[1].trim()}`;\r\n    const lookMatch = choiceText.match(/(.+)을[를]? 살펴본다/);\r\n    if (lookMatch) return `action:examine:${lookMatch[1].trim()}`;\r\n    return `location:${gameState.player.currentLocation}`;\r\n  };\r\n\r\n  const performAction = async (choiceObject, participants) => {\r\n      const choiceText = choiceObject.text;\r\n      setIsTextLoading(true);\r\n      try {\r\n          const actorDisplayNames = participants.map(pid => getDisplayName(pid));\r\n          const privateInfos = {};\r\n          // For now, the action is based on the initiator's state.\r\n          privateInfos[userId] = privatePlayerState;\r\n\r\n          const promptData = {\r\n              actorDisplayNames,\r\n              playerChoice: choiceText,\r\n              sharedInfo: { currentLocation: gameState.player.currentLocation, currentChoices: gameState.choices },\r\n              privateInfos,\r\n          };\r\n\r\n          const llmResponse = await callGeminiTextLLM(promptData);\r\n\r\n          if (llmResponse) {\r\n              await runTransaction(db, async (transaction) => {\r\n                  const scenarioDoc = await transaction.get(getMainScenarioRef(db, appId));\r\n                  const privateDoc = await transaction.get(getPrivatePlayerStateRef(db, appId, userId));\r\n                  const statusDoc = await transaction.get(getGameStatusRef(db, appId));\r\n\r\n                  const currentPublicData = scenarioDoc.exists() ? scenarioDoc.data() : getDefaultGameState();\r\n                  const currentPrivateData = privateDoc.exists() ? privateDoc.data() : getDefaultPrivatePlayerState();\r\n\r\n                  let newChoicePool = [...(currentPublicData.choices || [])];\r\n                  if (llmResponse.choices_to_remove) newChoicePool = newChoicePool.filter(c => !llmResponse.choices_to_remove.includes(c.id));\r\n                  if (llmResponse.choices_to_add) newChoicePool.push(...llmResponse.choices_to_add.filter(c=>c.id && c.text));\r\n                  \r\n                  transaction.set(getMainScenarioRef(db, appId), {\r\n                      log: [...(currentPublicData.log || []), {\r\n                          actor: participants.map(pid => ({id: pid, displayName: getDisplayName(pid)})),\r\n                          action: choiceText,\r\n                          publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\r\n                          timestamp: serverTimestamp()\r\n                      }],\r\n                      choices: newChoicePool,\r\n                  }, {merge: true});\r\n\r\n                  let newPrivateChoices = [...(currentPrivateData.choices || [])];\r\n                  if (llmResponse.privateChoices_to_remove) newPrivateChoices = newPrivateChoices.filter(c => !llmResponse.privateChoices_to_remove.includes(c.id));\r\n                  if (llmResponse.privateChoices_to_add) newPrivateChoices.push(...llmResponse.privateChoices_to_add.filter(c=>c.id && c.text));\r\n                  \r\n                  transaction.set(getPrivatePlayerStateRef(db, appId, userId), {\r\n                      ...llmResponse.privateStateUpdates,\r\n                      choices: newPrivateChoices,\r\n                  }, {merge: true});\r\n                  \r\n                  // 리더십 해제 및 잠금 관리\r\n                  const currentLocks = statusDoc.exists() ? statusDoc.data().actionLocks : {};\r\n                  const scope = getActionScope(choiceText);\r\n                  delete currentLocks[scope];\r\n                  transaction.set(getGameStatusRef(db, appId), { leaderId: null, actionLocks: currentLocks });\r\n              });\r\n          }\r\n      } catch (error) {\r\n          setLlmError(error.message);\r\n      } finally {\r\n          setIsTextLoading(false);\r\n      }\r\n  };\r\n  \r\n  const handleLeaveConversation = async (scope) => {\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    setIsTextLoading(true);\r\n    try {\r\n        await runTransaction(db, async (transaction) => {\r\n            const statusDoc = await transaction.get(gameStatusRef);\r\n            if (!statusDoc.exists()) return;\r\n            const currentLocks = statusDoc.data().actionLocks || {};\r\n            let participants = currentLocks[scope] || [];\r\n            if (Array.isArray(participants)) {\r\n                const newParticipants = participants.filter(pId => pId !== userId);\r\n                if (newParticipants.length > 0) {\r\n                    transaction.update(gameStatusRef, { [`actionLocks.${scope}`]: newParticipants });\r\n                } else {\r\n                    delete currentLocks[scope];\r\n                    transaction.update(gameStatusRef, { actionLocks: currentLocks });\r\n                }\r\n            }\r\n        });\r\n    } catch (error) {\r\n        setLlmError(\"대화에서 벗어나는 중 오류가 발생했습니다.\");\r\n    } finally {\r\n        setIsTextLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleCooperativeAction = async (scope, choiceObject) => {\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    setCooperativeAction(null);\r\n    try {\r\n        let finalParticipants;\r\n        await runTransaction(db, async (transaction) => {\r\n            const statusDoc = await transaction.get(gameStatusRef);\r\n            const currentLocks = statusDoc.exists() ? statusDoc.data().actionLocks : {};\r\n            const participants = currentLocks[scope] || [];\r\n            if(Array.isArray(participants) && !participants.includes(userId)) {\r\n                finalParticipants = [...participants, userId];\r\n                transaction.update(gameStatusRef, { [`actionLocks.${scope}`]: finalParticipants });\r\n            } else {\r\n              finalParticipants = participants;\r\n            }\r\n        });\r\n        if (finalParticipants) {\r\n          await performAction(choiceObject, finalParticipants);\r\n        }\r\n    } catch(error) {\r\n        setLlmError(\"대화 참여에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const handleChoiceClick = async (choiceObject) => {\r\n    if (isTextLoading) return;\r\n    setCooperativeAction(null);\r\n\r\n    if (choiceObject.type === 'action_leave') {\r\n        const scope = choiceObject.id.replace('action:leave_conversation:', '');\r\n        await handleLeaveConversation(scope);\r\n        return;\r\n    }\r\n\r\n    if (!privatePlayerState.characterCreated) {\r\n        setIsTextLoading(true);\r\n        const choiceKey = choiceObject.text.split('.')[0];\r\n        const selectedProfession = professions[choiceKey];\r\n        if (selectedProfession) {\r\n            await setDoc(getPrivatePlayerStateRef(db, appId, userId), {\r\n                ...getDefaultPrivatePlayerState(), characterCreated: true, profession: selectedProfession.name,\r\n            }, { merge: true });\r\n            \r\n            const mainScenarioRef = getMainScenarioRef(db, appId);\r\n            const newEvent = {\r\n                actor: { id: userId, displayName: getDisplayName(userId) }, action: \"여관에 들어선다\",\r\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,\r\n                timestamp: serverTimestamp()\r\n            };\r\n            await setDoc(mainScenarioRef, { ...getDefaultGameState(), log: [newEvent] }, { merge: true });\r\n        }\r\n        setIsTextLoading(false);\r\n        return;\r\n    }\r\n    \r\n    // 리더 시스템 + 협력 시스템 결합\r\n    const scope = getActionScope(choiceObject.text);\r\n    const lockedBy = actionLocks[scope];\r\n    const isPublicAction = choiceObject.type !== 'private';\r\n    \r\n    // 공개 행동은 리더가 필요\r\n    if(isPublicAction && !gameState.leaderId) {\r\n        setLlmError(\"먼저 '행동권 잡기'를 통해 리더가 되어주세요.\");\r\n        setTimeout(()=>setLlmError(null), 3000);\r\n        return;\r\n    }\r\n    \r\n    // 리더가 아니면 공개 행동 불가\r\n    if (isPublicAction && gameState.leaderId !== userId) {\r\n        // 단, 다른 사람이 진행중인 행동에 참여는 가능\r\n        if (lockedBy && Array.isArray(lockedBy) && !lockedBy.includes(userId)) {\r\n            setCooperativeAction({ scope, choiceObject, lockedBy });\r\n        } else {\r\n            setLlmError(\"현재 턴의 리더만 주요 행동을 할 수 있습니다.\");\r\n            setTimeout(()=>setLlmError(null), 3000);\r\n        }\r\n        return;\r\n    }\r\n\r\n    // 내가 리더거나, 개인 행동이거나, 이미 참여중인 협력 행동일 경우\r\n    const participants = lockedBy && Array.isArray(lockedBy) ? lockedBy : [userId];\r\n    if (!lockedBy && isPublicAction) {\r\n      const gameStatusRef = getGameStatusRef(db, appId);\r\n      await setDoc(gameStatusRef, { actionLocks: { ...actionLocks, [scope]: participants } }, { merge: true });\r\n    }\r\n    await performAction(choiceObject, participants);\r\n  };\r\n  \r\n  // --- useEffect Hooks ---\r\n  \r\n  useEffect(() => {\r\n    const app = initializeApp(firebaseConfig);\r\n    const firestoreDb = getFirestore(app);\r\n    const firebaseAuth = getAuth(app);\r\n    setDb(firestoreDb);\r\n    setAuth(firebaseAuth);\r\n    const unsubAuth = onAuthStateChanged(firebaseAuth, user => {\r\n      if (user) { setUserId(user.uid); setIsAuthReady(true); } \r\n      else { signInAnonymously(firebaseAuth); }\r\n    });\r\n    return () => unsubAuth();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || !db || !userId) return;\r\n\r\n    const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n    getDoc(privateStateRef).then(docSnap => {\r\n        if (!docSnap.exists()) setDoc(privateStateRef, getDefaultPrivatePlayerState());\r\n    });\r\n    const unsubPrivate = onSnapshot(privateStateRef, (snapshot) => {\r\n      if (snapshot.exists()) setPrivatePlayerState({ ...getDefaultPrivatePlayerState(), ...snapshot.data() });\r\n      if (isLoading) setIsLoading(false);\r\n    });\r\n\r\n    const unsubPublic = onSnapshot(getMainScenarioRef(db, appId), (snap) => {\r\n        if (snap.exists()) setGameState(prev => ({...prev, ...snap.data()}));\r\n    });\r\n\r\n    const unsubStatus = onSnapshot(getGameStatusRef(db, appId), (snap) => {\r\n        const data = snap.data() || {};\r\n        setActionLocks(data.actionLocks || {});\r\n        setGameState(prev => ({...prev, leaderId: data.leaderId || null}));\r\n    });\r\n    \r\n    const unsubChat = onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages')), (snapshot) => {\r\n        setChatMessages(snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0)));\r\n    });\r\n    \r\n    const unsubUsers = onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers')), (snapshot) => {\r\n        setActiveUsers(snapshot.docs.map(d => ({ id: d.id, ...d.data() })));\r\n    });\r\n\r\n    return () => { unsubPrivate(); unsubPublic(); unsubStatus(); unsubChat(); unsubUsers(); };\r\n  }, [isAuthReady, db, userId]);\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId || !nickname) return;\r\n    const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n    setDoc(userDocRef, {\r\n      lastActive: serverTimestamp(),\r\n      nickname,\r\n      profession: privatePlayerState.profession,\r\n    }, { merge: true });\r\n  }, [db, userId, nickname, privatePlayerState.profession]);\r\n\r\n  // --- Render Components ---\r\n\r\n  const gameLogRef = useRef(null);\r\n  useEffect(() => { if (gameLogRef.current) gameLogRef.current.scrollTop = gameLogRef.current.scrollHeight; }, [gameState.log]);\r\n\r\n  const GameLogPanel = () => (\r\n    <div className=\"flex-grow bg-gray-700/50 p-4 rounded-md overflow-y-auto h-full custom-scrollbar\" ref={gameLogRef}>\r\n        {!privatePlayerState.characterCreated && (\r\n            <div className=\"mb-4 p-2 rounded bg-gray-900/50 text-center\">\r\n                <p className=\"text-yellow-300 font-semibold italic text-lg\">모험의 서막</p>\r\n                <p className=\"whitespace-pre-wrap mt-1\">당신은 어떤 운명을 선택하시겠습니까?</p>\r\n            </div>\r\n        )}\r\n        {gameState.log.map((event, index) => (\r\n            <div key={index} className=\"mb-4 p-3 rounded bg-gray-900/50\">\r\n                <p className=\"text-yellow-300 font-semibold italic text-sm\">\r\n                  {Array.isArray(event.actor) ? event.actor.map(a=>a.displayName).join(', ') : event.actor.displayName} 님이 {event.action} 선택\r\n                </p>\r\n                <p className=\"whitespace-pre-wrap mt-2\">{event.publicStory}</p>\r\n            </div>\r\n        ))}\r\n        {isTextLoading && <div className=\"text-center text-yellow-400 p-2\">이야기 생성 중...</div>}\r\n    </div>\r\n  );\r\n  \r\n  const chatLogRef = useRef(null);\r\n  useEffect(() => { if(chatLogRef.current) chatLogRef.current.scrollTop = chatLogRef.current.scrollHeight; }, [chatMessages]);\r\n\r\n  const ChatPanel = ({isMobile}) => (\r\n    <div className={`flex flex-col h-full rounded-md ${isMobile ? 'bg-gray-900' : 'bg-gray-700/50'}`}>\r\n        <div className=\"flex-grow p-4 overflow-y-auto custom-scrollbar\" ref={chatLogRef}>\r\n            {chatMessages.map((msg) => (\r\n                <div key={msg.id} className=\"mb-2 leading-snug\">\r\n                    <span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> <span className=\"text-gray-200\">{msg.message}</span>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  const ChatInput = ({ onSendMessage }) => {\r\n    const [message, setMessage] = useState('');\r\n    const handleSend = () => { onSendMessage(message); setMessage(''); };\r\n    return (\r\n        <div className=\"flex p-2 bg-gray-800/80 border-t border-gray-700\">\r\n            <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-600 border border-gray-500 text-white focus:ring-2 focus:ring-blue-500 focus:outline-none\" value={message} onChange={(e) => setMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && handleSend()} placeholder=\"메시지 입력...\" />\r\n            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md text-white\" onClick={handleSend} disabled={!message.trim()}>보내기</button>\r\n        </div>\r\n    );\r\n  };\r\n  \r\n  const ChoicesPanel = () => {\r\n    const myLocks = Object.entries(actionLocks).filter(([, p]) => Array.isArray(p) && p.includes(userId));\r\n    const visibleChoices = [\r\n        ...(gameState.choices || []).filter(c => c.location === gameState.player.currentLocation), \r\n        ...(privatePlayerState.choices || []),\r\n        ...myLocks.map(([scope]) => ({\r\n            id: `action:leave_conversation:${scope}`,\r\n            text: `'${scope.split(':')[2] || '현재 활동'}'에서 벗어나기`,\r\n            type: 'action_leave'\r\n        }))\r\n    ].filter((c, i, self) => i === self.findIndex(t => t.id === c.id));\r\n    \r\n    return (\r\n      <div className=\"flex flex-col gap-3 p-4 overflow-y-auto custom-scrollbar\">\r\n          {!privatePlayerState.characterCreated ? (\r\n                Object.keys(professions).map(key => (\r\n                    <button key={key} onClick={() => handleChoiceClick({ id: key, text: `${key}. ${professions[key].name}`})}\r\n                        className=\"p-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white rounded-md text-left\">\r\n                        <p className=\"text-lg text-blue-300 font-bold\">{professions[key].name}</p>\r\n                        <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\r\n                    </button>\r\n                ))\r\n            ) : (\r\n                <>\r\n                {gameState.leaderId === null && !myLocks.length && (\r\n                    <button className=\"px-6 py-3 font-bold rounded-md shadow-lg bg-green-600 hover:bg-green-700 text-white transition-transform transform hover:scale-105\" onClick={takeLead}>\r\n                        행동권 잡기\r\n                    </button>\r\n                )}\r\n                {gameState.leaderId !== null && gameState.leaderId !== userId && (\r\n                    <div className=\"text-center p-3 bg-yellow-900/50 rounded-md text-yellow-300 font-bold\">\r\n                        {getDisplayName(gameState.leaderId)}님이 행동 중입니다...\r\n                    </div>\r\n                )}\r\n                {visibleChoices.map((choice) => {\r\n                    const scope = getActionScope(choice.text);\r\n                    const lockedBy = actionLocks[scope];\r\n                    const isLockedByOther = lockedBy && Array.isArray(lockedBy) && !lockedBy.includes(userId);\r\n                    \r\n                    let buttonStyle = 'bg-blue-600 hover:bg-blue-700';\r\n                    let prefix = '';\r\n\r\n                    if (choice.type === 'private') buttonStyle = 'bg-purple-600 hover:bg-purple-700';\r\n                    else if (choice.type === 'action_leave') buttonStyle = 'bg-red-600 hover:bg-red-700';\r\n                    \r\n                    if (isLockedByOther) {\r\n                      buttonStyle = 'bg-yellow-600 hover:bg-yellow-700';\r\n                      prefix = `[참여] `;\r\n                    }\r\n\r\n                    return (\r\n                        <button key={choice.id}\r\n                            className={`px-6 py-3 font-bold rounded-md shadow-lg transition-transform transform hover:scale-105 disabled:opacity-50 ${buttonStyle} text-white`}\r\n                            onClick={() => handleChoiceClick(choice)}\r\n                            disabled={isTextLoading}>\r\n                            {prefix}{choice.text}\r\n                        </button>\r\n                    )\r\n                })}\r\n                </>\r\n            )\r\n          }\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const Sidebar = () => (\r\n    <div className=\"w-full lg:w-1/3 flex flex-col space-y-4 p-4 bg-gray-800/50 rounded-lg\">\r\n        <div>\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">내 정보</h4>\r\n            <div className=\"bg-gray-700/50 p-3 rounded-md text-sm text-gray-300 space-y-1\">\r\n                <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">직업:</span> {privatePlayerState.profession || '미정'}</p>\r\n                <p><span className=\"font-semibold text-blue-300\">위치:</span> {gameState.player.currentLocation}</p>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">현재 플레이어 ({activeUsers.length})</h4>\r\n            <div className=\"bg-gray-700/50 p-3 rounded-md text-sm text-gray-300 space-y-1 h-32 overflow-y-auto custom-scrollbar\">\r\n                {activeUsers.map(user => (\r\n                    <div key={user.id} className={`p-1 rounded transition-colors ${gameState.leaderId === user.id ? 'bg-yellow-500 text-black font-bold' : ''}`}>\r\n                      {getDisplayName(user.id)} {gameState.leaderId === user.id && '(리더)'}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        <div className=\"flex-grow flex flex-col min-h-0\">\r\n            <h4 className=\"text-md font-semibold text-gray-200 mb-2\">공개 채팅</h4>\r\n            <ChatPanel />\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  const DesktopLayout = () => (\r\n    <div className=\"w-full max-w-7xl h-[90vh] bg-gray-900/50 rounded-lg shadow-2xl p-6 flex space-x-6 border border-gray-700\">\r\n        <div className=\"w-2/3 flex flex-col space-y-4\">\r\n            <div className=\"flex-grow h-1/2 min-h-0\">\r\n                <GameLogPanel />\r\n            </div>\r\n            <div className=\"flex-grow h-1/2 min-h-0 border-t-2 border-gray-700 pt-4\">\r\n                <ChoicesPanel />\r\n            </div>\r\n        </div>\r\n        <div className=\"w-1/3 h-full flex flex-col\">\r\n            <Sidebar />\r\n            <ChatInput onSendMessage={sendChatMessage} />\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  const MobileLayout = () => (\r\n    <div className=\"w-full h-[95vh] bg-gray-900 rounded-lg shadow-xl flex flex-col\">\r\n        <div className=\"flex border-b border-gray-700\">\r\n            <button className={`flex-1 p-3 font-bold text-lg ${mobileTab === 'game' ? 'bg-gray-700 text-white' : 'bg-gray-800 text-gray-400'}`} onClick={() => setMobileTab('game')}>게임</button>\r\n            <button className={`flex-1 p-3 font-bold text-lg ${mobileTab === 'chat' ? 'bg-gray-700 text-white' : 'bg-gray-800 text-gray-400'}`} onClick={() => setMobileTab('chat')}>채팅</button>\r\n        </div>\r\n        \r\n        <div className=\"flex-grow min-h-0\">\r\n            {mobileTab === 'game' ? <GameLogPanel /> : <ChatPanel isMobile={true}/>}\r\n        </div>\r\n        \r\n        <div className=\"flex-shrink-0 border-t border-gray-700 bg-gray-800\">\r\n            {mobileTab === 'game' ? <ChoicesPanel /> : <ChatInput onSendMessage={sendChatMessage} />}\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  // --- Main Render ---\r\n\r\n  if (!isAuthReady) {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">연결 중...</span></div>;\r\n  }\r\n  \r\n  if (showNicknameModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">모험에 사용할 이름을 입력하세요</h3>\r\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\r\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>모험 시작</button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">세계의 문을 여는 중...</span></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-2 font-sans\">\r\n      {llmError && (\r\n          <div className=\"fixed top-5 right-5 bg-red-800/90 text-white p-4 rounded-lg shadow-lg z-50 border border-red-600 max-w-sm\">\r\n              <p className=\"font-bold\">오류 발생</p>\r\n              <p className=\"text-sm mt-1\">{llmError}</p>\r\n              <button onClick={() => setLlmError(null)} className=\"absolute top-1 right-2 text-lg font-bold\">&times;</button>\r\n          </div>\r\n      )}\r\n      {cooperativeAction && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\r\n              <h3 className=\"text-xl font-bold text-yellow-400\">진행 중인 대화</h3>\r\n              <p className=\"text-gray-200\">{getDisplayName(cooperativeAction.lockedBy[0])}님이 이미 {cooperativeAction.choiceObject.text} 행동을 하고 있습니다. 참여하시겠습니까?</p>\r\n              <div className=\"flex justify-center gap-4\">\r\n                  <button className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md\"\r\n                      onClick={() => handleCooperativeAction(cooperativeAction.scope, cooperativeAction.choiceObject)}>\r\n                      대화 참여하기\r\n                  </button>\r\n                  <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\"\r\n                      onClick={() => setCooperativeAction(null)}>\r\n                      나중에 하기\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          </div>\r\n      )}\r\n      {isDesktopOrLaptop && <DesktopLayout />}\r\n      {isMobile && <MobileLayout />}\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body { font-family: 'Noto Sans KR', sans-serif; background-color: #111827; }\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #1f2937; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #4b5563; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #6b7280; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}