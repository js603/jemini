{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction}from'firebase/firestore';// ====================================================================\n// Firebase configuration information - 수정 금지\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};// 수정금지\nconst firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;const initialAuthToken=null;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore 경로 유틸\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');const getGameStatusRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','gameStatus','status');const getMajorEventsRef=(db,appId)=>collection(db,'artifacts',appId,'public','data','majorEvents');// 상태 초기화 유틸\nconst getDefaultGameState=()=>({phase:'playing',log:[],choices:[{id:'inn_look_around',text:\"여관을 둘러본다\",type:'location_default',location:'방랑자의 안식처'},{id:'inn_talk_to_owner',text:\"여관 주인에게 말을 건다\",type:'location_default',location:'방랑자의 안식처'},{id:'inn_talk_to_adventurer',text:\"다른 모험가에게 말을 건다\",type:'location_default',location:'방랑자의 안식처'}],player:{currentLocation:'방랑자의 안식처'},subtleClues:[]});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',reputation:{},activeQuests:[],companions:[],knownClues:[],characterCreated:false,profession:'',choices:[],groups:[],npcRelations:{}});function App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[currentChatMessage,setCurrentChatMessage]=useState('');const[actionLocks,setActionLocks]=useState({});const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const logEndRef=useRef(null);const chatEndRef=useRef(null);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[accordion,setAccordion]=useState({gameLog:true,chat:true,users:true,playerInfo:true});const[showResetModal,setShowResetModal]=useState(false);const[isResetting,setIsResetting]=useState(false);const[llmError,setLlmError]=useState(null);const[llmRetryPrompt,setLlmRetryPrompt]=useState(null);const[isLoading,setIsLoading]=useState(true);const[worldHistory,setWorldHistory]=useState([]);const[cooperativeAction,setCooperativeAction]=useState(null);const handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);if(userId&&db){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{nickname:finalNickname},{merge:true});}}};const getDisplayName=uid=>{if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const resetAllGameData=async()=>{if(!db||!isAuthReady)return;setIsResetting(true);try{const collectionsToDelete=[collection(db,'artifacts',appId,'public','data','chatMessages'),collection(db,'artifacts',appId,'public','data','activeUsers'),getMajorEventsRef(db,appId)];for(const colRef of collectionsToDelete){const snapshot=await getDocs(colRef);for(const docSnap of snapshot.docs){await deleteDoc(docSnap.ref);}}const usersColRef=collection(db,'artifacts',appId,'users');const usersSnapshot=await getDocs(usersColRef);for(const userDoc of usersSnapshot.docs){const playerStateColRef=collection(db,'artifacts',appId,'users',userDoc.id,'playerState');const playerStateSnapshot=await getDocs(playerStateColRef);for(const stateDoc of playerStateSnapshot.docs){await deleteDoc(stateDoc.ref);}await deleteDoc(doc(db,'artifacts',appId,'users',userDoc.id));}await deleteDoc(getMainScenarioRef(db,appId));await deleteDoc(getGameStatusRef(db,appId));localStorage.clear();setGameState(getDefaultGameState());setPrivatePlayerState(getDefaultPrivatePlayerState());setChatMessages([]);setActionLocks({});console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");}catch(e){console.error(\"전체 데이터 초기화 중 오류 발생:\",e);}finally{setIsResetting(false);setShowResetModal(false);window.location.reload();}};useEffect(()=>{try{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{await(initialAuthToken?signInWithCustomToken(firebaseAuth,initialAuthToken):signInAnonymously(firebaseAuth));}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);setLlmError(\"Firebase 초기화에 실패했습니다.\");}},[]);useEffect(()=>{if(!isAuthReady||!db||!userId)return;const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);getDoc(privateStateRef).then(docSnap=>{if(!docSnap.exists()){setDoc(privateStateRef,getDefaultPrivatePlayerState());}});const unsubscribe=onSnapshot(privateStateRef,snapshot=>{if(snapshot.exists()){setPrivatePlayerState({...getDefaultPrivatePlayerState(),...snapshot.data()});}if(isLoading)setIsLoading(false);},err=>{console.error(\"Private state listener error:\",err);setIsLoading(false);});return()=>unsubscribe();},[isAuthReady,db,userId]);useEffect(()=>{if(!isAuthReady||!db)return;const unsubscribes=[onSnapshot(getMainScenarioRef(db,appId),snap=>{if(snap.exists()){const data=snap.data();setGameState(prev=>{var _data$player;return{...prev,log:data.storyLog||[],choices:data.choices||[],player:{...prev.player,currentLocation:((_data$player=data.player)===null||_data$player===void 0?void 0:_data$player.currentLocation)||prev.player.currentLocation},subtleClues:data.subtleClues||[]};});}else{setGameState(getDefaultGameState());}}),onSnapshot(getGameStatusRef(db,appId),docSnap=>{var _docSnap$data;setActionLocks(((_docSnap$data=docSnap.data())===null||_docSnap$data===void 0?void 0:_docSnap$data.actionLocks)||{});}),onSnapshot(query(collection(db,'artifacts',appId,'public','data','chatMessages')),snapshot=>{const messages=snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});setChatMessages(messages);}),onSnapshot(query(collection(db,'artifacts',appId,'public','data','activeUsers')),snapshot=>{const cutoffTime=Date.now()-60*1000;const users=snapshot.docs.map(d=>({id:d.id,...d.data()})).filter(u=>u.lastActive&&u.lastActive.toMillis()>cutoffTime);setActiveUsers(users);})];getDocs(getMajorEventsRef(db,appId)).then(historySnapshot=>{const historyData=historySnapshot.docs.map(doc=>doc.data().summary);setWorldHistory(historyData);});return()=>unsubscribes.forEach(unsub=>unsub());},[isAuthReady,db]);useEffect(()=>{if(!db||!userId||!nickname)return;const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{lastActive:serverTimestamp(),nickname:nickname||`플레이어 ${userId.substring(0,4)}`,profession:privatePlayerState.profession},{merge:true});const handleVisibilityChange=()=>{if(document.visibilityState==='visible'){setDoc(userDocRef,{lastActive:serverTimestamp()},{merge:true});}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>document.removeEventListener('visibilitychange',handleVisibilityChange);},[db,userId,nickname,privatePlayerState.profession]);useEffect(()=>{if(accordion.gameLog&&logEndRef.current)logEndRef.current.scrollIntoView({behavior:\"smooth\"});},[gameState.log,accordion.gameLog]);useEffect(()=>{if(accordion.chat&&chatEndRef.current)chatEndRef.current.scrollIntoView({behavior:\"smooth\"});},[chatMessages,accordion.chat]);const systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\n\n    ### 핵심 규칙 (매우 중요)\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어(들)의 시점에서, 그(들)이 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다. 여러 명이 참여하는 행동의 경우, 모두를 조명해야 합니다.\n    2.  **선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\n        -   **제거**: 특정 조건이 만족되지 않아 더 이상 유효하지 않은 선택지는 \\`choices_to_remove\\` 또는 \\`privateChoices_to_remove\\`에 \\`id\\`를 담아 제거하십시오. (예: NPC가 죽으면, 그와 대화하는 선택지 \\`id\\`를 제거)\n        -   **추가**: 새로운 사건이나 상황으로 인해 생긴 선택지는 \\`choices_to_add\\` 또는 \\`privateChoices_to_add\\`에 새로운 선택지 객체를 담아 추가하십시오.\n\n    ### JSON 출력 구조\n    {\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\n      \"groupStory\": \"같은 그룹 소속원들만 볼 수 있는 이야기. (없으면 null)\",\n      \"choices_to_add\": [\n        { \"id\": \"unique_id_for_new_choice\", \"text\": \"새로운 사건에 대한 선택지\", \"type\": \"event_driven\", \"location\": \"현재 장소\" }\n      ],\n      \"choices_to_remove\": [\"obsolete_choice_id_1\"],\n      \"privateChoices_to_add\": [\n        { \"id\": \"private_choice_id\", \"text\": \"오직 행동 주체만 가능한 선택지\", \"type\": \"private\" }\n      ],\n      \"privateChoices_to_remove\": [\"obsolete_private_choice_id\"],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\",\n        \"subtleClues\": [{\"location\": \"장소명\", \"clue\": \"새롭게 생성된 단서\"}]\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\n        \"knownClues\": [\"새롭게 알게 된 단서 목록\"],\n        \"groups\": [\"업데이트된 소속 그룹 목록\"],\n        \"npcRelations\": {\"가라크\": 55, \"엘라라\": -10}\n      }\n    }\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);setLlmRetryPrompt(promptData);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const backupApiKey=\"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\n\n      ### [행동 주체 (Actor)]\n      - 이름(들): ${promptData.actorDisplayNames.join(', ')}\n      - 정보: ${JSON.stringify(promptData.privateInfos)}\n\n      ### [선택 (Action)]\n      - \"${promptData.playerChoice}\"\n\n      ### [배경 정보]\n      - 세상의 주요 역사: ${promptData.worldHistory.length>0?promptData.worldHistory.join(', '):\"없음\"}\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 개인화된 최근 사건 로그: ${promptData.personalizedHistory}\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\n      - 세상에 남겨진 흔적들: ${JSON.stringify(promptData.sharedInfo.subtleClues)}\n\n      ### [주변 플레이어 (Observers)]\n      - 이들은 현재 턴의 관찰자이며, 직접 행동하지 않습니다.\n      - ${promptData.activeUsers.length>0?JSON.stringify(promptData.activeUsers):\"주변에 다른 플레이어가 없습니다.\"}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};const tryGeminiCall=async apiKey=>fetch(getApiUrl(apiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;let response=await tryGeminiCall(mainApiKey);if(!response.ok){response=await tryGeminiCall(backupApiKey);}if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}finally{setIsTextLoading(false);}};const sendChatMessage=async()=>{if(!db||!userId||!isAuthReady||!currentChatMessage.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message:currentChatMessage,timestamp:serverTimestamp()});setCurrentChatMessage('');}catch(error){console.error(\"Error sending chat message:\",error);}};const updatePublicState=async(llmResponse,playerChoice,actors)=>{const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:actors,action:playerChoice,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",privateStories:llmResponse.privateStory?{[actors[0].id]:llmResponse.privateStory}:{},groupStory:llmResponse.groupStory||null,timestamp:new Date()};await runTransaction(db,async transaction=>{var _llmResponse$sharedSt,_llmResponse$sharedSt2;const scenarioDoc=await transaction.get(mainScenarioRef);const currentData=scenarioDoc.exists()?scenarioDoc.data():getDefaultGameState();const newStoryLog=[...(currentData.storyLog||[]),newEvent];let newChoicePool=[...(currentData.choices||[])];if(llmResponse.choices_to_remove&&llmResponse.choices_to_remove.length>0){const idsToRemove=new Set(llmResponse.choices_to_remove);newChoicePool=newChoicePool.filter(choice=>!idsToRemove.has(choice.id));}if(llmResponse.choices_to_add&&llmResponse.choices_to_add.length>0){const newChoices=llmResponse.choices_to_add.filter(c=>c.id&&c.text);// 유효성 검사\nnewChoicePool.push(...newChoices);}const updateData={storyLog:newStoryLog,choices:newChoicePool,lastUpdate:serverTimestamp()};if((_llmResponse$sharedSt=llmResponse.sharedStateUpdates)!==null&&_llmResponse$sharedSt!==void 0&&_llmResponse$sharedSt.location){updateData['player.currentLocation']=llmResponse.sharedStateUpdates.location;}if((_llmResponse$sharedSt2=llmResponse.sharedStateUpdates)!==null&&_llmResponse$sharedSt2!==void 0&&_llmResponse$sharedSt2.subtleClues){updateData.subtleClues=llmResponse.sharedStateUpdates.subtleClues;}if(scenarioDoc.exists()){transaction.update(mainScenarioRef,updateData);}else{transaction.set(mainScenarioRef,{...getDefaultGameState(),...updateData});}});};const updatePrivateState=async llmResponse=>{const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);const docSnap=await getDoc(privateStateRef);const currentPrivateData=docSnap.exists()?docSnap.data():getDefaultPrivatePlayerState();const updates=llmResponse.privateStateUpdates?{...llmResponse.privateStateUpdates}:{};let newPrivateChoicePool=[...(currentPrivateData.choices||[])];if(llmResponse.privateChoices_to_remove&&llmResponse.privateChoices_to_remove.length>0){const idsToRemove=new Set(llmResponse.privateChoices_to_remove);newPrivateChoicePool=newPrivateChoicePool.filter(choice=>!idsToRemove.has(choice.id));}if(llmResponse.privateChoices_to_add&&llmResponse.privateChoices_to_add.length>0){const newChoices=llmResponse.privateChoices_to_add.filter(c=>c.id&&c.text);// 유효성 검사\nnewPrivateChoicePool.push(...newChoices);}updates.choices=newPrivateChoicePool;if(Object.keys(updates).length>0){await setDoc(privateStateRef,updates,{merge:true});}};const getActionScope=choiceText=>{const talkMatch=choiceText.match(/(.+)에게 말을 건다/);if(talkMatch)return`interaction:talk_to:${talkMatch[1].trim()}`;const lookMatch=choiceText.match(/(.+)을[를]? 살펴본다/);if(lookMatch)return`action:examine:${lookMatch[1].trim()}`;return`location:${gameState.player.currentLocation}`;};const getVisibleChoices=()=>{const masterChoicePool=gameState.choices||[];const privateChoicePool=privatePlayerState.choices||[];const visiblePublicChoices=masterChoicePool.filter(choice=>{if(choice.location&&choice.location!==gameState.player.currentLocation)return false;return true;});let allVisibleChoices=[...visiblePublicChoices,...privateChoicePool];// 현재 참여중인 협력 행동이 있다면, '대화 떠나기' 선택지 추가\nconst myLocks=Object.entries(actionLocks).filter(_ref=>{let[,p]=_ref;return Array.isArray(p)&&p.includes(userId);});myLocks.forEach(_ref2=>{let[scope]=_ref2;allVisibleChoices.push({id:`action:leave_conversation:${scope}`,text:`'${scope.split(':')[2]||'현재 활동'}'에서 벗어나기`,type:'action_leave'});});return allVisibleChoices.filter((choice,index,self)=>index===self.findIndex(c=>c.id===choice.id));};const handleLeaveConversation=async scope=>{const gameStatusRef=getGameStatusRef(db,appId);setIsTextLoading(true);try{await runTransaction(db,async transaction=>{const statusDoc=await transaction.get(gameStatusRef);if(!statusDoc.exists())return;const currentLocks=statusDoc.data().actionLocks||{};let participants=currentLocks[scope]||[];if(Array.isArray(participants)){const newParticipants=participants.filter(pId=>pId!==userId);if(newParticipants.length>0){transaction.update(gameStatusRef,{[`actionLocks.${scope}`]:newParticipants});}else{const newLocks={...currentLocks};delete newLocks[scope];transaction.set(gameStatusRef,{actionLocks:newLocks});}}});}catch(error){console.error(\"Error leaving conversation:\",error);setLlmError(\"대화에서 벗어나는 중 오류가 발생했습니다.\");}finally{setIsTextLoading(false);}};const handleCooperativeAction=async(scope,choiceObject)=>{const gameStatusRef=getGameStatusRef(db,appId);setCooperativeAction(null);try{await runTransaction(db,async transaction=>{const statusDoc=await transaction.get(gameStatusRef);const currentLocks=statusDoc.exists()?statusDoc.data().actionLocks:{};const participants=currentLocks[scope]||[];if(Array.isArray(participants)&&!participants.includes(userId)){transaction.update(gameStatusRef,{[`actionLocks.${scope}`]:[...participants,userId]});}});// 참여 후 바로 이어서 행동 수행\nawait performAction(choiceObject,true);}catch(error){console.error(\"Cooperative action failed\",error);setLlmError(\"대화 참여에 실패했습니다.\");}};const performAction=async function(choiceObject){let isCooperative=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const choiceText=choiceObject.text;const gameStatusRef=getGameStatusRef(db,appId);const scope=getActionScope(choiceText);setIsTextLoading(true);try{var _await$getDoc$data;const currentLocks=((_await$getDoc$data=(await getDoc(gameStatusRef)).data())===null||_await$getDoc$data===void 0?void 0:_await$getDoc$data.actionLocks)||{};let participants=[userId];if(isCooperative){participants=currentLocks[scope]||[userId];if(!participants.includes(userId))participants.push(userId);}else{await setDoc(gameStatusRef,{actionLocks:{...currentLocks,[scope]:[userId]}},{merge:true});}const actorDisplayNames=participants.map(pid=>getDisplayName(pid));const privateInfos={[userId]:privatePlayerState};const personalizedHistory=gameState.log.slice(-10).map(event=>{let historyEntry=`[${Array.isArray(event.actor)?event.actor.map(a=>a.displayName).join(','):event.actor.displayName}] ${event.action} -> ${event.publicStory}`;if(event.privateStories&&event.privateStories[userId]){historyEntry+=` (개인적으로 당신은 다음을 경험했다: ${event.privateStories[userId]})`;}return historyEntry;}).join('\\n');const promptData={actorDisplayNames,playerChoice:choiceText,sharedInfo:{currentLocation:gameState.player.currentLocation,subtleClues:gameState.subtleClues,currentChoices:gameState.choices},privateInfos:privateInfos,personalizedHistory:personalizedHistory,activeUsers:activeUsers.map(u=>({nickname:getDisplayName(u.id),profession:u.profession})).filter(u=>!participants.includes(u.id)),worldHistory:worldHistory};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){await updatePublicState(llmResponse,choiceText,participants.map(pid=>({id:pid,displayName:getDisplayName(pid)})));await updatePrivateState(llmResponse);}}catch(error){setLlmError(error.message);}finally{// 잠금 해제는 이제 '대화 떠나기' 등으로 개별적으로 처리되므로, 여기서 바로 해제하지 않음.\n// 단, 단독 행동이었다면 해제할 수 있음. 지금은 단순화를 위해 유지.\nsetIsTextLoading(false);}};const handleChoiceClick=async choiceObject=>{if(isTextLoading)return;setCooperativeAction(null);// [신규] '대화 떠나기'와 같은 특수 액션 처리\nif(choiceObject.type==='action_leave'){const scope=choiceObject.id.replace('action:leave_conversation:','');await handleLeaveConversation(scope);return;}if(!privatePlayerState.characterCreated){const choiceText=choiceObject.text;setIsTextLoading(true);const choiceKey=choiceText.split('.')[0];const selectedProfession=professions[choiceKey];if(selectedProfession){await setDoc(getPrivatePlayerStateRef(db,appId,userId),{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name,initialMotivation:selectedProfession.motivation},{merge:true});const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,privateStories:{[userId]:selectedProfession.motivation},timestamp:new Date()};await setDoc(mainScenarioRef,{...getDefaultGameState(),log:[newEvent]},{merge:true});}setIsTextLoading(false);return;}const scope=getActionScope(choiceObject.text);const lockedBy=actionLocks[scope];// 잠겨있고, 내가 참여자가 아닐 때 협력 제안\nif(lockedBy&&Array.isArray(lockedBy)&&!lockedBy.includes(userId)){setCooperativeAction({scope,choiceObject,lockedBy});return;}performAction(choiceObject,Array.isArray(lockedBy));};const toggleAccordion=key=>{setAccordion(prev=>({...prev,[key]:!prev[key]}));};const LlmErrorModal=()=>/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:llmError}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[llmRetryPrompt&&/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\",onClick:async()=>{setLlmError(null);if(llmRetryPrompt.playerChoice){await handleChoiceClick({id:'retry',text:llmRetryPrompt.playerChoice});}},children:\"\\uC7AC\\uC2DC\\uB3C4\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>{setLlmError(null);setLlmRetryPrompt(null);},children:\"\\uB2EB\\uAE30\"})]})]})});if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uC2DC\\uC791\\uD558\\uAE30\"})]})});}if(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\",children:[llmError&&/*#__PURE__*/_jsx(LlmErrorModal,{}),cooperativeAction&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-yellow-400\",children:\"\\uC9C4\\uD589 \\uC911\\uC778 \\uB300\\uD654\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-200\",children:[getDisplayName(cooperativeAction.lockedBy[0]),\"\\uB2D8\\uC774 \\uC774\\uBBF8 \",cooperativeAction.choiceObject.text,\" \\uD589\\uB3D9\\uC744 \\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4. \\uCC38\\uC5EC\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md\",onClick:()=>handleCooperativeAction(cooperativeAction.scope,cooperativeAction.choiceObject),children:\"\\uB300\\uD654 \\uCC38\\uC5EC\\uD558\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setCooperativeAction(null),children:\"\\uB098\\uC911\\uC5D0 \\uD558\\uAE30\"})]})]})}),showResetModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\u26A0\\uFE0F \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB97C \\uCD08\\uAE30\\uD654\\uD560\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:\"\\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA8\\uB4E0 \\uC2DC\\uB098\\uB9AC\\uC624, \\uB85C\\uADF8, \\uC720\\uC800, \\uCC44\\uD305 \\uB370\\uC774\\uD130\\uAC00 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setShowResetModal(false),disabled:isResetting,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\",onClick:resetAllGameData,disabled:isResetting,children:isResetting?'초기화 중...':'초기화'})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('gameLog'),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-gray-100\",children:\"\\uAC8C\\uC784 \\uB85C\\uADF8\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.gameLog?'▼':'▲'})]}),accordion.gameLog&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\",onClick:()=>setShowResetModal(true),children:\"\\uC804\\uCCB4 \\uB370\\uC774\\uD130 \\uCD08\\uAE30\\uD654\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",style:{maxHeight:'24rem'},children:[!privatePlayerState.characterCreated&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50 text-center\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-yellow-300 font-semibold italic text-lg\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"})]}),gameState.log.map((event,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50\",children:[event.actor&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[Array.isArray(event.actor)?event.actor.map(a=>a.displayName).join(', '):event.actor.displayName,\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",dangerouslySetInnerHTML:{__html:(event.publicStory||'').replace(/\\n/g,'<br />')}}),event.groupStory&&privatePlayerState.groups.length>0&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-green-900/30 border-l-4 border-green-400 text-green-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uADF8\\uB8F9 \\uC774\\uC57C\\uAE30] \"}),event.groupStory]}),event.privateStories&&event.privateStories[userId]&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uB2F9\\uC2E0\\uB9CC \\uC544\\uB294 \\uC0AC\\uC2E4] \"}),event.privateStories[userId]]})]},index)),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:privatePlayerState.characterCreated?getVisibleChoices().map(choice=>{const scope=getActionScope(choice.text);const lockedBy=actionLocks[scope];const isLocked=lockedBy&&Array.isArray(lockedBy)&&!lockedBy.includes(userId);let buttonStyle='bg-blue-600 hover:bg-blue-700';let prefix='';if(choice.type==='private'||choice.type==='group'){buttonStyle='bg-green-600 hover:bg-green-700';prefix='[개인/그룹] ';}else if(choice.type==='action_leave'){buttonStyle='bg-red-600 hover:bg-red-700';prefix='[행동 종료] ';}if(isLocked){buttonStyle='bg-yellow-600 hover:bg-yellow-700';prefix=`[${getDisplayName(lockedBy[0])}와 함께하기] `;}return/*#__PURE__*/_jsxs(\"button\",{className:`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 ${buttonStyle} text-white`,onClick:()=>handleChoiceClick(choice),disabled:isTextLoading,children:[prefix,choice.text]},choice.id);}):Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick({id:key,text:`${key}. ${professions[key].name}`}),disabled:isTextLoading,className:\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300\",children:`${key}. ${professions[key].name}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('playerInfo'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.playerInfo?'▼':'▲'})]}),accordion.playerInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",privatePlayerState.profession||'미정']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",gameState.player.currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",privatePlayerState.stats.strength,\") \\uC9C0\\uB2A5(\",privatePlayerState.stats.intelligence,\") \\uBBFC\\uCCA9(\",privatePlayerState.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",privatePlayerState.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",privatePlayerState.inventory.join(', ')||'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",privatePlayerState.activeQuests.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2E8\\uC11C:\"}),\" \",privatePlayerState.knownClues.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-green-300\",children:\"\\uC18C\\uC18D \\uADF8\\uB8F9:\"}),\" \",privatePlayerState.groups.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-yellow-300\",children:\"NPC \\uAD00\\uACC4:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-disc list-inside ml-4\",children:Object.entries(privatePlayerState.npcRelations).length>0?Object.entries(privatePlayerState.npcRelations).map(_ref3=>{let[name,value]=_ref3;return/*#__PURE__*/_jsx(\"li\",{children:`${name}: ${value}`},name);}):/*#__PURE__*/_jsx(\"li\",{children:\"\\uC54C\\uB824\\uC9C4 \\uAD00\\uACC4 \\uC5C6\\uC74C\"})})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('users'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.users?'▼':'▲'})]}),accordion.users&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate p-1 rounded-md\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-300\",children:getDisplayName(user.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\" (\",user.profession||'모험가',\")\"]})]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('chat'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.chat?'▼':'▲'})]}),accordion.chat&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex flex-col h-64\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\",children:[chatMessages.map(msg=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",msg.message]})},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\",value:currentChatMessage,onChange:e=>setCurrentChatMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&sendChatMessage(),disabled:!isAuthReady}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\",onClick:sendChatMessage,disabled:!isAuthReady||!currentChatMessage.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","initialAuthToken","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getGameStatusRef","getMajorEventsRef","getDefaultGameState","phase","log","choices","id","text","type","location","player","currentLocation","subtleClues","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","reputation","activeQuests","companions","knownClues","characterCreated","profession","groups","npcRelations","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","isTextLoading","setIsTextLoading","activeUsers","setActiveUsers","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","actionLocks","setActionLocks","setDb","auth","setAuth","setUserId","isAuthReady","setIsAuthReady","logEndRef","chatEndRef","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","accordion","setAccordion","gameLog","chat","users","playerInfo","showResetModal","setShowResetModal","isResetting","setIsResetting","llmError","setLlmError","llmRetryPrompt","setLlmRetryPrompt","isLoading","setIsLoading","worldHistory","setWorldHistory","cooperativeAction","setCooperativeAction","handleNicknameSubmit","trim","finalNickname","setItem","userDocRef","merge","getDisplayName","uid","substring","user","find","u","resetAllGameData","collectionsToDelete","colRef","snapshot","docSnap","docs","ref","usersColRef","usersSnapshot","userDoc","playerStateColRef","playerStateSnapshot","stateDoc","clear","console","e","error","window","reload","app","firestoreDb","firebaseAuth","unsubscribeAuth","privateStateRef","then","exists","unsubscribe","data","err","unsubscribes","snap","prev","_data$player","storyLog","_docSnap$data","messages","map","d","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","cutoffTime","Date","now","filter","lastActive","historySnapshot","historyData","summary","forEach","unsub","handleVisibilityChange","document","visibilityState","addEventListener","removeEventListener","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","backupApiKey","getApiUrl","userPrompt","actorDisplayNames","join","JSON","stringify","privateInfos","playerChoice","length","sharedInfo","personalizedHistory","currentChoices","payload","contents","role","parts","tryGeminiCall","fetch","method","headers","body","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","message","sendChatMessage","chatCollectionRef","displayName","updatePublicState","llmResponse","actors","mainScenarioRef","newEvent","actor","action","publicStory","story","privateStories","privateStory","groupStory","transaction","_llmResponse$sharedSt","_llmResponse$sharedSt2","scenarioDoc","get","currentData","newStoryLog","newChoicePool","choices_to_remove","idsToRemove","Set","choice","has","choices_to_add","newChoices","c","push","updateData","lastUpdate","sharedStateUpdates","update","set","updatePrivateState","currentPrivateData","updates","privateStateUpdates","newPrivateChoicePool","privateChoices_to_remove","privateChoices_to_add","Object","keys","getActionScope","choiceText","talkMatch","lookMatch","getVisibleChoices","masterChoicePool","privateChoicePool","visiblePublicChoices","allVisibleChoices","myLocks","entries","_ref","p","Array","isArray","includes","_ref2","scope","split","index","self","findIndex","handleLeaveConversation","gameStatusRef","statusDoc","currentLocks","participants","newParticipants","pId","newLocks","handleCooperativeAction","choiceObject","performAction","isCooperative","arguments","undefined","_await$getDoc$data","pid","slice","event","historyEntry","handleChoiceClick","replace","choiceKey","selectedProfession","lockedBy","toggleAccordion","key","LlmErrorModal","className","children","onClick","placeholder","value","onChange","target","onKeyDown","autoFocus","disabled","style","maxHeight","dangerouslySetInnerHTML","__html","isLocked","buttonStyle","prefix","_ref3","msg","onKeyPress"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  signInWithCustomToken,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  runTransaction\r\n} from 'firebase/firestore';\r\n\r\n// ====================================================================\r\n// Firebase configuration information - 수정 금지\r\nconst defaultFirebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\n\r\n// 수정금지\r\nconst firebaseConfig = defaultFirebaseConfig;\r\nconst appId = firebaseConfig.projectId;\r\nconst initialAuthToken = null;\r\n// ====================================================================\r\n\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\n// Firestore 경로 유틸\r\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\r\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\r\nconst getGameStatusRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\nconst getMajorEventsRef = (db, appId) => collection(db, 'artifacts', appId, 'public', 'data', 'majorEvents');\r\n\r\n\r\n// 상태 초기화 유틸\r\nconst getDefaultGameState = () => ({\r\n  phase: 'playing',\r\n  log: [],\r\n  choices: [\r\n    { id: 'inn_look_around', text: \"여관을 둘러본다\", type: 'location_default', location: '방랑자의 안식처' },\r\n    { id: 'inn_talk_to_owner', text: \"여관 주인에게 말을 건다\", type: 'location_default', location: '방랑자의 안식처' },\r\n    { id: 'inn_talk_to_adventurer', text: \"다른 모험가에게 말을 건다\", type: 'location_default', location: '방랑자의 안식처' },\r\n  ],\r\n  player: {\r\n    currentLocation: '방랑자의 안식처',\r\n  },\r\n  subtleClues: [],\r\n});\r\n\r\nconst getDefaultPrivatePlayerState = () => ({\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n    inventory: [],\r\n    initialMotivation: '',\r\n    reputation: {},\r\n    activeQuests: [],\r\n    companions: [],\r\n    knownClues: [],\r\n    characterCreated: false,\r\n    profession: '',\r\n    choices: [],\r\n    groups: [],\r\n    npcRelations: {},\r\n});\r\n\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(getDefaultGameState());\r\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\r\n  const [actionLocks, setActionLocks] = useState({});\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const logEndRef = useRef(null);\r\n  const chatEndRef = useRef(null);\r\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\r\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\r\n  const [nicknameInput, setNicknameInput] = useState('');\r\n  const [accordion, setAccordion] = useState({ gameLog: true, chat: true, users: true, playerInfo: true });\r\n  const [showResetModal, setShowResetModal] = useState(false);\r\n  const [isResetting, setIsResetting] = useState(false);\r\n  const [llmError, setLlmError] = useState(null);\r\n  const [llmRetryPrompt, setLlmRetryPrompt] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [worldHistory, setWorldHistory] = useState([]);\r\n  const [cooperativeAction, setCooperativeAction] = useState(null);\r\n\r\n  const handleNicknameSubmit = () => {\r\n    if (nicknameInput.trim()) {\r\n      const finalNickname = nicknameInput.trim();\r\n      setNickname(finalNickname);\r\n      localStorage.setItem('nickname', finalNickname);\r\n      setShowNicknameModal(false);\r\n      if (userId && db) {\r\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n          setDoc(userDocRef, { nickname: finalNickname }, { merge: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDisplayName = (uid) => {\r\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\r\n    const user = activeUsers.find(u => u.id === uid);\r\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\r\n  };\r\n\r\n  const resetAllGameData = async () => {\r\n    if (!db || !isAuthReady) return;\r\n    setIsResetting(true);\r\n    try {\r\n        const collectionsToDelete = [\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages'),\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers'),\r\n            getMajorEventsRef(db, appId)\r\n        ];\r\n\r\n        for (const colRef of collectionsToDelete) {\r\n            const snapshot = await getDocs(colRef);\r\n            for (const docSnap of snapshot.docs) {\r\n                await deleteDoc(docSnap.ref);\r\n            }\r\n        }\r\n\r\n        const usersColRef = collection(db, 'artifacts', appId, 'users');\r\n        const usersSnapshot = await getDocs(usersColRef);\r\n        for (const userDoc of usersSnapshot.docs) {\r\n            const playerStateColRef = collection(db, 'artifacts', appId, 'users', userDoc.id, 'playerState');\r\n            const playerStateSnapshot = await getDocs(playerStateColRef);\r\n            for (const stateDoc of playerStateSnapshot.docs) {\r\n                await deleteDoc(stateDoc.ref);\r\n            }\r\n            await deleteDoc(doc(db, 'artifacts', appId, 'users', userDoc.id));\r\n        }\r\n\r\n        await deleteDoc(getMainScenarioRef(db, appId));\r\n        await deleteDoc(getGameStatusRef(db, appId));\r\n        \r\n        localStorage.clear();\r\n\r\n        setGameState(getDefaultGameState());\r\n        setPrivatePlayerState(getDefaultPrivatePlayerState());\r\n        setChatMessages([]);\r\n        setActionLocks({});\r\n\r\n        console.log(\"모든 서버 및 클라이언트 데이터가 성공적으로 초기화되었습니다.\");\r\n\r\n    } catch (e) {\r\n        console.error(\"전체 데이터 초기화 중 오류 발생:\", e);\r\n    } finally {\r\n      setIsResetting(false);\r\n      setShowResetModal(false);\r\n      window.location.reload();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firebaseAuth = getAuth(app);\r\n      setDb(firestoreDb);\r\n      setAuth(firebaseAuth);\r\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\r\n        if (user) {\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n            await (initialAuthToken ? signInWithCustomToken(firebaseAuth, initialAuthToken) : signInAnonymously(firebaseAuth));\r\n        }\r\n      });\r\n      return () => unsubscribeAuth();\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error:\", error);\r\n      setLlmError(\"Firebase 초기화에 실패했습니다.\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || !db || !userId) return;\r\n\r\n    const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n    \r\n    getDoc(privateStateRef).then(docSnap => {\r\n        if (!docSnap.exists()) {\r\n            setDoc(privateStateRef, getDefaultPrivatePlayerState());\r\n        }\r\n    });\r\n\r\n    const unsubscribe = onSnapshot(privateStateRef, (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        setPrivatePlayerState({ ...getDefaultPrivatePlayerState(), ...snapshot.data() });\r\n      }\r\n      if (isLoading) setIsLoading(false);\r\n    }, (err) => {\r\n      console.error(\"Private state listener error:\", err);\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [isAuthReady, db, userId]);\r\n\r\n  useEffect(() => {\r\n    if (!isAuthReady || !db) return;\r\n\r\n    const unsubscribes = [\r\n      onSnapshot(getMainScenarioRef(db, appId), (snap) => {\r\n        if (snap.exists()) {\r\n          const data = snap.data();\r\n          setGameState(prev => ({\r\n            ...prev,\r\n            log: data.storyLog || [],\r\n            choices: data.choices || [],\r\n            player: { ...prev.player, currentLocation: data.player?.currentLocation || prev.player.currentLocation },\r\n            subtleClues: data.subtleClues || []\r\n          }));\r\n        } else {\r\n          setGameState(getDefaultGameState());\r\n        }\r\n      }),\r\n      onSnapshot(getGameStatusRef(db, appId), (docSnap) => {\r\n        setActionLocks(docSnap.data()?.actionLocks || {});\r\n      }),\r\n      onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages')), (snapshot) => {\r\n        const messages = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n        setChatMessages(messages);\r\n      }),\r\n      onSnapshot(query(collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers')), (snapshot) => {\r\n        const cutoffTime = Date.now() - 60 * 1000;\r\n        const users = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).filter(u => u.lastActive && u.lastActive.toMillis() > cutoffTime);\r\n        setActiveUsers(users);\r\n      })\r\n    ];\r\n\r\n    getDocs(getMajorEventsRef(db, appId)).then(historySnapshot => {\r\n      const historyData = historySnapshot.docs.map(doc => doc.data().summary);\r\n      setWorldHistory(historyData);\r\n    });\r\n\r\n    return () => unsubscribes.forEach(unsub => unsub());\r\n  }, [isAuthReady, db]);\r\n\r\n  useEffect(() => {\r\n    if (!db || !userId || !nickname) return;\r\n    const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n    setDoc(userDocRef, {\r\n      lastActive: serverTimestamp(),\r\n      nickname: nickname || `플레이어 ${userId.substring(0, 4)}`,\r\n      profession: privatePlayerState.profession,\r\n    }, { merge: true });\r\n\r\n    const handleVisibilityChange = () => {\r\n      if (document.visibilityState === 'visible') {\r\n        setDoc(userDocRef, { lastActive: serverTimestamp() }, { merge: true });\r\n      }\r\n    };\r\n    document.addEventListener('visibilitychange', handleVisibilityChange);\r\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n  }, [db, userId, nickname, privatePlayerState.profession]);\r\n\r\n  useEffect(() => {\r\n    if (accordion.gameLog && logEndRef.current) logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [gameState.log, accordion.gameLog]);\r\n\r\n  useEffect(() => {\r\n    if (accordion.chat && chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatMessages, accordion.chat]);\r\n\r\n  const systemPrompt = `\r\n    ### 페르소나 (Persona)\r\n    당신은 세계 최고의 TRPG '게임 마스터(GM)'입니다. 당신의 임무는 살아 숨 쉬는 세계를 창조하고, 플레이어의 선택에 따라 '선택지 풀'을 유기적으로 관리하는 것입니다.\r\n\r\n    ### 핵심 규칙 (매우 중요)\r\n    1.  **행동 주체 원칙**: 모든 서사는 반드시 '[행동 주체]'로 명시된 플레이어(들)의 시점에서, 그(들)이 한 '[선택]'의 직접적인 결과로만 서술되어야 합니다. 여러 명이 참여하는 행동의 경우, 모두를 조명해야 합니다.\r\n    2.  **선택지 풀 관리**: 당신은 선택지 목록 전체를 교체하는 것이 아니라, 특정 선택지를 '추가(add)'하거나 '제거(remove)'하는 명령을 내려야 합니다.\r\n        -   **제거**: 특정 조건이 만족되지 않아 더 이상 유효하지 않은 선택지는 \\`choices_to_remove\\` 또는 \\`privateChoices_to_remove\\`에 \\`id\\`를 담아 제거하십시오. (예: NPC가 죽으면, 그와 대화하는 선택지 \\`id\\`를 제거)\r\n        -   **추가**: 새로운 사건이나 상황으로 인해 생긴 선택지는 \\`choices_to_add\\` 또는 \\`privateChoices_to_add\\`에 새로운 선택지 객체를 담아 추가하십시오.\r\n\r\n    ### JSON 출력 구조\r\n    {\r\n      \"story\": \"공유된 사건에 대한 3인칭 서사.\",\r\n      \"privateStory\": \"행동 주체만 볼 수 있는 2인칭 서사.\",\r\n      \"groupStory\": \"같은 그룹 소속원들만 볼 수 있는 이야기. (없으면 null)\",\r\n      \"choices_to_add\": [\r\n        { \"id\": \"unique_id_for_new_choice\", \"text\": \"새로운 사건에 대한 선택지\", \"type\": \"event_driven\", \"location\": \"현재 장소\" }\r\n      ],\r\n      \"choices_to_remove\": [\"obsolete_choice_id_1\"],\r\n      \"privateChoices_to_add\": [\r\n        { \"id\": \"private_choice_id\", \"text\": \"오직 행동 주체만 가능한 선택지\", \"type\": \"private\" }\r\n      ],\r\n      \"privateChoices_to_remove\": [\"obsolete_private_choice_id\"],\r\n      \"sharedStateUpdates\": {\r\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함.\",\r\n        \"subtleClues\": [{\"location\": \"장소명\", \"clue\": \"새롭게 생성된 단서\"}]\r\n      },\r\n      \"privateStateUpdates\": {\r\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\r\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, \"agility\": 10, \"charisma\": 10 },\r\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\r\n        \"knownClues\": [\"새롭게 알게 된 단서 목록\"],\r\n        \"groups\": [\"업데이트된 소속 그룹 목록\"],\r\n        \"npcRelations\": {\"가라크\": 55, \"엘라라\": -10}\r\n      }\r\n    }\r\n  `;\r\n\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    setLlmRetryPrompt(promptData);\r\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\r\n    const backupApiKey = \"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";\r\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n\r\n    const userPrompt = `\r\n      [상황 분석 요청]\r\n      아래 정보를 바탕으로, '[행동 주체]'가 '[선택]'을 한 결과에 대한 이야기를 생성하고 '선택지 풀'을 관리해주십시오.\r\n\r\n      ### [행동 주체 (Actor)]\r\n      - 이름(들): ${promptData.actorDisplayNames.join(', ')}\r\n      - 정보: ${JSON.stringify(promptData.privateInfos)}\r\n\r\n      ### [선택 (Action)]\r\n      - \"${promptData.playerChoice}\"\r\n\r\n      ### [배경 정보]\r\n      - 세상의 주요 역사: ${promptData.worldHistory.length > 0 ? promptData.worldHistory.join(', ') : \"없음\"}\r\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\r\n      - 개인화된 최근 사건 로그: ${promptData.personalizedHistory}\r\n      - 현재 공개 선택지 풀: ${JSON.stringify(promptData.sharedInfo.currentChoices)}\r\n      - 세상에 남겨진 흔적들: ${JSON.stringify(promptData.sharedInfo.subtleClues)}\r\n\r\n      ### [주변 플레이어 (Observers)]\r\n      - 이들은 현재 턴의 관찰자이며, 직접 행동하지 않습니다.\r\n      - ${promptData.activeUsers.length > 0 ? JSON.stringify(promptData.activeUsers) : \"주변에 다른 플레이어가 없습니다.\"}\r\n    `;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\r\n\r\n    const tryGeminiCall = async (apiKey) => fetch(getApiUrl(apiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n\r\n    try {\r\n      let response = await tryGeminiCall(mainApiKey);\r\n      if (!response.ok) { response = await tryGeminiCall(backupApiKey); }\r\n      if (!response.ok) { throw new Error(`HTTP error! status: ${response.status}`); }\r\n      const result = await response.json();\r\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\r\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\r\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\r\n      throw new Error(\"Valid JSON object not found in LLM response.\");\r\n    } catch (error) {\r\n      console.error(\"LLM API call error:\", error);\r\n      setLlmError(error.message || 'LLM 호출 실패');\r\n      return null;\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = async () => {\r\n    if (!db || !userId || !isAuthReady || !currentChatMessage.trim()) return;\r\n    try {\r\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message: currentChatMessage, timestamp: serverTimestamp() });\r\n      setCurrentChatMessage('');\r\n    } catch (error) {\r\n      console.error(\"Error sending chat message:\", error);\r\n    }\r\n  };\r\n\r\n  const updatePublicState = async (llmResponse, playerChoice, actors) => {\r\n    const mainScenarioRef = getMainScenarioRef(db, appId);\r\n    const newEvent = {\r\n        actor: actors,\r\n        action: playerChoice,\r\n        publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\r\n        privateStories: llmResponse.privateStory ? { [actors[0].id]: llmResponse.privateStory } : {},\r\n        groupStory: llmResponse.groupStory || null,\r\n        timestamp: new Date()\r\n    };\r\n  \r\n    await runTransaction(db, async (transaction) => {\r\n        const scenarioDoc = await transaction.get(mainScenarioRef);\r\n        const currentData = scenarioDoc.exists() ? scenarioDoc.data() : getDefaultGameState();\r\n        const newStoryLog = [...(currentData.storyLog || []), newEvent];\r\n        let newChoicePool = [...(currentData.choices || [])];\r\n  \r\n        if (llmResponse.choices_to_remove && llmResponse.choices_to_remove.length > 0) {\r\n          const idsToRemove = new Set(llmResponse.choices_to_remove);\r\n          newChoicePool = newChoicePool.filter(choice => !idsToRemove.has(choice.id));\r\n        }\r\n        if (llmResponse.choices_to_add && llmResponse.choices_to_add.length > 0) {\r\n          const newChoices = llmResponse.choices_to_add.filter(c => c.id && c.text); // 유효성 검사\r\n          newChoicePool.push(...newChoices);\r\n        }\r\n\r\n        const updateData = {\r\n          storyLog: newStoryLog,\r\n          choices: newChoicePool,\r\n          lastUpdate: serverTimestamp()\r\n        };\r\n  \r\n        if (llmResponse.sharedStateUpdates?.location) {\r\n          updateData['player.currentLocation'] = llmResponse.sharedStateUpdates.location;\r\n        }\r\n        if (llmResponse.sharedStateUpdates?.subtleClues) {\r\n          updateData.subtleClues = llmResponse.sharedStateUpdates.subtleClues;\r\n        }\r\n        \r\n        if (scenarioDoc.exists()) { transaction.update(mainScenarioRef, updateData); } \r\n        else { transaction.set(mainScenarioRef, { ...getDefaultGameState(), ...updateData }); }\r\n    });\r\n  };\r\n  \r\n  const updatePrivateState = async (llmResponse) => {\r\n    const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n    const docSnap = await getDoc(privateStateRef);\r\n    const currentPrivateData = docSnap.exists() ? docSnap.data() : getDefaultPrivatePlayerState();\r\n    \r\n    const updates = llmResponse.privateStateUpdates ? { ...llmResponse.privateStateUpdates } : {};\r\n\r\n    let newPrivateChoicePool = [...(currentPrivateData.choices || [])];\r\n\r\n    if (llmResponse.privateChoices_to_remove && llmResponse.privateChoices_to_remove.length > 0) {\r\n        const idsToRemove = new Set(llmResponse.privateChoices_to_remove);\r\n        newPrivateChoicePool = newPrivateChoicePool.filter(choice => !idsToRemove.has(choice.id));\r\n    }\r\n    if (llmResponse.privateChoices_to_add && llmResponse.privateChoices_to_add.length > 0) {\r\n      const newChoices = llmResponse.privateChoices_to_add.filter(c => c.id && c.text); // 유효성 검사\r\n      newPrivateChoicePool.push(...newChoices);\r\n    }\r\n\r\n    updates.choices = newPrivateChoicePool;\r\n\r\n    if (Object.keys(updates).length > 0) {\r\n      await setDoc(privateStateRef, updates, { merge: true });\r\n    }\r\n  };\r\n\r\n  const getActionScope = (choiceText) => {\r\n    const talkMatch = choiceText.match(/(.+)에게 말을 건다/);\r\n    if (talkMatch) return `interaction:talk_to:${talkMatch[1].trim()}`;\r\n    \r\n    const lookMatch = choiceText.match(/(.+)을[를]? 살펴본다/);\r\n    if (lookMatch) return `action:examine:${lookMatch[1].trim()}`;\r\n\r\n    return `location:${gameState.player.currentLocation}`;\r\n  };\r\n\r\n  const getVisibleChoices = () => {\r\n    const masterChoicePool = gameState.choices || [];\r\n    const privateChoicePool = privatePlayerState.choices || [];\r\n\r\n    const visiblePublicChoices = masterChoicePool.filter(choice => {\r\n      if (choice.location && choice.location !== gameState.player.currentLocation) return false;\r\n      return true;\r\n    });\r\n    \r\n    let allVisibleChoices = [...visiblePublicChoices, ...privateChoicePool];\r\n\r\n    // 현재 참여중인 협력 행동이 있다면, '대화 떠나기' 선택지 추가\r\n    const myLocks = Object.entries(actionLocks).filter(([, p]) => Array.isArray(p) && p.includes(userId));\r\n    myLocks.forEach(([scope]) => {\r\n      allVisibleChoices.push({\r\n        id: `action:leave_conversation:${scope}`,\r\n        text: `'${scope.split(':')[2] || '현재 활동'}'에서 벗어나기`,\r\n        type: 'action_leave'\r\n      });\r\n    });\r\n    \r\n    return allVisibleChoices.filter((choice, index, self) =>\r\n        index === self.findIndex((c) => c.id === choice.id)\r\n    );\r\n  };\r\n\r\n  const handleLeaveConversation = async (scope) => {\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    setIsTextLoading(true);\r\n    try {\r\n        await runTransaction(db, async (transaction) => {\r\n            const statusDoc = await transaction.get(gameStatusRef);\r\n            if (!statusDoc.exists()) return;\r\n\r\n            const currentLocks = statusDoc.data().actionLocks || {};\r\n            let participants = currentLocks[scope] || [];\r\n            \r\n            if (Array.isArray(participants)) {\r\n                const newParticipants = participants.filter(pId => pId !== userId);\r\n                if (newParticipants.length > 0) {\r\n                    transaction.update(gameStatusRef, { [`actionLocks.${scope}`]: newParticipants });\r\n                } else {\r\n                    const newLocks = { ...currentLocks };\r\n                    delete newLocks[scope];\r\n                    transaction.set(gameStatusRef, { actionLocks: newLocks });\r\n                }\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Error leaving conversation:\", error);\r\n        setLlmError(\"대화에서 벗어나는 중 오류가 발생했습니다.\");\r\n    } finally {\r\n        setIsTextLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handleCooperativeAction = async (scope, choiceObject) => {\r\n    const gameStatusRef = getGameStatusRef(db, appId);\r\n    setCooperativeAction(null);\r\n\r\n    try {\r\n        await runTransaction(db, async (transaction) => {\r\n            const statusDoc = await transaction.get(gameStatusRef);\r\n            const currentLocks = statusDoc.exists() ? statusDoc.data().actionLocks : {};\r\n            const participants = currentLocks[scope] || [];\r\n            if(Array.isArray(participants) && !participants.includes(userId)) {\r\n                transaction.update(gameStatusRef, { [`actionLocks.${scope}`]: [...participants, userId] });\r\n            }\r\n        });\r\n        \r\n        // 참여 후 바로 이어서 행동 수행\r\n        await performAction(choiceObject, true);\r\n\r\n    } catch(error) {\r\n        console.error(\"Cooperative action failed\", error);\r\n        setLlmError(\"대화 참여에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  const performAction = async (choiceObject, isCooperative = false) => {\r\n      const choiceText = choiceObject.text;\r\n      const gameStatusRef = getGameStatusRef(db, appId);\r\n      const scope = getActionScope(choiceText);\r\n\r\n      setIsTextLoading(true);\r\n      try {\r\n          const currentLocks = (await getDoc(gameStatusRef)).data()?.actionLocks || {};\r\n          let participants = [userId];\r\n\r\n          if (isCooperative) {\r\n              participants = currentLocks[scope] || [userId];\r\n              if(!participants.includes(userId)) participants.push(userId);\r\n          } else {\r\n              await setDoc(gameStatusRef, { actionLocks: { ...currentLocks, [scope]: [userId] } }, { merge: true });\r\n          }\r\n\r\n          const actorDisplayNames = participants.map(pid => getDisplayName(pid));\r\n          const privateInfos = { [userId]: privatePlayerState };\r\n\r\n          const personalizedHistory = gameState.log.slice(-10).map(event => {\r\n            let historyEntry = `[${Array.isArray(event.actor) ? event.actor.map(a => a.displayName).join(',') : event.actor.displayName}] ${event.action} -> ${event.publicStory}`;\r\n            if(event.privateStories && event.privateStories[userId]) {\r\n                historyEntry += ` (개인적으로 당신은 다음을 경험했다: ${event.privateStories[userId]})`;\r\n            }\r\n            return historyEntry;\r\n          }).join('\\n');\r\n\r\n          const promptData = {\r\n              actorDisplayNames,\r\n              playerChoice: choiceText,\r\n              sharedInfo: { \r\n                  currentLocation: gameState.player.currentLocation, \r\n                  subtleClues: gameState.subtleClues,\r\n                  currentChoices: gameState.choices \r\n              },\r\n              privateInfos: privateInfos,\r\n              personalizedHistory: personalizedHistory,\r\n              activeUsers: activeUsers.map(u => ({ nickname: getDisplayName(u.id), profession: u.profession })).filter(u => !participants.includes(u.id)),\r\n              worldHistory: worldHistory,\r\n          };\r\n\r\n          const llmResponse = await callGeminiTextLLM(promptData);\r\n\r\n          if (llmResponse) {\r\n              await updatePublicState(llmResponse, choiceText, participants.map(pid => ({ id: pid, displayName: getDisplayName(pid) })));\r\n              await updatePrivateState(llmResponse);\r\n          }\r\n      } catch (error) {\r\n          setLlmError(error.message);\r\n      } finally {\r\n          // 잠금 해제는 이제 '대화 떠나기' 등으로 개별적으로 처리되므로, 여기서 바로 해제하지 않음.\r\n          // 단, 단독 행동이었다면 해제할 수 있음. 지금은 단순화를 위해 유지.\r\n          setIsTextLoading(false);\r\n      }\r\n  };\r\n\r\n  const handleChoiceClick = async (choiceObject) => {\r\n    if (isTextLoading) return;\r\n    setCooperativeAction(null);\r\n\r\n    // [신규] '대화 떠나기'와 같은 특수 액션 처리\r\n    if (choiceObject.type === 'action_leave') {\r\n        const scope = choiceObject.id.replace('action:leave_conversation:', '');\r\n        await handleLeaveConversation(scope);\r\n        return;\r\n    }\r\n\r\n    if (!privatePlayerState.characterCreated) {\r\n        const choiceText = choiceObject.text;\r\n        setIsTextLoading(true);\r\n        const choiceKey = choiceText.split('.')[0];\r\n        const selectedProfession = professions[choiceKey];\r\n        if (selectedProfession) {\r\n            await setDoc(getPrivatePlayerStateRef(db, appId, userId), {\r\n                ...getDefaultPrivatePlayerState(), characterCreated: true, profession: selectedProfession.name, initialMotivation: selectedProfession.motivation,\r\n            }, { merge: true });\r\n            \r\n            const mainScenarioRef = getMainScenarioRef(db, appId);\r\n            const newEvent = {\r\n                actor: { id: userId, displayName: getDisplayName(userId) }, action: \"여관에 들어선다\",\r\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,\r\n                privateStories: { [userId]: selectedProfession.motivation }, timestamp: new Date()\r\n            };\r\n            await setDoc(mainScenarioRef, { ...getDefaultGameState(), log: [newEvent] }, { merge: true });\r\n        }\r\n        setIsTextLoading(false);\r\n        return;\r\n    }\r\n\r\n    const scope = getActionScope(choiceObject.text);\r\n    const lockedBy = actionLocks[scope];\r\n\r\n    // 잠겨있고, 내가 참여자가 아닐 때 협력 제안\r\n    if (lockedBy && Array.isArray(lockedBy) && !lockedBy.includes(userId)) {\r\n      setCooperativeAction({ scope, choiceObject, lockedBy });\r\n      return;\r\n    }\r\n    \r\n    performAction(choiceObject, Array.isArray(lockedBy));\r\n  };\r\n\r\n  const toggleAccordion = (key) => { setAccordion(prev => ({ ...prev, [key]: !prev[key] })); };\r\n\r\n  const LlmErrorModal = () => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\r\n        <h3 className=\"text-xl font-bold text-red-400\">오류가 발생했습니다</h3>\r\n        <p className=\"text-gray-200\">{llmError}</p>\r\n        <div className=\"flex justify-center gap-4\">\r\n          {llmRetryPrompt && (\r\n            <button\r\n              className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md\"\r\n              onClick={async () => {\r\n                setLlmError(null);\r\n                if (llmRetryPrompt.playerChoice) {\r\n                  await handleChoiceClick({ id: 'retry', text: llmRetryPrompt.playerChoice });\r\n                }\r\n              }}\r\n            >\r\n              재시도\r\n            </button>\r\n          )}\r\n          <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => { setLlmError(null); setLlmRetryPrompt(null); }}>\r\n            닫기\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  if (showNicknameModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">닉네임을 입력하세요</h3>\r\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\r\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>시작하기</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">데이터를 불러오는 중...</span></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      {llmError && <LlmErrorModal />}\r\n      {cooperativeAction && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4 text-center\">\r\n              <h3 className=\"text-xl font-bold text-yellow-400\">진행 중인 대화</h3>\r\n              <p className=\"text-gray-200\">{getDisplayName(cooperativeAction.lockedBy[0])}님이 이미 {cooperativeAction.choiceObject.text} 행동을 하고 있습니다. 참여하시겠습니까?</p>\r\n              <div className=\"flex justify-center gap-4\">\r\n                  <button className=\"px-4 py-2 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md\"\r\n                      onClick={() => handleCooperativeAction(cooperativeAction.scope, cooperativeAction.choiceObject)}>\r\n                      대화 참여하기\r\n                  </button>\r\n                  <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\"\r\n                      onClick={() => setCooperativeAction(null)}>\r\n                      나중에 하기\r\n                  </button>\r\n              </div>\r\n          </div>\r\n          </div>\r\n      )}\r\n      {showResetModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-red-400\">⚠️ 모든 데이터를 초기화할까요?</h3>\r\n            <p className=\"text-gray-200\">이 작업은 되돌릴 수 없습니다. 모든 시나리오, 로그, 유저, 채팅 데이터가 삭제됩니다.</p>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => setShowResetModal(false)} disabled={isResetting}>취소</button>\r\n              <button className=\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\" onClick={resetAllGameData} disabled={isResetting}>{isResetting ? '초기화 중...' : '초기화'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\">\r\n        <div className=\"flex flex-col w-full lg:w-2/3 space-y-6\">\r\n          <div className=\"mb-2\">\r\n            <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('gameLog')}>\r\n              <h2 className=\"text-lg font-bold text-gray-100\">게임 로그</h2>\r\n              <div className=\"text-xl\">{accordion.gameLog ? '▼' : '▲'}</div>\r\n            </div>\r\n            {accordion.gameLog && (\r\n              <>\r\n                <div className=\"flex justify-end mb-2\">\r\n                  <button className=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\" onClick={() => setShowResetModal(true)}>전체 데이터 초기화</button>\r\n                </div>\r\n                <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\" style={{ maxHeight: '24rem' }}>\r\n                  {!privatePlayerState.characterCreated && (\r\n                    <div className=\"mb-4 p-2 rounded bg-gray-900/50 text-center\">\r\n                        <p className=\"text-yellow-300 font-semibold italic text-lg\">모험의 서막</p>\r\n                        <p className=\"whitespace-pre-wrap mt-1\">당신은 어떤 운명을 선택하시겠습니까?</p>\r\n                    </div>\r\n                  )}\r\n                  {gameState.log.map((event, index) => (\r\n                    <div key={index} className=\"mb-4 p-2 rounded bg-gray-900/50\">\r\n                      {event.actor && (\r\n                         <p className=\"text-yellow-300 font-semibold italic text-sm\">\r\n                            {Array.isArray(event.actor) ? event.actor.map(a=>a.displayName).join(', ') : event.actor.displayName} 님이 {event.action} 선택\r\n                         </p>\r\n                      )}\r\n                      <p className=\"whitespace-pre-wrap mt-1\" dangerouslySetInnerHTML={{ __html: (event.publicStory || '').replace(/\\n/g, '<br />') }}></p>\r\n                      {event.groupStory && privatePlayerState.groups.length > 0 && (\r\n                          <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-green-900/30 border-l-4 border-green-400 text-green-200\">\r\n                              <span className=\"font-bold\">[그룹 이야기] </span>\r\n                              {event.groupStory}\r\n                          </p>\r\n                      )}\r\n                      {event.privateStories && event.privateStories[userId] && (\r\n                        <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\">\r\n                          <span className=\"font-bold\">[당신만 아는 사실] </span>\r\n                          {event.privateStories[userId]}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {isTextLoading && (\r\n                    <div className=\"flex justify-center items-center mt-4\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\r\n                      <span className=\"ml-3 text-gray-400\">이야기를 생성 중...</span>\r\n                    </div>\r\n                  )}\r\n                  <div ref={logEndRef} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n              {privatePlayerState.characterCreated ? (\r\n                  getVisibleChoices().map((choice) => {\r\n                      const scope = getActionScope(choice.text);\r\n                      const lockedBy = actionLocks[scope];\r\n                      const isLocked = lockedBy && Array.isArray(lockedBy) && !lockedBy.includes(userId);\r\n                      \r\n                      let buttonStyle = 'bg-blue-600 hover:bg-blue-700';\r\n                      let prefix = '';\r\n\r\n                      if (choice.type === 'private' || choice.type === 'group') {\r\n                        buttonStyle = 'bg-green-600 hover:bg-green-700';\r\n                        prefix = '[개인/그룹] ';\r\n                      } else if (choice.type === 'action_leave') {\r\n                        buttonStyle = 'bg-red-600 hover:bg-red-700';\r\n                        prefix = '[행동 종료] '\r\n                      }\r\n                      \r\n                      if (isLocked) {\r\n                        buttonStyle = 'bg-yellow-600 hover:bg-yellow-700';\r\n                        prefix = `[${getDisplayName(lockedBy[0])}와 함께하기] `;\r\n                      }\r\n\r\n                      return (\r\n                          <button\r\n                              key={choice.id}\r\n                              className={`px-6 py-3 font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 ${buttonStyle} text-white`}\r\n                              onClick={() => handleChoiceClick(choice)}\r\n                              disabled={isTextLoading}\r\n                          >\r\n                              {prefix}{choice.text}\r\n                          </button>\r\n                      )\r\n                  })\r\n              ) : (\r\n                  Object.keys(professions).map(key => (\r\n                      <button\r\n                          key={key}\r\n                          onClick={() => handleChoiceClick({ id: key, text: `${key}. ${professions[key].name}`})}\r\n                          disabled={isTextLoading}\r\n                          className=\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\"\r\n                      >\r\n                          <p className=\"text-lg text-blue-300\">{`${key}. ${professions[key].name}`}</p>\r\n                          <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\r\n                      </button>\r\n                  ))\r\n              )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\">\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('playerInfo')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">내 정보</h4>\r\n                    <div className=\"text-xl\">{accordion.playerInfo ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.playerInfo && (\r\n                  <div className=\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\">\r\n                    <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">직업:</span> {privatePlayerState.profession || '미정'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">위치:</span> {gameState.player.currentLocation}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">능력치:</span> 힘({privatePlayerState.stats.strength}) 지능({privatePlayerState.stats.intelligence}) 민첩({privatePlayerState.stats.agility}) 카리스마({privatePlayerState.stats.charisma})</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">인벤토리:</span> {privatePlayerState.inventory.join(', ') || '비어있음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">퀘스트:</span> {privatePlayerState.activeQuests.join(', ') || '없음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">단서:</span> {privatePlayerState.knownClues.join(', ') || '없음'}</p>\r\n                    <p><span className=\"font-semibold text-green-300\">소속 그룹:</span> {privatePlayerState.groups.join(', ') || '없음'}</p>\r\n                    <div>\r\n                        <span className=\"font-semibold text-yellow-300\">NPC 관계:</span>\r\n                        <ul className=\"list-disc list-inside ml-4\">\r\n                            {Object.entries(privatePlayerState.npcRelations).length > 0 ? \r\n                                Object.entries(privatePlayerState.npcRelations).map(([name, value]) => <li key={name}>{`${name}: ${value}`}</li>) :\r\n                                <li>알려진 관계 없음</li>\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('users')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">현재 플레이어들</h4>\r\n                    <div className=\"text-xl\">{accordion.users ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.users && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\r\n                        {activeUsers.length > 0 ? (\r\n                            <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                                {activeUsers.map(user => (\r\n                                    <li key={user.id} className=\"truncate p-1 rounded-md\">\r\n                                        <span className=\"font-medium text-green-300\">{getDisplayName(user.id)}</span>\r\n                                        <span className=\"text-gray-400 text-xs\"> ({user.profession || '모험가'})</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('chat')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">공개 채팅</h4>\r\n                    <div className=\"text-xl\">{accordion.chat ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.chat && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md flex flex-col h-64\">\r\n                        <div className=\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\">\r\n                            {chatMessages.map((msg) => (\r\n                                <div key={msg.id}><p><span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> {msg.message}</p></div>\r\n                            ))}\r\n                            <div ref={chatEndRef} />\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\" value={currentChatMessage} onChange={(e) => setCurrentChatMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()} disabled={!isAuthReady} />\r\n                            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\" onClick={sendChatMessage} disabled={!isAuthReady || !currentChatMessage.trim()}>보내기</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body { font-family: 'Noto Sans KR', sans-serif; }\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}