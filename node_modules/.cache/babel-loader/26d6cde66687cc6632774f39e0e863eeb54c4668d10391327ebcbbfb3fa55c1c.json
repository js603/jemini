{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{initializeApp}from'firebase/app';import{getAuth,signInAnonymously,signInWithCustomToken,onAuthStateChanged}from'firebase/auth';import{getFirestore,doc,setDoc,getDoc,collection,query,onSnapshot,serverTimestamp,addDoc,getDocs,deleteDoc,runTransaction}from'firebase/firestore';// ====================================================================\n// Firebase configuration information - 수정 금지\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const defaultFirebaseConfig={apiKey:\"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",authDomain:\"text-adventure-game-cb731.firebaseapp.com\",projectId:\"text-adventure-game-cb731\",storageBucket:\"text-adventure-game-cb731.appspot.com\",messagingSenderId:\"1092941614820\",appId:\"1:1092941614820:web:5545f36014b73c268026f1\",measurementId:\"G-FNGF42T1FP\"};// 수정금지\nconst firebaseConfig=defaultFirebaseConfig;const appId=firebaseConfig.projectId;const initialAuthToken=null;// ====================================================================\nconst professions={'1':{name:'몰락한 귀족/기사',motivation:'가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.'},'2':{name:'평범한 마을 사람/농부',motivation:'갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.'},'3':{name:'젊은 마법사/견습생',motivation:'스승님의 실종에 대한 단서를 찾아야 합니다.'},'4':{name:'용병/모험가',motivation:'의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.'},'5':{name:'도적/암살자',motivation:'길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.'},'6':{name:'왕족/공주/왕자',motivation:'왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.'}};// Firestore 경로 유틸\nconst getMainScenarioRef=(db,appId)=>doc(db,'artifacts',appId,'public','data','mainScenario','main');const getPrivatePlayerStateRef=(db,appId,userId)=>doc(db,'artifacts',appId,'users',userId,'playerState','state');// 상태 초기화 유틸\nconst getDefaultGameState=()=>({phase:'playing',log:[],choices:[],player:{currentLocation:'방랑자의 안식처'}});const getDefaultPrivatePlayerState=()=>({stats:{strength:10,intelligence:10,agility:10,charisma:10},inventory:[],initialMotivation:'',reputation:{},activeQuests:[],companions:[],knownClues:[],characterCreated:false,// 캐릭터 생성 완료 여부\nprofession:''// 개인 직업 정보\n});function App(){const[gameState,setGameState]=useState(getDefaultGameState());const[privatePlayerState,setPrivatePlayerState]=useState(getDefaultPrivatePlayerState());const[isTextLoading,setIsTextLoading]=useState(false);const[activeUsers,setActiveUsers]=useState([]);const[chatMessages,setChatMessages]=useState([]);const[currentChatMessage,setCurrentChatMessage]=useState('');const[actingPlayer,setActingPlayer]=useState(null);const[isActionInProgress,setIsActionInProgress]=useState(false);const[db,setDb]=useState(null);const[auth,setAuth]=useState(null);const[userId,setUserId]=useState(null);const[isAuthReady,setIsAuthReady]=useState(false);const logEndRef=useRef(null);const chatEndRef=useRef(null);const[nickname,setNickname]=useState(()=>localStorage.getItem('nickname')||'');const[showNicknameModal,setShowNicknameModal]=useState(!localStorage.getItem('nickname'));const[nicknameInput,setNicknameInput]=useState('');const[accordion,setAccordion]=useState({gameLog:true,chat:true,users:true,playerInfo:true});const[showResetModal,setShowResetModal]=useState(false);const[isResetting,setIsResetting]=useState(false);const[llmError,setLlmError]=useState(null);const[llmRetryPrompt,setLlmRetryPrompt]=useState(null);const[uiMode,setUiMode]=useState('loading');const handleNicknameSubmit=()=>{if(nicknameInput.trim()){const finalNickname=nicknameInput.trim();setNickname(finalNickname);localStorage.setItem('nickname',finalNickname);setShowNicknameModal(false);if(userId&&db){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);setDoc(userDocRef,{nickname:finalNickname},{merge:true});}}};const getDisplayName=uid=>{if(uid===userId)return nickname||`플레이어 ${userId===null||userId===void 0?void 0:userId.substring(0,4)}`;const user=activeUsers.find(u=>u.id===uid);return(user===null||user===void 0?void 0:user.nickname)||`플레이어 ${uid===null||uid===void 0?void 0:uid.substring(0,4)}`;};const resetAllGameData=async()=>{if(!db||!isAuthReady)return;setIsResetting(true);try{const collectionsToDelete=[collection(db,'artifacts',appId,'public','data','chatMessages'),collection(db,'artifacts',appId,'public','data','activeUsers')];for(const colRef of collectionsToDelete){const snapshot=await getDocs(colRef);for(const docSnap of snapshot.docs){await deleteDoc(docSnap.ref);}}const usersColRef=collection(db,'artifacts',appId,'users');const usersSnapshot=await getDocs(usersColRef);for(const userDoc of usersSnapshot.docs){await deleteDoc(userDoc.ref);// 하위 컬렉션은 자동으로 삭제되지 않으므로 주의, 여기서는 유저 문서 자체를 삭제\n}const mainScenarioRef=getMainScenarioRef(db,appId);await deleteDoc(mainScenarioRef);const gameStatusRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');await deleteDoc(gameStatusRef);setGameState(getDefaultGameState());setPrivatePlayerState(getDefaultPrivatePlayerState());setChatMessages([]);setUiMode('creation');// 리셋 후 생성 모드로 전환\n}catch(e){console.error(\"Data reset error:\",e);}finally{setIsResetting(false);setShowResetModal(false);}};useEffect(()=>{try{const app=initializeApp(firebaseConfig);const firestoreDb=getFirestore(app);const firebaseAuth=getAuth(app);setDb(firestoreDb);setAuth(firebaseAuth);const unsubscribeAuth=onAuthStateChanged(firebaseAuth,async user=>{if(user){setUserId(user.uid);setIsAuthReady(true);}else{await(initialAuthToken?signInWithCustomToken(firebaseAuth,initialAuthToken):signInAnonymously(firebaseAuth));}});return()=>unsubscribeAuth();}catch(error){console.error(\"Firebase initialization error:\",error);}},[]);useEffect(()=>{if(!db||!userId||!isAuthReady)return;const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);const unsubscribe=onSnapshot(privateStateRef,docSnap=>{if(docSnap.exists()){const privateData=docSnap.data();setPrivatePlayerState(privateData);if(privateData.characterCreated){setUiMode('playing');}else{setUiMode('creation');}}else{setDoc(privateStateRef,getDefaultPrivatePlayerState());setUiMode('creation');}},error=>{console.error(\"Private player state snapshot error:\",error);setLlmError(\"개인 정보를 불러오는 데 실패했습니다.\");setUiMode('error');});return()=>unsubscribe();},[db,userId,isAuthReady]);useEffect(()=>{if(uiMode!=='playing'||!db||!isAuthReady||!userId||!auth)return;const gameStatusDocRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');const unsubscribeGameStatus=onSnapshot(gameStatusDocRef,docSnap=>{const data=docSnap.data();setIsActionInProgress((data===null||data===void 0?void 0:data.isActionInProgress)||false);setActingPlayer((data===null||data===void 0?void 0:data.actingPlayer)||null);});const chatMessagesColRef=collection(db,'artifacts',appId,'public','data','chatMessages');const unsubscribeChat=onSnapshot(query(chatMessagesColRef),snapshot=>{const messages=snapshot.docs.map(d=>({id:d.id,...d.data()})).sort((a,b)=>{var _a$timestamp,_b$timestamp;return(((_a$timestamp=a.timestamp)===null||_a$timestamp===void 0?void 0:_a$timestamp.toMillis())||0)-(((_b$timestamp=b.timestamp)===null||_b$timestamp===void 0?void 0:_b$timestamp.toMillis())||0);});setChatMessages(messages);});const activeUsersColRef=collection(db,'artifacts',appId,'public','data','activeUsers');const unsubscribeActiveUsers=onSnapshot(query(activeUsersColRef),snapshot=>{const cutoffTime=Date.now()-60*1000;const users=snapshot.docs.map(d=>({id:d.id,...d.data()})).filter(u=>u.lastActive&&u.lastActive.toMillis()>cutoffTime);setActiveUsers(users);});const updateUserPresence=async()=>{if(userId){const userDocRef=doc(db,'artifacts',appId,'public','data','activeUsers',userId);await setDoc(userDocRef,{lastActive:serverTimestamp(),nickname:nickname||`플레이어 ${userId.substring(0,4)}`,profession:privatePlayerState.profession},{merge:true});}};updateUserPresence();const presenceInterval=setInterval(updateUserPresence,30000);const mainScenarioRef=getMainScenarioRef(db,appId);const unsubscribeMainScenario=onSnapshot(mainScenarioRef,snap=>{if(snap.exists()){const data=snap.data();setGameState(prev=>{var _data$player;return{...prev,log:data.storyLog||[],choices:data.choices||[],player:{...prev.player,currentLocation:((_data$player=data.player)===null||_data$player===void 0?void 0:_data$player.currentLocation)||prev.player.currentLocation}};});}},error=>{console.error(\"Main scenario snapshot error:\",error);setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");});return()=>{unsubscribeGameStatus();unsubscribeChat();unsubscribeActiveUsers();unsubscribeMainScenario();clearInterval(presenceInterval);};},[db,isAuthReady,userId,auth,nickname,uiMode,privatePlayerState.profession]);useEffect(()=>{if(accordion.gameLog&&logEndRef.current)logEndRef.current.scrollIntoView({behavior:\"smooth\"});},[gameState.log,accordion.gameLog]);useEffect(()=>{if(accordion.chat&&chatEndRef.current)chatEndRef.current.scrollIntoView({behavior:\"smooth\"});},[chatMessages,accordion.chat]);const systemPrompt=`\n    ### 페르소나 (Persona)\n    당신은 TRPG(Tabletop Role-Playing Game)의 최고 실력자 '게임 마스터(GM)'입니다. 당신의 임무는 단순한 스토리 생성이 아니라, 각 플레이어가 자신의 서사의 주인공이 되면서도, 모두가 하나의 거대한 세계관 속에서 살아 숨 쉬고 있다는 느낌을 받도록 만드는 것입니다. 당신은 유려한 문장가이자, 치밀한 설계자이며, 플레이어들의 행동에 즉각적으로 반응하는 유연한 스토리텔러입니다.\n\n    ### 핵심 철학: 하이브리드 월드 (Hybrid World)\n    이 세계는 '공유된 현실'과 '개인적인 서사'가 공존합니다.\n    1.  **공유된 현실 (Shared Reality):** 세상의 중요한 사건, 장소의 변화, 주요 NPC의 죽음 등은 모든 플레이어가 함께 경험하는 절대적인 현실입니다. 이는 'story'와 'sharedStateUpdates'로 표현됩니다.\n    2.  **개인적인 서사 (Personal Narrative):** 플레이어의 내면의 생각, 남들은 모르는 비밀 지식, 개인적인 퀘스트의 진행 등은 오직 그 플레이어에게만 주어지는 고유한 경험입니다. 이는 'privateStory', 'privateChoices', 'privateStateUpdates'로 표현됩니다.\n\n    ### 스토리텔링 원칙\n    * **보여주되, 말하지 말라 (Show, Don't Tell):** '그는 화가 났다'가 아니라 '그는 주먹을 불끈 쥐었다'라고 묘사하십시오.\n    * **역할 존중:** 플레이어의 직업, 능력치, 아이템, 그리고 특히 **'[개인 정보]'**에 담긴 단서('knownClues')나 퀘스트('activeQuests')는 당신이 스토리를 만들 때 가장 먼저 고려해야 할 재료입니다. 이것이 개인화된 경험의 핵심입니다.\n    * **살아있는 세계:** '[주변 플레이어]' 정보를 활용하여 다른 플레이어들의 존재를 이야기에 자연스럽게 녹여내십시오. 그들의 등장은 단순한 배경이 아니라, 새로운 사건의 계기가 되어야 합니다.\n    * **선택의 무게:** 플레이어의 선택은 반드시 의미 있는 결과를 가져와야 합니다. 사소한 선택이 나비효과를 일으킬 수도 있습니다.\n\n    ### JSON 출력 규칙 (매우 중요)\n    당신은 반드시 아래의 JSON 구조를 완벽하게 따라야 합니다. 설명(comment)은 절대 포함하지 마십시오.\n    {\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사. 이 사건의 결과로 세상이 어떻게 변했는지 객관적으로 묘사합니다.\",\n      \"privateStory\": \"선택을 한 플레이어만 볼 수 있는 2인칭 서사. '당신은...', '...라고 느낀다.' 와 같이 내면의 생각, 감각, 남들이 눈치채지 못한 미세한 발견 등을 묘사합니다.\",\n      \"choices\": [\n        \"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"\n      ],\n      \"privateChoices\": [\n        \"오직 이 플레이어의 직업, 아이템, 퀘스트, 단서 때문에 가능한 특별한 행동들.\"\n      ],\n      \"sharedStateUpdates\": {\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함됩니다.\"\n      },\n      \"privateStateUpdates\": {\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, ...},\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\n        \"knownClues\": [\"새롭게 알게 된 단서를 포함한 전체 단서 목록\"],\n        \"companions\": [\"업데이트된 동료 목록\"],\n        \"reputation\": {\"세력명\": \"상태\", ...}\n      }\n    }\n\n    ### 규칙 상세\n    * 'privateChoices' 예시: 플레이어의 'knownClues'에 '가문의 문장'이 있다면, \"가문의 문장을 제단에 맞춰본다.\" 와 같은 선택지를 제공하십시오.\n    * **상태 업데이트:** 'privateStateUpdates'의 모든 필드는 **변경 여부와 관계없이 항상 현재 플레이어의 전체 상태를 포함**하여 보내야 합니다. 예를 들어, 아이템을 하나 얻었다면, 기존 아이템을 포함한 전체 인벤토리 목록을 'inventory'에 담아야 합니다.\n    * 'story'와 'privateStory'는 합쳐서 500자 이내로 간결하게 작성하십시오.\n  `;const callGeminiTextLLM=async promptData=>{setIsTextLoading(true);setLlmRetryPrompt(promptData);const mainApiKey=\"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";const backupApiKey=\"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";const getApiUrl=apiKey=>`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;const history=promptData.history.map(event=>event.publicStory).slice(-5);const userPrompt=`\n      [상황 분석 요청]\n      아래 정보를 바탕으로 플레이어의 행동에 대한 결과를 생성해주십시오.\n\n      [공유 컨텍스트]\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\n      - 이전 주요 사건 로그 (최대 5개): ${JSON.stringify(history)}\n\n      [개인 정보 (현재 플레이어)]\n      - 직업: ${promptData.privateInfo.profession}\n      - 능력치: ${JSON.stringify(promptData.privateInfo.stats)}\n      - 인벤토리: ${JSON.stringify(promptData.privateInfo.inventory)}\n      - 활성 퀘스트: ${JSON.stringify(promptData.privateInfo.activeQuests)}\n      - 알려진 단서: ${JSON.stringify(promptData.privateInfo.knownClues)}\n      - 평판: ${JSON.stringify(promptData.privateInfo.reputation)}\n\n      [플레이어의 행동]\n      - 선택: \"${promptData.playerChoice}\"\n\n      [주변 플레이어]\n      - ${promptData.activeUsers.length>0?JSON.stringify(promptData.activeUsers):\"현재 주변에 다른 플레이어가 없습니다.\"}\n    `;const payload={contents:[{role:\"user\",parts:[{text:systemPrompt}]},{role:\"model\",parts:[{text:\"{}\"}]},{role:\"user\",parts:[{text:userPrompt}]}]};const tryGeminiCall=async apiKey=>fetch(getApiUrl(apiKey),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});try{var _result$candidates,_result$candidates$,_result$candidates$$c,_result$candidates$$c2,_result$candidates$$c3;let response=await tryGeminiCall(mainApiKey);if(!response.ok){response=await tryGeminiCall(backupApiKey);}if(!response.ok){throw new Error(`HTTP error! status: ${response.status}`);}const result=await response.json();const llmOutputText=(_result$candidates=result.candidates)===null||_result$candidates===void 0?void 0:(_result$candidates$=_result$candidates[0])===null||_result$candidates$===void 0?void 0:(_result$candidates$$c=_result$candidates$.content)===null||_result$candidates$$c===void 0?void 0:(_result$candidates$$c2=_result$candidates$$c.parts)===null||_result$candidates$$c2===void 0?void 0:(_result$candidates$$c3=_result$candidates$$c2[0])===null||_result$candidates$$c3===void 0?void 0:_result$candidates$$c3.text;const jsonMatch=llmOutputText===null||llmOutputText===void 0?void 0:llmOutputText.match(/\\{[\\s\\S]*\\}/);if(jsonMatch)return JSON.parse(jsonMatch[0]);throw new Error(\"Valid JSON object not found in LLM response.\");}catch(error){console.error(\"LLM API call error:\",error);setLlmError(error.message||'LLM 호출 실패');return null;}finally{setIsTextLoading(false);}};const sendChatMessage=async()=>{if(!db||!userId||!isAuthReady||!currentChatMessage.trim())return;try{const chatCollectionRef=collection(db,'artifacts',appId,'public','data','chatMessages');await addDoc(chatCollectionRef,{userId,displayName:getDisplayName(userId),message:currentChatMessage,timestamp:serverTimestamp()});setCurrentChatMessage('');}catch(error){console.error(\"Error sending chat message:\",error);}};const updateGameStateFromLLM=async(llmResponse,playerChoice)=>{if(!db||!appId||!userId)return;const mainScenarioRef=getMainScenarioRef(db,appId);const newChoices=[...(llmResponse.choices||[]),...(llmResponse.privateChoices||[])];const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:playerChoice,publicStory:llmResponse.story||\"특별한 일은 일어나지 않았다.\",privateStories:{[userId]:llmResponse.privateStory||null},timestamp:new Date()};try{await runTransaction(db,async transaction=>{var _llmResponse$sharedSt;const scenarioDoc=await transaction.get(mainScenarioRef);if(!scenarioDoc.exists())throw\"시나리오 문서가 존재하지 않습니다.\";const currentData=scenarioDoc.data();const newStoryLog=[...(currentData.storyLog||[]),newEvent];transaction.update(mainScenarioRef,{storyLog:newStoryLog,choices:newChoices,'player.currentLocation':((_llmResponse$sharedSt=llmResponse.sharedStateUpdates)===null||_llmResponse$sharedSt===void 0?void 0:_llmResponse$sharedSt.location)||currentData.player.currentLocation,lastUpdate:serverTimestamp()});});const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);if(llmResponse.privateStateUpdates){await setDoc(privateStateRef,llmResponse.privateStateUpdates,{merge:false});}}catch(error){console.error(\"공유 상태 업데이트 실패:\",error);setLlmError(\"시나리오를 업데이트하는 데 실패했습니다.\");}};const handleChoiceClick=async choice=>{if(isTextLoading||uiMode==='playing'&&isActionInProgress)return;if(uiMode==='creation'){setIsTextLoading(true);const choiceKey=choice.split('.')[0];const selectedProfession=professions[choiceKey];if(selectedProfession){const privateStateRef=getPrivatePlayerStateRef(db,appId,userId);await setDoc(privateStateRef,{...getDefaultPrivatePlayerState(),characterCreated:true,profession:selectedProfession.name,initialMotivation:selectedProfession.motivation},{merge:true});const mainScenarioRef=getMainScenarioRef(db,appId);const newEvent={actor:{id:userId,displayName:getDisplayName(userId)},action:\"여관에 들어선다\",publicStory:`어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,privateStories:{[userId]:selectedProfession.motivation},timestamp:new Date()};try{await runTransaction(db,async transaction=>{const scenarioDoc=await transaction.get(mainScenarioRef);if(!scenarioDoc.exists()){const initialGameState=getDefaultGameState();const initialChoices=[\"여관을 둘러본다.\",\"다른 모험가에게 말을 건다.\",\"여관 주인에게 정보를 묻는다.\"];transaction.set(mainScenarioRef,{...initialGameState,storyLog:[newEvent],choices:initialChoices,lastUpdate:serverTimestamp()});}else{const currentData=scenarioDoc.data();const newStoryLog=[...(currentData.storyLog||[]),newEvent];transaction.update(mainScenarioRef,{storyLog:newStoryLog,lastUpdate:serverTimestamp()});}});}catch(e){console.error(\"등장 이벤트 추가 실패: \",e);setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");}finally{setIsTextLoading(false);}}return;}const gameStatusRef=doc(db,'artifacts',appId,'public','data','gameStatus','status');try{await runTransaction(db,async transaction=>{const statusDoc=await transaction.get(gameStatusRef);if(statusDoc.exists()&&statusDoc.data().isActionInProgress){throw new Error(\"다른 플레이어가 행동 중입니다. 잠시 후 다시 시도해주세요.\");}transaction.set(gameStatusRef,{isActionInProgress:true,actingPlayer:{id:userId,displayName:getDisplayName(userId)}},{merge:true});});const promptData={playerChoice:choice,sharedInfo:{currentLocation:gameState.player.currentLocation},privateInfo:privatePlayerState,history:gameState.log,activeUsers:activeUsers.map(u=>({nickname:getDisplayName(u.id),profession:u.profession})).filter(u=>u.id!==userId)};const llmResponse=await callGeminiTextLLM(promptData);if(llmResponse){await updateGameStateFromLLM(llmResponse,choice);setLlmError(null);}else{throw new Error(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");}}catch(error){console.error(\"행동 처리 중 오류:\",error.message);setLlmError(error.message);}finally{await setDoc(gameStatusRef,{isActionInProgress:false,actingPlayer:null},{merge:true});setIsTextLoading(false);}};const toggleAccordion=key=>{setAccordion(prev=>({...prev,[key]:!prev[key]}));};if(showNicknameModal){return/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-gray-100\",children:\"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"input\",{className:\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\",placeholder:\"\\uB2C9\\uB124\\uC784\",value:nicknameInput,onChange:e=>setNicknameInput(e.target.value),onKeyDown:e=>{if(e.key==='Enter')handleNicknameSubmit();},autoFocus:true}),/*#__PURE__*/_jsx(\"button\",{className:\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\",onClick:handleNicknameSubmit,disabled:!nicknameInput.trim(),children:\"\\uC2DC\\uC791\\uD558\\uAE30\"})]})});}if(uiMode==='loading'){return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-4 text-xl\",children:\"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911...\"})]});}if(uiMode==='error'){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-red-400 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"p\",{children:llmError})});}if(uiMode==='creation'){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-2xl text-center\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-2 text-yellow-300\",children:\"\\uBAA8\\uD5D8\\uC758 \\uC11C\\uB9C9\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-gray-300 mb-8\",children:\"\\uB2F9\\uC2E0\\uC740 \\uC5B4\\uB5A4 \\uC6B4\\uBA85\\uC744 \\uC120\\uD0DD\\uD558\\uC2DC\\uACA0\\uC2B5\\uB2C8\\uAE4C?\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-4\",children:Object.keys(professions).map(key=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleChoiceClick(`${key}. ${professions[key].name}`),disabled:isTextLoading,className:\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-lg text-blue-300\",children:`${key}. ${professions[key].name}`}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-normal text-gray-300 mt-1\",children:professions[key].motivation})]},key))}),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 flex justify-center items-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-6 w-6 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"p\",{className:\"ml-3 text-gray-400\",children:\"\\uC138\\uACC4\\uC5D0 \\uB2F9\\uC2E0\\uC758 \\uC874\\uC7AC\\uB97C \\uAE30\\uB85D\\uD558\\uB294 \\uC911...\"})]})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\",children:[showResetModal&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-red-400\",children:\"\\u26A0\\uFE0F \\uBAA8\\uB4E0 \\uB370\\uC774\\uD130\\uB97C \\uCD08\\uAE30\\uD654\\uD560\\uAE4C\\uC694?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-200\",children:\"\\uC774 \\uC791\\uC5C5\\uC740 \\uB418\\uB3CC\\uB9B4 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uBAA8\\uB4E0 \\uC2DC\\uB098\\uB9AC\\uC624, \\uB85C\\uADF8, \\uC720\\uC800, \\uCC44\\uD305 \\uB370\\uC774\\uD130\\uAC00 \\uC0AD\\uC81C\\uB429\\uB2C8\\uB2E4.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end gap-3\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\",onClick:()=>setShowResetModal(false),disabled:isResetting,children:\"\\uCDE8\\uC18C\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\",onClick:resetAllGameData,disabled:isResetting,children:isResetting?'초기화 중...':'초기화'})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full lg:w-2/3 space-y-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('gameLog'),children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-bold text-gray-100\",children:\"\\uAC8C\\uC784 \\uB85C\\uADF8\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.gameLog?'▼':'▲'})]}),accordion.gameLog&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-end mb-2\",children:/*#__PURE__*/_jsx(\"button\",{className:\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\",onClick:()=>setShowResetModal(true),children:\"\\uC804\\uCCB4 \\uB370\\uC774\\uD130 \\uCD08\\uAE30\\uD654\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\",style:{maxHeight:'24rem'},children:[gameState.log.map((event,index)=>{var _event$actor;return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-2 rounded bg-gray-900/50\",children:[((_event$actor=event.actor)===null||_event$actor===void 0?void 0:_event$actor.displayName)&&event.action&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-yellow-300 font-semibold italic text-sm\",children:[event.actor.displayName,\" \\uB2D8\\uC774 \",event.action,\" \\uC120\\uD0DD\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"whitespace-pre-wrap mt-1\",dangerouslySetInnerHTML:{__html:(event.publicStory||'').replace(/\\n/g,'<br />')}}),event.privateStories&&event.privateStories[userId]&&/*#__PURE__*/_jsxs(\"p\",{className:\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-bold\",children:\"[\\uB2F9\\uC2E0\\uB9CC \\uC544\\uB294 \\uC0AC\\uC2E4] \"}),event.privateStories[userId]]})]},index);}),isTextLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center items-center mt-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"}),/*#__PURE__*/_jsx(\"span\",{className:\"ml-3 text-gray-400\",children:\"\\uC774\\uC57C\\uAE30\\uB97C \\uC0DD\\uC131 \\uC911...\"})]}),isActionInProgress&&(!actingPlayer||actingPlayer.id!==userId)&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\",children:actingPlayer?`${getDisplayName(actingPlayer.id)}님이 선택하고 있습니다...`:\"다른 플레이어가 선택하고 있습니다...\"}),llmError&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-red-400 p-2 bg-red-900 bg-opacity-50 rounded mt-2\",children:[\"\\uC624\\uB958: \",llmError]}),/*#__PURE__*/_jsx(\"div\",{ref:logEndRef})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-col gap-3\",children:gameState.choices.map((choice,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\",onClick:()=>handleChoiceClick(choice),disabled:isTextLoading||isActionInProgress,children:choice},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('playerInfo'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uB0B4 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.playerInfo?'▼':'▲'})]}),accordion.playerInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC774\\uB984:\"}),\" \",getDisplayName(userId)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC9C1\\uC5C5:\"}),\" \",privatePlayerState.profession]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC704\\uCE58:\"}),\" \",gameState.player.currentLocation]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2A5\\uB825\\uCE58:\"}),\" \\uD798(\",privatePlayerState.stats.strength,\") \\uC9C0\\uB2A5(\",privatePlayerState.stats.intelligence,\") \\uBBFC\\uCCA9(\",privatePlayerState.stats.agility,\") \\uCE74\\uB9AC\\uC2A4\\uB9C8(\",privatePlayerState.stats.charisma,\")\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uC778\\uBCA4\\uD1A0\\uB9AC:\"}),\" \",privatePlayerState.inventory.join(', ')||'비어있음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uD018\\uC2A4\\uD2B8:\"}),\" \",privatePlayerState.activeQuests.join(', ')||'없음']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-semibold text-blue-300\",children:\"\\uB2E8\\uC11C:\"}),\" \",privatePlayerState.knownClues.join(', ')||'없음']})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('users'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uD604\\uC7AC \\uD50C\\uB808\\uC774\\uC5B4\\uB4E4\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.users?'▼':'▲'})]}),accordion.users&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\",children:activeUsers.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-gray-300 space-y-1\",children:activeUsers.map(user=>/*#__PURE__*/_jsxs(\"li\",{className:\"truncate p-1 rounded-md\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"font-medium text-green-300\",children:getDisplayName(user.id)}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-400 text-xs\",children:[\" (\",user.profession||'모험가',\")\"]})]},user.id))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400\",children:\"\\uD65C\\uB3D9 \\uC911\\uC778 \\uD50C\\uB808\\uC774\\uC5B4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between cursor-pointer select-none\",onClick:()=>toggleAccordion('chat'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-md font-semibold text-gray-200\",children:\"\\uACF5\\uAC1C \\uCC44\\uD305\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-xl\",children:accordion.chat?'▼':'▲'})]}),accordion.chat&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-600 p-3 rounded-md flex flex-col h-64\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\",children:[chatMessages.map(msg=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-yellow-300\",children:[getDisplayName(msg.userId),\":\"]}),\" \",msg.message]})},msg.id)),/*#__PURE__*/_jsx(\"div\",{ref:chatEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\",value:currentChatMessage,onChange:e=>setCurrentChatMessage(e.target.value),onKeyPress:e=>e.key==='Enter'&&sendChatMessage(),disabled:!isAuthReady}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\",onClick:sendChatMessage,disabled:!isAuthReady||!currentChatMessage.trim(),children:\"\\uBCF4\\uB0B4\\uAE30\"})]})]})]})]})]}),/*#__PURE__*/_jsx(\"style\",{children:`\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\n        body { font-family: 'Noto Sans KR', sans-serif; }\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\n        `})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","initializeApp","getAuth","signInAnonymously","signInWithCustomToken","onAuthStateChanged","getFirestore","doc","setDoc","getDoc","collection","query","onSnapshot","serverTimestamp","addDoc","getDocs","deleteDoc","runTransaction","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","defaultFirebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseConfig","initialAuthToken","professions","name","motivation","getMainScenarioRef","db","getPrivatePlayerStateRef","userId","getDefaultGameState","phase","log","choices","player","currentLocation","getDefaultPrivatePlayerState","stats","strength","intelligence","agility","charisma","inventory","initialMotivation","reputation","activeQuests","companions","knownClues","characterCreated","profession","App","gameState","setGameState","privatePlayerState","setPrivatePlayerState","isTextLoading","setIsTextLoading","activeUsers","setActiveUsers","chatMessages","setChatMessages","currentChatMessage","setCurrentChatMessage","actingPlayer","setActingPlayer","isActionInProgress","setIsActionInProgress","setDb","auth","setAuth","setUserId","isAuthReady","setIsAuthReady","logEndRef","chatEndRef","nickname","setNickname","localStorage","getItem","showNicknameModal","setShowNicknameModal","nicknameInput","setNicknameInput","accordion","setAccordion","gameLog","chat","users","playerInfo","showResetModal","setShowResetModal","isResetting","setIsResetting","llmError","setLlmError","llmRetryPrompt","setLlmRetryPrompt","uiMode","setUiMode","handleNicknameSubmit","trim","finalNickname","setItem","userDocRef","merge","getDisplayName","uid","substring","user","find","u","id","resetAllGameData","collectionsToDelete","colRef","snapshot","docSnap","docs","ref","usersColRef","usersSnapshot","userDoc","mainScenarioRef","gameStatusRef","e","console","error","app","firestoreDb","firebaseAuth","unsubscribeAuth","privateStateRef","unsubscribe","exists","privateData","data","gameStatusDocRef","unsubscribeGameStatus","chatMessagesColRef","unsubscribeChat","messages","map","d","sort","a","b","_a$timestamp","_b$timestamp","timestamp","toMillis","activeUsersColRef","unsubscribeActiveUsers","cutoffTime","Date","now","filter","lastActive","updateUserPresence","presenceInterval","setInterval","unsubscribeMainScenario","snap","prev","_data$player","storyLog","clearInterval","current","scrollIntoView","behavior","systemPrompt","callGeminiTextLLM","promptData","mainApiKey","backupApiKey","getApiUrl","history","event","publicStory","slice","userPrompt","sharedInfo","JSON","stringify","privateInfo","playerChoice","length","payload","contents","role","parts","text","tryGeminiCall","fetch","method","headers","body","_result$candidates","_result$candidates$","_result$candidates$$c","_result$candidates$$c2","_result$candidates$$c3","response","ok","Error","status","result","json","llmOutputText","candidates","content","jsonMatch","match","parse","message","sendChatMessage","chatCollectionRef","displayName","updateGameStateFromLLM","llmResponse","newChoices","privateChoices","newEvent","actor","action","story","privateStories","privateStory","transaction","_llmResponse$sharedSt","scenarioDoc","get","currentData","newStoryLog","update","sharedStateUpdates","location","lastUpdate","privateStateUpdates","handleChoiceClick","choice","choiceKey","split","selectedProfession","initialGameState","initialChoices","set","statusDoc","toggleAccordion","key","className","children","placeholder","value","onChange","target","onKeyDown","autoFocus","onClick","disabled","Object","keys","style","maxHeight","index","_event$actor","dangerouslySetInnerHTML","__html","replace","join","msg","type","onKeyPress"],"sources":["C:/workspaces/gemini/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { initializeApp } from 'firebase/app';\r\nimport {\r\n  getAuth,\r\n  signInAnonymously,\r\n  signInWithCustomToken,\r\n  onAuthStateChanged\r\n} from 'firebase/auth';\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  serverTimestamp,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  runTransaction\r\n} from 'firebase/firestore';\r\n\r\n// ====================================================================\r\n// Firebase configuration information - 수정 금지\r\nconst defaultFirebaseConfig = {\r\n  apiKey: \"AIzaSyBNJtmpRWzjobrY556bnHkwbZmpFJqgPX8\",\r\n  authDomain: \"text-adventure-game-cb731.firebaseapp.com\",\r\n  projectId: \"text-adventure-game-cb731\",\r\n  storageBucket: \"text-adventure-game-cb731.appspot.com\",\r\n  messagingSenderId: \"1092941614820\",\r\n  appId: \"1:1092941614820:web:5545f36014b73c268026f1\",\r\n  measurementId: \"G-FNGF42T1FP\"\r\n};\r\n\r\n// 수정금지\r\nconst firebaseConfig = defaultFirebaseConfig;\r\nconst appId = firebaseConfig.projectId;\r\nconst initialAuthToken = null;\r\n// ====================================================================\r\n\r\nconst professions = {\r\n  '1': { name: '몰락한 귀족/기사', motivation: '가문의 몰락 원인을 조사하고, 잃어버린 가문의 보물을 찾아야 합니다.' },\r\n  '2': { name: '평범한 마을 사람/농부', motivation: '갑자기 마을에 나타난 괴생명체로부터 마을을 지켜야 합니다.' },\r\n  '3': { name: '젊은 마법사/견습생', motivation: '스승님의 실종에 대한 단서를 찾아야 합니다.' },\r\n  '4': { name: '용병/모험가', motivation: '의뢰받은 임무를 수행하던 중 예상치 못한 사건에 휘말렸습니다.' },\r\n  '5': { name: '도적/암살자', motivation: '길드에서 내려온 첫 번째 임무를 완수하고, 그 과정에서 수상한 음모를 감지해야 합니다.' },\r\n  '6': { name: '왕족/공주/왕자', motivation: '왕실 내의 불화와 암투 속에서 자신의 입지를 다져야 합니다.' },\r\n};\r\n\r\n// Firestore 경로 유틸\r\nconst getMainScenarioRef = (db, appId) => doc(db, 'artifacts', appId, 'public', 'data', 'mainScenario', 'main');\r\nconst getPrivatePlayerStateRef = (db, appId, userId) => doc(db, 'artifacts', appId, 'users', userId, 'playerState', 'state');\r\n\r\n// 상태 초기화 유틸\r\nconst getDefaultGameState = () => ({\r\n  phase: 'playing',\r\n  log: [],\r\n  choices: [],\r\n  player: {\r\n    currentLocation: '방랑자의 안식처',\r\n  },\r\n});\r\n\r\nconst getDefaultPrivatePlayerState = () => ({\r\n    stats: { strength: 10, intelligence: 10, agility: 10, charisma: 10 },\r\n    inventory: [],\r\n    initialMotivation: '',\r\n    reputation: {},\r\n    activeQuests: [],\r\n    companions: [],\r\n    knownClues: [],\r\n    characterCreated: false, // 캐릭터 생성 완료 여부\r\n    profession: '', // 개인 직업 정보\r\n});\r\n\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState(getDefaultGameState());\r\n  const [privatePlayerState, setPrivatePlayerState] = useState(getDefaultPrivatePlayerState());\r\n  const [isTextLoading, setIsTextLoading] = useState(false);\r\n  const [activeUsers, setActiveUsers] = useState([]);\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [currentChatMessage, setCurrentChatMessage] = useState('');\r\n  const [actingPlayer, setActingPlayer] = useState(null);\r\n  const [isActionInProgress, setIsActionInProgress] = useState(false);\r\n  const [db, setDb] = useState(null);\r\n  const [auth, setAuth] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [isAuthReady, setIsAuthReady] = useState(false);\r\n  const logEndRef = useRef(null);\r\n  const chatEndRef = useRef(null);\r\n  const [nickname, setNickname] = useState(() => localStorage.getItem('nickname') || '');\r\n  const [showNicknameModal, setShowNicknameModal] = useState(!localStorage.getItem('nickname'));\r\n  const [nicknameInput, setNicknameInput] = useState('');\r\n  const [accordion, setAccordion] = useState({ gameLog: true, chat: true, users: true, playerInfo: true });\r\n  const [showResetModal, setShowResetModal] = useState(false);\r\n  const [isResetting, setIsResetting] = useState(false);\r\n  const [llmError, setLlmError] = useState(null);\r\n  const [llmRetryPrompt, setLlmRetryPrompt] = useState(null);\r\n  const [uiMode, setUiMode] = useState('loading');\r\n\r\n  const handleNicknameSubmit = () => {\r\n    if (nicknameInput.trim()) {\r\n      const finalNickname = nicknameInput.trim();\r\n      setNickname(finalNickname);\r\n      localStorage.setItem('nickname', finalNickname);\r\n      setShowNicknameModal(false);\r\n      if (userId && db) {\r\n          const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n          setDoc(userDocRef, { nickname: finalNickname }, { merge: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  const getDisplayName = (uid) => {\r\n    if (uid === userId) return nickname || `플레이어 ${userId?.substring(0, 4)}`;\r\n    const user = activeUsers.find(u => u.id === uid);\r\n    return user?.nickname || `플레이어 ${uid?.substring(0, 4)}`;\r\n  };\r\n\r\n  const resetAllGameData = async () => {\r\n    if (!db || !isAuthReady) return;\r\n    setIsResetting(true);\r\n    try {\r\n        const collectionsToDelete = [\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages'),\r\n            collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers'),\r\n        ];\r\n\r\n        for (const colRef of collectionsToDelete) {\r\n            const snapshot = await getDocs(colRef);\r\n            for (const docSnap of snapshot.docs) {\r\n                await deleteDoc(docSnap.ref);\r\n            }\r\n        }\r\n\r\n        const usersColRef = collection(db, 'artifacts', appId, 'users');\r\n        const usersSnapshot = await getDocs(usersColRef);\r\n        for (const userDoc of usersSnapshot.docs) {\r\n            await deleteDoc(userDoc.ref); // 하위 컬렉션은 자동으로 삭제되지 않으므로 주의, 여기서는 유저 문서 자체를 삭제\r\n        }\r\n\r\n        const mainScenarioRef = getMainScenarioRef(db, appId);\r\n        await deleteDoc(mainScenarioRef);\r\n        \r\n        const gameStatusRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\n        await deleteDoc(gameStatusRef);\r\n\r\n        setGameState(getDefaultGameState());\r\n        setPrivatePlayerState(getDefaultPrivatePlayerState());\r\n        setChatMessages([]);\r\n        setUiMode('creation'); // 리셋 후 생성 모드로 전환\r\n\r\n    } catch (e) {\r\n        console.error(\"Data reset error:\", e);\r\n    } finally {\r\n      setIsResetting(false);\r\n      setShowResetModal(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const app = initializeApp(firebaseConfig);\r\n      const firestoreDb = getFirestore(app);\r\n      const firebaseAuth = getAuth(app);\r\n      setDb(firestoreDb);\r\n      setAuth(firebaseAuth);\r\n      const unsubscribeAuth = onAuthStateChanged(firebaseAuth, async (user) => {\r\n        if (user) {\r\n          setUserId(user.uid);\r\n          setIsAuthReady(true);\r\n        } else {\r\n            await (initialAuthToken ? signInWithCustomToken(firebaseAuth, initialAuthToken) : signInAnonymously(firebaseAuth));\r\n        }\r\n      });\r\n      return () => unsubscribeAuth();\r\n    } catch (error) {\r\n      console.error(\"Firebase initialization error:\", error);\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (!db || !userId || !isAuthReady) return;\r\n\r\n    const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n    const unsubscribe = onSnapshot(privateStateRef, (docSnap) => {\r\n        if (docSnap.exists()) {\r\n            const privateData = docSnap.data();\r\n            setPrivatePlayerState(privateData);\r\n            if (privateData.characterCreated) {\r\n                setUiMode('playing');\r\n            } else {\r\n                setUiMode('creation');\r\n            }\r\n        } else {\r\n            setDoc(privateStateRef, getDefaultPrivatePlayerState());\r\n            setUiMode('creation');\r\n        }\r\n    }, (error) => {\r\n        console.error(\"Private player state snapshot error:\", error);\r\n        setLlmError(\"개인 정보를 불러오는 데 실패했습니다.\");\r\n        setUiMode('error');\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [db, userId, isAuthReady]);\r\n\r\n  useEffect(() => {\r\n    if (uiMode !== 'playing' || !db || !isAuthReady || !userId || !auth) return;\r\n\r\n    const gameStatusDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\n    const unsubscribeGameStatus = onSnapshot(gameStatusDocRef, (docSnap) => {\r\n      const data = docSnap.data();\r\n      setIsActionInProgress(data?.isActionInProgress || false);\r\n      setActingPlayer(data?.actingPlayer || null);\r\n    });\r\n\r\n    const chatMessagesColRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n    const unsubscribeChat = onSnapshot(query(chatMessagesColRef), (snapshot) => {\r\n        const messages = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).sort((a, b) => (a.timestamp?.toMillis() || 0) - (b.timestamp?.toMillis() || 0));\r\n        setChatMessages(messages);\r\n    });\r\n\r\n    const activeUsersColRef = collection(db, 'artifacts', appId, 'public', 'data', 'activeUsers');\r\n    const unsubscribeActiveUsers = onSnapshot(query(activeUsersColRef), (snapshot) => {\r\n      const cutoffTime = Date.now() - 60 * 1000;\r\n      const users = snapshot.docs.map(d => ({ id: d.id, ...d.data() })).filter(u => u.lastActive && u.lastActive.toMillis() > cutoffTime);\r\n      setActiveUsers(users);\r\n    });\r\n    \r\n    const updateUserPresence = async () => {\r\n      if (userId) {\r\n        const userDocRef = doc(db, 'artifacts', appId, 'public', 'data', 'activeUsers', userId);\r\n        await setDoc(userDocRef, {\r\n          lastActive: serverTimestamp(),\r\n          nickname: nickname || `플레이어 ${userId.substring(0, 4)}`,\r\n          profession: privatePlayerState.profession,\r\n        }, { merge: true });\r\n      }\r\n    };\r\n    updateUserPresence();\r\n    const presenceInterval = setInterval(updateUserPresence, 30000);\r\n\r\n    const mainScenarioRef = getMainScenarioRef(db, appId);\r\n    const unsubscribeMainScenario = onSnapshot(mainScenarioRef, (snap) => {\r\n      if (snap.exists()) {\r\n        const data = snap.data();\r\n        setGameState(prev => ({\r\n          ...prev,\r\n          log: data.storyLog || [],\r\n          choices: data.choices || [],\r\n          player: { ...prev.player, currentLocation: data.player?.currentLocation || prev.player.currentLocation }\r\n        }));\r\n      }\r\n    }, (error) => {\r\n      console.error(\"Main scenario snapshot error:\", error);\r\n      setLlmError(\"시나리오를 불러오는 중 오류가 발생했습니다.\");\r\n    });\r\n\r\n    return () => {\r\n      unsubscribeGameStatus();\r\n      unsubscribeChat();\r\n      unsubscribeActiveUsers();\r\n      unsubscribeMainScenario();\r\n      clearInterval(presenceInterval);\r\n    };\r\n  }, [db, isAuthReady, userId, auth, nickname, uiMode, privatePlayerState.profession]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (accordion.gameLog && logEndRef.current) logEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [gameState.log, accordion.gameLog]);\r\n\r\n  useEffect(() => {\r\n    if (accordion.chat && chatEndRef.current) chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [chatMessages, accordion.chat]);\r\n  \r\n  const systemPrompt = `\r\n    ### 페르소나 (Persona)\r\n    당신은 TRPG(Tabletop Role-Playing Game)의 최고 실력자 '게임 마스터(GM)'입니다. 당신의 임무는 단순한 스토리 생성이 아니라, 각 플레이어가 자신의 서사의 주인공이 되면서도, 모두가 하나의 거대한 세계관 속에서 살아 숨 쉬고 있다는 느낌을 받도록 만드는 것입니다. 당신은 유려한 문장가이자, 치밀한 설계자이며, 플레이어들의 행동에 즉각적으로 반응하는 유연한 스토리텔러입니다.\r\n\r\n    ### 핵심 철학: 하이브리드 월드 (Hybrid World)\r\n    이 세계는 '공유된 현실'과 '개인적인 서사'가 공존합니다.\r\n    1.  **공유된 현실 (Shared Reality):** 세상의 중요한 사건, 장소의 변화, 주요 NPC의 죽음 등은 모든 플레이어가 함께 경험하는 절대적인 현실입니다. 이는 'story'와 'sharedStateUpdates'로 표현됩니다.\r\n    2.  **개인적인 서사 (Personal Narrative):** 플레이어의 내면의 생각, 남들은 모르는 비밀 지식, 개인적인 퀘스트의 진행 등은 오직 그 플레이어에게만 주어지는 고유한 경험입니다. 이는 'privateStory', 'privateChoices', 'privateStateUpdates'로 표현됩니다.\r\n\r\n    ### 스토리텔링 원칙\r\n    * **보여주되, 말하지 말라 (Show, Don't Tell):** '그는 화가 났다'가 아니라 '그는 주먹을 불끈 쥐었다'라고 묘사하십시오.\r\n    * **역할 존중:** 플레이어의 직업, 능력치, 아이템, 그리고 특히 **'[개인 정보]'**에 담긴 단서('knownClues')나 퀘스트('activeQuests')는 당신이 스토리를 만들 때 가장 먼저 고려해야 할 재료입니다. 이것이 개인화된 경험의 핵심입니다.\r\n    * **살아있는 세계:** '[주변 플레이어]' 정보를 활용하여 다른 플레이어들의 존재를 이야기에 자연스럽게 녹여내십시오. 그들의 등장은 단순한 배경이 아니라, 새로운 사건의 계기가 되어야 합니다.\r\n    * **선택의 무게:** 플레이어의 선택은 반드시 의미 있는 결과를 가져와야 합니다. 사소한 선택이 나비효과를 일으킬 수도 있습니다.\r\n\r\n    ### JSON 출력 규칙 (매우 중요)\r\n    당신은 반드시 아래의 JSON 구조를 완벽하게 따라야 합니다. 설명(comment)은 절대 포함하지 마십시오.\r\n    {\r\n      \"story\": \"모든 플레이어가 볼 수 있는 공유된 사건에 대한 3인칭 서사. 이 사건의 결과로 세상이 어떻게 변했는지 객관적으로 묘사합니다.\",\r\n      \"privateStory\": \"선택을 한 플레이어만 볼 수 있는 2인칭 서사. '당신은...', '...라고 느낀다.' 와 같이 내면의 생각, 감각, 남들이 눈치채지 못한 미세한 발견 등을 묘사합니다.\",\r\n      \"choices\": [\r\n        \"다른 플레이어들도 선택할 수 있는 일반적인 행동들.\"\r\n      ],\r\n      \"privateChoices\": [\r\n        \"오직 이 플레이어의 직업, 아이템, 퀘스트, 단서 때문에 가능한 특별한 행동들.\"\r\n      ],\r\n      \"sharedStateUpdates\": {\r\n        \"location\": \"플레이어 그룹의 현재 위치. 변경되었을 경우에만 포함됩니다.\"\r\n      },\r\n      \"privateStateUpdates\": {\r\n        \"inventory\": [\"업데이트된 전체 인벤토리 목록\"],\r\n        \"stats\": {\"strength\": 12, \"intelligence\": 10, ...},\r\n        \"activeQuests\": [\"업데이트된 개인 퀘스트 목록\"],\r\n        \"knownClues\": [\"새롭게 알게 된 단서를 포함한 전체 단서 목록\"],\r\n        \"companions\": [\"업데이트된 동료 목록\"],\r\n        \"reputation\": {\"세력명\": \"상태\", ...}\r\n      }\r\n    }\r\n\r\n    ### 규칙 상세\r\n    * 'privateChoices' 예시: 플레이어의 'knownClues'에 '가문의 문장'이 있다면, \"가문의 문장을 제단에 맞춰본다.\" 와 같은 선택지를 제공하십시오.\r\n    * **상태 업데이트:** 'privateStateUpdates'의 모든 필드는 **변경 여부와 관계없이 항상 현재 플레이어의 전체 상태를 포함**하여 보내야 합니다. 예를 들어, 아이템을 하나 얻었다면, 기존 아이템을 포함한 전체 인벤토리 목록을 'inventory'에 담아야 합니다.\r\n    * 'story'와 'privateStory'는 합쳐서 500자 이내로 간결하게 작성하십시오.\r\n  `;\r\n\r\n  const callGeminiTextLLM = async (promptData) => {\r\n    setIsTextLoading(true);\r\n    setLlmRetryPrompt(promptData);\r\n    const mainApiKey = \"AIzaSyDC11rqjU30OJnLjaBFOaazZV0klM5raU8\";\r\n    const backupApiKey = \"AIzaSyAhscNjW8GmwKPuKzQ47blCY_bDanR-B84\";\r\n    const getApiUrl = (apiKey) => `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\r\n    \r\n    const history = promptData.history.map(event => event.publicStory).slice(-5);\r\n\r\n    const userPrompt = `\r\n      [상황 분석 요청]\r\n      아래 정보를 바탕으로 플레이어의 행동에 대한 결과를 생성해주십시오.\r\n\r\n      [공유 컨텍스트]\r\n      - 현재 위치: ${promptData.sharedInfo.currentLocation}\r\n      - 이전 주요 사건 로그 (최대 5개): ${JSON.stringify(history)}\r\n\r\n      [개인 정보 (현재 플레이어)]\r\n      - 직업: ${promptData.privateInfo.profession}\r\n      - 능력치: ${JSON.stringify(promptData.privateInfo.stats)}\r\n      - 인벤토리: ${JSON.stringify(promptData.privateInfo.inventory)}\r\n      - 활성 퀘스트: ${JSON.stringify(promptData.privateInfo.activeQuests)}\r\n      - 알려진 단서: ${JSON.stringify(promptData.privateInfo.knownClues)}\r\n      - 평판: ${JSON.stringify(promptData.privateInfo.reputation)}\r\n\r\n      [플레이어의 행동]\r\n      - 선택: \"${promptData.playerChoice}\"\r\n\r\n      [주변 플레이어]\r\n      - ${promptData.activeUsers.length > 0 ? JSON.stringify(promptData.activeUsers) : \"현재 주변에 다른 플레이어가 없습니다.\"}\r\n    `;\r\n\r\n    const payload = { contents: [{ role: \"user\", parts: [{ text: systemPrompt }] }, { role: \"model\", parts: [{ text: \"{}\" }] }, { role: \"user\", parts: [{ text: userPrompt }] }] };\r\n\r\n    const tryGeminiCall = async (apiKey) => fetch(getApiUrl(apiKey), { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(payload) });\r\n\r\n    try {\r\n      let response = await tryGeminiCall(mainApiKey);\r\n      if (!response.ok) {\r\n        response = await tryGeminiCall(backupApiKey);\r\n      }\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const result = await response.json();\r\n      const llmOutputText = result.candidates?.[0]?.content?.parts?.[0]?.text;\r\n      const jsonMatch = llmOutputText?.match(/\\{[\\s\\S]*\\}/);\r\n      if (jsonMatch) return JSON.parse(jsonMatch[0]);\r\n      throw new Error(\"Valid JSON object not found in LLM response.\");\r\n    } catch (error) {\r\n      console.error(\"LLM API call error:\", error);\r\n      setLlmError(error.message || 'LLM 호출 실패');\r\n      return null;\r\n    } finally {\r\n      setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const sendChatMessage = async () => {\r\n    if (!db || !userId || !isAuthReady || !currentChatMessage.trim()) return;\r\n    try {\r\n      const chatCollectionRef = collection(db, 'artifacts', appId, 'public', 'data', 'chatMessages');\r\n      await addDoc(chatCollectionRef, { userId, displayName: getDisplayName(userId), message: currentChatMessage, timestamp: serverTimestamp() });\r\n      setCurrentChatMessage('');\r\n    } catch (error) {\r\n      console.error(\"Error sending chat message:\", error);\r\n    }\r\n  };\r\n\r\n  const updateGameStateFromLLM = async (llmResponse, playerChoice) => {\r\n    if (!db || !appId || !userId) return;\r\n\r\n    const mainScenarioRef = getMainScenarioRef(db, appId);\r\n    const newChoices = [...(llmResponse.choices || []), ...(llmResponse.privateChoices || [])];\r\n\r\n    const newEvent = {\r\n        actor: { id: userId, displayName: getDisplayName(userId) },\r\n        action: playerChoice,\r\n        publicStory: llmResponse.story || \"특별한 일은 일어나지 않았다.\",\r\n        privateStories: { [userId]: llmResponse.privateStory || null },\r\n        timestamp: new Date()\r\n    };\r\n\r\n    try {\r\n        await runTransaction(db, async (transaction) => {\r\n            const scenarioDoc = await transaction.get(mainScenarioRef);\r\n            if (!scenarioDoc.exists()) throw \"시나리오 문서가 존재하지 않습니다.\";\r\n\r\n            const currentData = scenarioDoc.data();\r\n            const newStoryLog = [...(currentData.storyLog || []), newEvent];\r\n\r\n            transaction.update(mainScenarioRef, {\r\n                storyLog: newStoryLog,\r\n                choices: newChoices,\r\n                'player.currentLocation': llmResponse.sharedStateUpdates?.location || currentData.player.currentLocation,\r\n                lastUpdate: serverTimestamp()\r\n            });\r\n        });\r\n\r\n        const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n        if (llmResponse.privateStateUpdates) {\r\n            await setDoc(privateStateRef, llmResponse.privateStateUpdates, { merge: false });\r\n        }\r\n    } catch (error) {\r\n        console.error(\"공유 상태 업데이트 실패:\", error);\r\n        setLlmError(\"시나리오를 업데이트하는 데 실패했습니다.\");\r\n    }\r\n  };\r\n  \r\n  const handleChoiceClick = async (choice) => {\r\n    if (isTextLoading || (uiMode === 'playing' && isActionInProgress)) return;\r\n\r\n    if (uiMode === 'creation') {\r\n        setIsTextLoading(true);\r\n        const choiceKey = choice.split('.')[0];\r\n        const selectedProfession = professions[choiceKey];\r\n\r\n        if (selectedProfession) {\r\n            const privateStateRef = getPrivatePlayerStateRef(db, appId, userId);\r\n            await setDoc(privateStateRef, {\r\n                ...getDefaultPrivatePlayerState(),\r\n                characterCreated: true,\r\n                profession: selectedProfession.name,\r\n                initialMotivation: selectedProfession.motivation,\r\n            }, { merge: true });\r\n\r\n            const mainScenarioRef = getMainScenarioRef(db, appId);\r\n            const newEvent = {\r\n                actor: { id: userId, displayName: getDisplayName(userId) },\r\n                action: \"여관에 들어선다\",\r\n                publicStory: `어둠침침한 여관 문이 삐걱거리며 열리더니, 새로운 모험가가 모습을 드러냅니다. 바로 '${getDisplayName(userId)}'라는 이름의 ${selectedProfession.name}입니다.`,\r\n                privateStories: {\r\n                  [userId]: selectedProfession.motivation\r\n                },\r\n                timestamp: new Date()\r\n            };\r\n\r\n            try {\r\n                await runTransaction(db, async (transaction) => {\r\n                    const scenarioDoc = await transaction.get(mainScenarioRef);\r\n                    if (!scenarioDoc.exists()) {\r\n                        const initialGameState = getDefaultGameState();\r\n                        const initialChoices = [\"여관을 둘러본다.\", \"다른 모험가에게 말을 건다.\", \"여관 주인에게 정보를 묻는다.\"];\r\n                        transaction.set(mainScenarioRef, {\r\n                            ...initialGameState,\r\n                            storyLog: [newEvent],\r\n                            choices: initialChoices,\r\n                            lastUpdate: serverTimestamp()\r\n                        });\r\n                    } else {\r\n                        const currentData = scenarioDoc.data();\r\n                        const newStoryLog = [...(currentData.storyLog || []), newEvent];\r\n                        transaction.update(mainScenarioRef, { storyLog: newStoryLog, lastUpdate: serverTimestamp() });\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                console.error(\"등장 이벤트 추가 실패: \", e);\r\n                setLlmError(\"게임 세계에 합류하는 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setIsTextLoading(false);\r\n            }\r\n        }\r\n        return;\r\n    }\r\n\r\n    const gameStatusRef = doc(db, 'artifacts', appId, 'public', 'data', 'gameStatus', 'status');\r\n    try {\r\n        await runTransaction(db, async (transaction) => {\r\n            const statusDoc = await transaction.get(gameStatusRef);\r\n            if (statusDoc.exists() && statusDoc.data().isActionInProgress) {\r\n                throw new Error(\"다른 플레이어가 행동 중입니다. 잠시 후 다시 시도해주세요.\");\r\n            }\r\n            transaction.set(gameStatusRef, {\r\n                isActionInProgress: true,\r\n                actingPlayer: { id: userId, displayName: getDisplayName(userId) }\r\n            }, { merge: true });\r\n        });\r\n\r\n        const promptData = {\r\n            playerChoice: choice,\r\n            sharedInfo: { currentLocation: gameState.player.currentLocation },\r\n            privateInfo: privatePlayerState,\r\n            history: gameState.log,\r\n            activeUsers: activeUsers.map(u => ({ nickname: getDisplayName(u.id), profession: u.profession })).filter(u => u.id !== userId),\r\n        };\r\n        \r\n        const llmResponse = await callGeminiTextLLM(promptData);\r\n        if (llmResponse) {\r\n            await updateGameStateFromLLM(llmResponse, choice);\r\n            setLlmError(null);\r\n        } else {\r\n            throw new Error(\"LLM으로부터 유효한 응답을 받지 못했습니다.\");\r\n        }\r\n    } catch (error) {\r\n        console.error(\"행동 처리 중 오류:\", error.message);\r\n        setLlmError(error.message);\r\n    } finally {\r\n        await setDoc(gameStatusRef, { isActionInProgress: false, actingPlayer: null }, { merge: true });\r\n        setIsTextLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleAccordion = (key) => {\r\n    setAccordion(prev => ({ ...prev, [key]: !prev[key] }));\r\n  };\r\n\r\n  if (showNicknameModal) {\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-gray-100\">닉네임을 입력하세요</h3>\r\n            <input className=\"w-full p-3 rounded-md bg-gray-700 border border-gray-600 text-gray-100 placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 text-lg\" placeholder=\"닉네임\" value={nicknameInput} onChange={e => setNicknameInput(e.target.value)} onKeyDown={e => { if (e.key === 'Enter') handleNicknameSubmit(); }} autoFocus />\r\n            <button className=\"w-full px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md transition duration-300 disabled:opacity-50\" onClick={handleNicknameSubmit} disabled={!nicknameInput.trim()}>시작하기</button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  if (uiMode === 'loading') {\r\n    return <div className=\"min-h-screen bg-gray-900 text-gray-100 flex items-center justify-center\"><div className=\"animate-spin rounded-full h-16 w-16 border-b-2 border-gray-300\"></div><span className=\"ml-4 text-xl\">데이터를 불러오는 중...</span></div>;\r\n  }\r\n  \r\n  if (uiMode === 'error') {\r\n     return <div className=\"min-h-screen bg-gray-900 text-red-400 flex items-center justify-center\"><p>{llmError}</p></div>\r\n  }\r\n\r\n  if (uiMode === 'creation') {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4\">\r\n        <div className=\"w-full max-w-2xl text-center\">\r\n            <h1 className=\"text-3xl font-bold mb-2 text-yellow-300\">모험의 서막</h1>\r\n            <p className=\"text-lg text-gray-300 mb-8\">당신은 어떤 운명을 선택하시겠습니까?</p>\r\n            <div className=\"flex flex-col gap-4\">\r\n                {Object.keys(professions).map(key => (\r\n                    <button\r\n                        key={key}\r\n                        onClick={() => handleChoiceClick(`${key}. ${professions[key].name}`)}\r\n                        disabled={isTextLoading}\r\n                        className=\"px-6 py-4 bg-gray-800 hover:bg-gray-700 border border-gray-600 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-wait text-left\"\r\n                    >\r\n                        <p className=\"text-lg text-blue-300\">{`${key}. ${professions[key].name}`}</p>\r\n                        <p className=\"text-sm font-normal text-gray-300 mt-1\">{professions[key].motivation}</p>\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {isTextLoading && <div className=\"mt-4 flex justify-center items-center\"><div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-gray-300\"></div><p className=\"ml-3 text-gray-400\">세계에 당신의 존재를 기록하는 중...</p></div>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900 text-gray-100 flex flex-col items-center justify-center p-4 font-sans\">\r\n      {showResetModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center p-4 z-50\">\r\n          <div className=\"bg-gray-800 rounded-lg shadow-xl p-6 w-full max-w-md space-y-4\">\r\n            <h3 className=\"text-xl font-bold text-red-400\">⚠️ 모든 데이터를 초기화할까요?</h3>\r\n            <p className=\"text-gray-200\">이 작업은 되돌릴 수 없습니다. 모든 시나리오, 로그, 유저, 채팅 데이터가 삭제됩니다.</p>\r\n            <div className=\"flex justify-end gap-3\">\r\n              <button className=\"px-4 py-2 bg-gray-600 hover:bg-gray-700 font-bold rounded-md\" onClick={() => setShowResetModal(false)} disabled={isResetting}>취소</button>\r\n              <button className=\"px-4 py-2 bg-red-600 hover:bg-red-700 font-bold rounded-md\" onClick={resetAllGameData} disabled={isResetting}>{isResetting ? '초기화 중...' : '초기화'}</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"w-full max-w-5xl bg-gray-800 rounded-lg shadow-xl p-6 md:p-8 flex flex-col lg:flex-row space-y-6 lg:space-y-0 lg:space-x-6\">\r\n        <div className=\"flex flex-col w-full lg:w-2/3 space-y-6\">\r\n          <div className=\"mb-2\">\r\n            <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('gameLog')}>\r\n              <h2 className=\"text-lg font-bold text-gray-100\">게임 로그</h2>\r\n              <div className=\"text-xl\">{accordion.gameLog ? '▼' : '▲'}</div>\r\n            </div>\r\n            {accordion.gameLog && (\r\n              <>\r\n                <div className=\"flex justify-end mb-2\">\r\n                  <button className=\"px-3 py-1 bg-red-600 hover:bg-red-700 text-white text-xs rounded-md\" onClick={() => setShowResetModal(true)}>전체 데이터 초기화</button>\r\n                </div>\r\n                <div className=\"flex-grow bg-gray-700 p-4 rounded-md overflow-y-auto h-96 custom-scrollbar text-sm md:text-base leading-relaxed\" style={{ maxHeight: '24rem' }}>\r\n                  {gameState.log.map((event, index) => (\r\n                    <div key={index} className=\"mb-4 p-2 rounded bg-gray-900/50\">\r\n                      {event.actor?.displayName && event.action && (\r\n                         <p className=\"text-yellow-300 font-semibold italic text-sm\">\r\n                            {event.actor.displayName} 님이 {event.action} 선택\r\n                         </p>\r\n                      )}\r\n                      <p className=\"whitespace-pre-wrap mt-1\" dangerouslySetInnerHTML={{ __html: (event.publicStory || '').replace(/\\n/g, '<br />') }}></p>\r\n                      {event.privateStories && event.privateStories[userId] && (\r\n                        <p className=\"whitespace-pre-wrap mt-2 p-2 rounded bg-blue-900/30 border-l-4 border-blue-400 text-blue-200\">\r\n                          <span className=\"font-bold\">[당신만 아는 사실] </span>\r\n                          {event.privateStories[userId]}\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                  {isTextLoading && (\r\n                    <div className=\"flex justify-center items-center mt-4\">\r\n                      <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-300\"></div>\r\n                      <span className=\"ml-3 text-gray-400\">이야기를 생성 중...</span>\r\n                    </div>\r\n                  )}\r\n                  {isActionInProgress && (!actingPlayer || actingPlayer.id !== userId) && (\r\n                      <div className=\"text-center text-yellow-400 font-semibold p-2 bg-black bg-opacity-20 rounded-md mt-2\">\r\n                          {actingPlayer ? `${getDisplayName(actingPlayer.id)}님이 선택하고 있습니다...` : \"다른 플레이어가 선택하고 있습니다...\"}\r\n                      </div>\r\n                  )}\r\n                  {llmError && <div className=\"text-red-400 p-2 bg-red-900 bg-opacity-50 rounded mt-2\">오류: {llmError}</div>}\r\n                  <div ref={logEndRef} />\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex flex-col gap-3\">\r\n            {gameState.choices.map((choice, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-md shadow-lg transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                onClick={() => handleChoiceClick(choice)}\r\n                disabled={isTextLoading || isActionInProgress}\r\n              >\r\n                {choice}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w-full lg:w-1/3 flex flex-col space-y-6 bg-gray-700 p-4 rounded-lg shadow-inner\">\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('playerInfo')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">내 정보</h4>\r\n                    <div className=\"text-xl\">{accordion.playerInfo ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.playerInfo && (\r\n                  <div className=\"bg-gray-600 p-3 rounded-md text-xs md:text-sm text-gray-300 space-y-1 h-48 overflow-y-auto custom-scrollbar\">\r\n                    <p><span className=\"font-semibold text-blue-300\">이름:</span> {getDisplayName(userId)}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">직업:</span> {privatePlayerState.profession}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">위치:</span> {gameState.player.currentLocation}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">능력치:</span> 힘({privatePlayerState.stats.strength}) 지능({privatePlayerState.stats.intelligence}) 민첩({privatePlayerState.stats.agility}) 카리스마({privatePlayerState.stats.charisma})</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">인벤토리:</span> {privatePlayerState.inventory.join(', ') || '비어있음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">퀘스트:</span> {privatePlayerState.activeQuests.join(', ') || '없음'}</p>\r\n                    <p><span className=\"font-semibold text-blue-300\">단서:</span> {privatePlayerState.knownClues.join(', ') || '없음'}</p>\r\n                  </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('users')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">현재 플레이어들</h4>\r\n                    <div className=\"text-xl\">{accordion.users ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.users && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md h-48 overflow-y-auto custom-scrollbar\">\r\n                        {activeUsers.length > 0 ? (\r\n                            <ul className=\"text-sm text-gray-300 space-y-1\">\r\n                                {activeUsers.map(user => (\r\n                                    <li key={user.id} className=\"truncate p-1 rounded-md\">\r\n                                        <span className=\"font-medium text-green-300\">{getDisplayName(user.id)}</span>\r\n                                        <span className=\"text-gray-400 text-xs\"> ({user.profession || '모험가'})</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        ) : <p className=\"text-sm text-gray-400\">활동 중인 플레이어가 없습니다.</p>}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className=\"mb-2\">\r\n                <div className=\"flex items-center justify-between cursor-pointer select-none\" onClick={() => toggleAccordion('chat')}>\r\n                    <h4 className=\"text-md font-semibold text-gray-200\">공개 채팅</h4>\r\n                    <div className=\"text-xl\">{accordion.chat ? '▼' : '▲'}</div>\r\n                </div>\r\n                {accordion.chat && (\r\n                    <div className=\"bg-gray-600 p-3 rounded-md flex flex-col h-64\">\r\n                        <div className=\"flex-grow overflow-y-auto custom-scrollbar mb-3 text-sm space-y-2\">\r\n                            {chatMessages.map((msg) => (\r\n                                <div key={msg.id}><p><span className=\"font-medium text-yellow-300\">{getDisplayName(msg.userId)}:</span> {msg.message}</p></div>\r\n                            ))}\r\n                            <div ref={chatEndRef} />\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <input type=\"text\" className=\"flex-grow p-2 rounded-l-md bg-gray-700 border border-gray-600\" value={currentChatMessage} onChange={(e) => setCurrentChatMessage(e.target.value)} onKeyPress={(e) => e.key === 'Enter' && sendChatMessage()} disabled={!isAuthReady} />\r\n                            <button className=\"px-4 py-2 bg-blue-600 hover:bg-blue-700 font-bold rounded-r-md\" onClick={sendChatMessage} disabled={!isAuthReady || !currentChatMessage.trim()}>보내기</button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n      </div>\r\n\r\n      <style>\r\n        {`\r\n        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');\r\n        body { font-family: 'Noto Sans KR', sans-serif; }\r\n        .custom-scrollbar::-webkit-scrollbar { width: 8px; }\r\n        .custom-scrollbar::-webkit-scrollbar-track { background: #4a5568; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb { background: #6b7280; border-radius: 10px; }\r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover { background: #9ca3af; }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}